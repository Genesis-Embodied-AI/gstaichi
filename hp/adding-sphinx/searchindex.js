Search.setIndex({"alltitles": {"1. Activity checking": [[99, "activity-checking"]], "2. Activation": [[99, "activation"]], "3. Deactivation": [[99, "deactivation"]], "4. Ancestor index query": [[99, "ancestor-index-query"]], "A recap: Taichi kernel vs. Taichi inline function vs. Taichi real function": [[111, "a-recap-taichi-kernel-vs-taichi-inline-function-vs-taichi-real-function"]], "API Reference": [[0, null]], "Abstract syntax tree (AST)": [[107, "abstract-syntax-tree-ast"]], "Accelerate PyTorch with Taichi": [[105, null]], "Accelerate Python with Taichi": [[104, null]], "Accessing elements in a matrix field": [[95, "accessing-elements-in-a-matrix-field"]], "Accessing elements in a scalar field": [[95, "accessing-elements-in-a-scalar-field"]], "Accessing elements in a struct field": [[95, "accessing-elements-in-a-struct-field"]], "Accessing elements in a vector field": [[95, "accessing-elements-in-a-vector-field"]], "Advanced": [[108, null]], "Advanced Optimization": [[100, "advanced-optimization"]], "Advanced mode": [[117, "advanced-mode"]], "Advanced usage": [[94, "advanced-usage"]], "Ahead-of-time (AOT)": [[107, "ahead-of-time-aot"]], "Aliases": [[123, "aliases"]], "Aliasing": [[107, "aliasing"]], "An entry-level example": [[94, "an-entry-level-example"]], "Annotated assignment statements": [[120, "annotated-assignment-statements"]], "Annotation": [[107, "annotation"]], "AoS extension: hierarchical fields": [[96, "aos-extension-hierarchical-fields"]], "AoS versus SoA": [[96, "aos-versus-soa"]], "Applicable backends": [[100, "applicable-backends"]], "Arguments": [[111, "arguments"], [111, "id1"], [111, "id2"]], "Arithmetic operators": [[121, "arithmetic-operators"]], "Array of structures (AOS)": [[107, "array-of-structures-aos"]], "Assert statement": [[107, "assert-statement"]], "Assignment expressions": [[120, "assignment-expressions"]], "Assignment statements": [[120, "assignment-statements"]], "Associate Functions with the struct type": [[90, "associate-functions-with-the-struct-type"]], "At most one return statement": [[111, "at-most-one-return-statement"]], "Atomic operation": [[107, "atomic-operation"]], "Atoms": [[120, "atoms"]], "Attribute references": [[120, "attribute-references"]], "Attributes": [[9, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [13, "attributes"], [14, "attributes"], [15, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [20, "attributes"], [21, "attributes"], [24, "attributes"], [25, "attributes"], [31, "attributes"], [41, "attributes"], [49, "attributes"], [52, "attributes"], [68, "attributes"], [79, "attributes"], [81, "attributes"], [83, "attributes"], [84, "attributes"], [86, "attributes"], [87, "attributes"]], "Augmented assignment": [[107, "augmented-assignment"]], "Augmented assignment statements": [[120, "augmented-assignment-statements"]], "Automatic differentiation": [[107, "automatic-differentiation"]], "Automatic type cast": [[111, "automatic-type-cast"]], "Avoid mixed usage of parallel for-loop and non-for statements": [[101, "avoid-mixed-usage-of-parallel-for-loop-and-non-for-statements"]], "Backend": [[111, "backend"]], "Backends": [[119, "backends"]], "Background: Thread hierarchy of GPUs": [[116, "background-thread-hierarchy-of-gpus"]], "Basic": [[108, null]], "Basic concepts": [[120, "basic-concepts"]], "Binary arithmetic operations": [[120, "binary-arithmetic-operations"]], "Binary bitwise operations": [[120, "binary-bitwise-operations"]], "Bit vectorization": [[93, "bit-vectorization"]], "Bitmask": [[107, "bitmask"]], "Bitmasked SNode": [[99, "bitmasked-snode"]], "Bitpacked fields": [[93, "bitpacked-fields"]], "Bitwise operators": [[121, "bitwise-operators"]], "Block Local Storage (BLS)": [[116, "block-local-storage-bls"]], "Boolean operations": [[120, "boolean-operations"]], "Builtin-alike functions": [[121, "builtin-alike-functions"]], "CUDA issues": [[103, "cuda-issues"]], "Calls": [[120, "calls"]], "Can I call a kernel inside a Taichi function?": [[111, "can-i-call-a-kernel-inside-a-taichi-function"]], "Can I specify different backends for each kernel separately?": [[111, "can-i-specify-different-backends-for-each-kernel-separately"]], "Can I use @ti.kernel to accelerate a NumPy function?": [[94, "can-i-use-ti-kernel-to-accelerate-a-numpy-function"]], "Can Taichi interact with other Python packages such as matplotlib?": [[102, "can-taichi-interact-with-other-python-packages-such-as-matplotlib"]], "Case study: gravity simulation": [[101, "case-study-gravity-simulation"]], "Checkpointing": [[101, "checkpointing"]], "Classes": [[3, "classes"], [4, "classes"], [5, "classes"], [8, "classes"], [10, "classes"], [25, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [35, "classes"], [37, "classes"], [40, "classes"], [43, "classes"], [45, "classes"], [48, "classes"], [53, "classes"], [58, "classes"], [60, "classes"], [63, "classes"], [64, "classes"], [65, "classes"], [66, "classes"], [70, "classes"], [77, "classes"], [79, "classes"], [81, "classes"]], "Code transformation and optimizations": [[109, "code-transformation-and-optimizations"]], "Column-major order": [[107, "column-major-order"]], "Common rules of binary operations": [[120, "common-rules-of-binary-operations"]], "Comparison operators": [[121, "comparison-operators"]], "Comparisons": [[120, "comparisons"]], "Compilation": [[119, "compilation"]], "Compile-time branching": [[91, "compile-time-branching"]], "Compile-time evaluations": [[91, "compile-time-evaluations"]], "Compile-time recursion": [[111, "compile-time-recursion"]], "Compile-time recursion of ti.func": [[91, "compile-time-recursion-of-ti-func"]], "Compile-time ti.static_assert": [[100, "compile-time-ti-static-assert"]], "Compile-time ti.static_print": [[100, "compile-time-ti-static-print"]], "Complex number operations": [[114, "complex-number-operations"]], "Compound statements": [[120, "compound-statements"]], "Compound type": [[107, "compound-type"]], "Compound types": [[124, "compound-types"]], "Comprehensions": [[118, "comprehensions"]], "Computation on spatially sparse data structures": [[99, "computation-on-spatially-sparse-data-structures"]], "Compute shader": [[107, "compute-shader"]], "Compute types": [[93, "compute-types"]], "Conciser tracebacks in Taichi scope": [[100, "conciser-tracebacks-in-taichi-scope"]], "Conditional expressions": [[120, "conditional-expressions"]], "Conditional operations": [[121, "conditional-operations"]], "Considerations: Matrix size": [[95, "considerations-matrix-size"]], "Coordinate Offsets": [[98, null]], "Coordinate offset": [[107, "coordinate-offset"]], "Count the primes": [[104, "count-the-primes"]], "Create a struct from a Python class": [[90, "create-a-struct-from-a-python-class"]], "Customize ML operators": [[105, "customize-ml-operators"]], "Customize default primitive types": [[124, "customize-default-primitive-types"]], "Data containers for quantized data types": [[93, "data-containers-for-quantized-data-types"]], "Data layouts": [[116, "data-layouts"]], "Data preprocessing": [[105, "data-preprocessing"]], "Data race": [[107, "data-race"]], "Data structure organization": [[110, "data-structure-organization"]], "Data structures": [[102, "data-structures"]], "Data transfer between NumPy arrays and Taichi fields": [[94, "data-transfer-between-numpy-arrays-and-taichi-fields"]], "Data transfer between PyTorch/Paddle tensors and Taichi fields": [[94, "data-transfer-between-pytorch-paddle-tensors-and-taichi-fields"]], "Data type Aliases": [[124, "data-type-aliases"]], "Data-Oriented Class": [[89, null]], "Data-oriented programming (DOP)": [[107, "data-oriented-programming-dop"]], "Debugging": [[100, null]], "Debugging tips": [[100, "debugging-tips"]], "Declaration": [[95, "declaration"], [95, "id1"], [95, "id2"], [95, "id3"]], "Define a Taichi field": [[106, "define-a-taichi-field"]], "Develop": [[119, "develop"]], "Developement related": [[102, "developement-related"]], "DiffTaichi": [[101, "difftaichi"]], "Differences between Taichi and Python Programs": [[118, null]], "Differentiable": [[108, null]], "Differentiable Programming": [[101, null]], "Differentiable programming": [[107, "differentiable-programming"]], "Dimensionality-independent programming using grouped indices": [[91, "dimensionality-independent-programming-using-grouped-indices"]], "Does Taichi provide a barrier synchronization function similar to __syncthreads() or glMemoryBarrier()?": [[102, "does-taichi-provide-a-barrier-synchronization-function-similar-to-syncthreads-or-glmemorybarrier"]], "Does Taichi support bool type?": [[102, "does-taichi-support-bool-type"]], "Domain-specific language (DSL)": [[107, "domain-specific-language-dsl"]], "Dynamic SNode": [[99, "dynamic-snode"]], "Dynamic programming: longest common subsequence": [[104, "dynamic-programming-longest-common-subsequence"]], "Eulerian Fluid": [[93, "eulerian-fluid"]], "Example: Tuning the block-level parallelism of a for-loop": [[116, "example-tuning-the-block-level-parallelism-of-a-for-loop"]], "Exceptions": [[38, "exceptions"]], "Explicit type casting": [[124, "explicit-type-casting"]], "Explicitly manipulating and querying sparsity": [[99, "explicitly-manipulating-and-querying-sparsity"]], "Expression lists": [[120, "expression-lists"]], "Expression statements": [[120, "expression-statements"]], "Expressions": [[120, "expressions"]], "Extending Taichi Autodiff system": [[101, "extending-taichi-autodiff-system"]], "External array": [[107, "external-array"]], "External array shapes": [[94, "external-array-shapes"]], "FAQ": [[94, "faq"], [97, "faq"], [111, "faq"]], "FAQs": [[108, null]], "Field": [[107, "field"]], "Field metadata": [[91, "field-metadata"]], "Field shape": [[107, "field-shape"]], "Fields": [[95, null]], "Fields (advanced)": [[96, null]], "Fill a scalar field with a given value": [[95, "fill-a-scalar-field-with-a-given-value"]], "For-loop decorators": [[116, "for-loop-decorators"]], "Force inline": [[111, "force-inline"]], "Forward-Mode Autodiff": [[101, "forward-mode-autodiff"]], "Fragment shader": [[107, "fragment-shader"]], "Frequently Asked Questions": [[102, null]], "From Python to Taichi": [[102, "from-python-to-taichi"]], "From Taichi to Python": [[102, "from-taichi-to-python"]], "Functions": [[3, "functions"], [5, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [20, "functions"], [21, "functions"], [22, "functions"], [23, "functions"], [24, "functions"], [25, "functions"], [26, "functions"], [31, "functions"], [36, "functions"], [41, "functions"], [43, "functions"], [44, "functions"], [46, "functions"], [47, "functions"], [49, "functions"], [50, "functions"], [51, "functions"], [53, "functions"], [54, "functions"], [56, "functions"], [57, "functions"], [58, "functions"], [60, "functions"], [63, "functions"], [68, "functions"], [70, "functions"], [71, "functions"], [72, "functions"], [73, "functions"], [78, "functions"], [80, "functions"], [84, "functions"], [85, "functions"]], "Further reading": [[99, "further-reading"]], "GLSL-standard functions": [[114, "glsl-standard-functions"]], "Game of Life": [[93, "game-of-life"]], "Getting started": [[108, null]], "Global Data Access Rules": [[101, "global-data-access-rules"]], "Global Settings": [[119, null]], "Global data access rule violation checker": [[101, "global-data-access-rule-violation-checker"]], "Global variable": [[107, "global-variable"]], "Global variables are compile-time constants": [[111, "global-variables-are-compile-time-constants"]], "Glossary": [[107, null]], "Going high precision": [[119, "going-high-precision"]], "Grid-Stride Loop": [[107, "grid-stride-loop"]], "Hello, World!": [[106, null]], "How can I swap elements between two fields in the Taichi scope? a,b = b,a does not work.": [[102, "how-can-i-swap-elements-between-two-fields-in-the-taichi-scope-a-b-b-a-does-not-work"]], "How can I write data in Taichi fields to files? write() does not work.": [[102, "how-can-i-write-data-in-taichi-fields-to-files-write-does-not-work"]], "How do I accurately initialize a vector or matrix with f64 precision when my default floating-point precision (default_fp) is f32?": [[102, "how-do-i-accurately-initialize-a-vector-or-matrix-with-f64-precision-when-my-default-floating-point-precision-default-fp-is-f32"]], "How do I compute the minimum/maximum of a field?": [[102, "how-do-i-compute-the-minimum-maximum-of-a-field"]], "How do I declare a field with a dynamic length?": [[102, "how-do-i-declare-a-field-with-a-dynamic-length"]], "How do I program on less structured data structures (such as graphs and tetrahedral meshes) in Taichi?": [[102, "how-do-i-program-on-less-structured-data-structures-such-as-graphs-and-tetrahedral-meshes-in-taichi"]], "How to use automatic differentiation with ndarrays?": [[97, "how-to-use-automatic-differentiation-with-ndarrays"]], "Identifiers (Names)": [[120, "identifiers-names"]], "Imperative programming": [[107, "imperative-programming"]], "Implement a depthwise convolution operator with CUDA": [[105, "implement-a-depthwise-convolution-operator-with-cuda"]], "Implement a depthwise convolution operator with PyTorch": [[105, "implement-a-depthwise-convolution-operator-with-pytorch"]], "Implement a depthwise convolution operator with Python": [[105, "implement-a-depthwise-convolution-operator-with-python"]], "Implement a depthwise convolution operator with Taichi": [[105, "implement-a-depthwise-convolution-operator-with-taichi"]], "Implicit type casting": [[124, "implicit-type-casting"]], "Implicit type casting in assignments": [[124, "implicit-type-casting-in-assignments"]], "Implicit type casting in binary operations": [[124, "implicit-type-casting-in-binary-operations"]], "Import Taichi": [[106, "import-taichi"]], "Inheritance of Data-Oriented classes": [[89, "inheritance-of-data-oriented-classes"]], "Initialization": [[124, "initialization"]], "Initialize Taichi": [[106, "initialize-taichi"]], "Installation": [[102, "installation"], [106, "installation"]], "Installation Troubleshooting": [[103, null]], "Installation interrupted": [[103, "installation-interrupted"]], "Instantiation": [[107, "instantiation"]], "Integration with other libs/softwares": [[102, "integration-with-other-libs-softwares"]], "Interacting with External Arrays": [[94, null]], "Intermediate representation (IR)": [[107, "intermediate-representation-ir"], [110, "intermediate-representation-ir"]], "Internal Designs": [[110, null]], "Internals": [[108, null]], "Introduction": [[101, "introduction"], [120, "introduction"]], "Just-in-time (JIT) compilation": [[107, "just-in-time-jit-compilation"]], "Kernel": [[107, "kernel"], [111, "kernel"]], "Kernel compilation with ndarray template": [[97, "kernel-compilation-with-ndarray-template"]], "Kernel launching": [[109, "kernel-launching"]], "Kernel registration": [[109, "kernel-registration"]], "KernelProfiler": [[117, "kernelprofiler"]], "Kernels": [[108, null]], "Kernels and Functions": [[111, null]], "Kernels and functions": [[106, "kernels-and-functions"]], "Key takeaways": [[106, "key-takeaways"]], "Key terms": [[111, "key-terms"]], "Language Reference": [[120, null]], "Layout 101: from shape to ti.root.X": [[96, "layout-101-from-shape-to-ti-root-x"]], "Lexical-scoped": [[107, "lexical-scoped"]], "Life of a Taichi Kernel": [[109, null]], "Limitations of Taichi autodiff system": [[101, "limitations-of-taichi-autodiff-system"]], "Linear Solver": [[113, null]], "List and dictionary displays": [[120, "list-and-dictionary-displays"]], "List generation": [[110, "list-generation"]], "Literals": [[120, "literals"]], "Local Storage Optimizations": [[116, "local-storage-optimizations"]], "Local variable": [[107, "local-variable"]], "Logging": [[119, "logging"]], "Logical operators": [[121, "logical-operators"]], "Loop unrolling": [[91, "loop-unrolling"], [107, "loop-unrolling"]], "MLS-MPM": [[93, "mls-mpm"]], "Manage memory occupancy": [[96, "manage-memory-occupancy"]], "Manual field allocation and destruction": [[96, "manual-field-allocation-and-destruction"]], "Math": [[108, null]], "Math Module": [[114, null]], "Mathematical functions": [[114, "mathematical-functions"]], "Matrices and vectors": [[124, "matrices-and-vectors"]], "Matrix & vector metadata": [[91, "matrix-vector-metadata"]], "Matrix fields": [[95, "matrix-fields"]], "Matrix-free iterative solver": [[113, "matrix-free-iterative-solver"]], "Megakernel": [[107, "megakernel"]], "Membership test operations": [[120, "membership-test-operations"]], "Metadata": [[95, "metadata"], [107, "metadata"]], "Metaprogramming": [[91, null], [107, "metaprogramming"], [111, "metaprogramming"]], "Module Contents": [[3, "module-contents"], [5, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"], [43, "module-contents"], [44, "module-contents"], [45, "module-contents"], [46, "module-contents"], [47, "module-contents"], [48, "module-contents"], [49, "module-contents"], [50, "module-contents"], [51, "module-contents"], [52, "module-contents"], [53, "module-contents"], [54, "module-contents"], [56, "module-contents"], [57, "module-contents"], [58, "module-contents"], [60, "module-contents"], [63, "module-contents"], [64, "module-contents"], [65, "module-contents"], [66, "module-contents"], [68, "module-contents"], [70, "module-contents"], [71, "module-contents"], [72, "module-contents"], [73, "module-contents"], [77, "module-contents"], [78, "module-contents"], [79, "module-contents"], [80, "module-contents"], [81, "module-contents"], [83, "module-contents"], [84, "module-contents"], [85, "module-contents"], [86, "module-contents"], [87, "module-contents"]], "More complicated quantization schemes": [[93, "more-complicated-quantization-schemes"]], "Motivation": [[99, "motivation"]], "Notes": [[90, "notes"]], "Object-oriented programming (OOP)": [[107, "object-oriented-programming-oop"]], "Objective Data-Oriented Programming": [[92, null]], "Objective-oriented programming": [[102, "objective-oriented-programming"]], "Offline Cache": [[116, "offline-cache"]], "Operator is": [[118, "operator-is"]], "Operators": [[121, null]], "Organizing an efficient data layout": [[96, "organizing-an-efficient-data-layout"]], "Other arithmetic functions": [[121, "other-arithmetic-functions"]], "Out-of-bound array access": [[100, "out-of-bound-array-access"]], "Outer-most loops in Taichi kernels are by default parallel. How can I serialize one of them?": [[102, "outer-most-loops-in-taichi-kernels-are-by-default-parallel-how-can-i-serialize-one-of-them"]], "Overview": [[117, "overview"]], "Package Contents": [[4, "package-contents"]], "Padding with PyTorch": [[105, "padding-with-pytorch"]], "Padding with Taichi": [[105, "padding-with-taichi"]], "Parallel for loops": [[106, "parallel-for-loops"]], "Parallel programming": [[102, "parallel-programming"]], "Parenthesized forms": [[120, "parenthesized-forms"]], "Passing a scalar by reference": [[111, "passing-a-scalar-by-reference"]], "Performance Tuning": [[108, null], [116, null]], "Performance comparison": [[105, "performance-comparison"], [105, "id3"]], "Plain old data (POD)": [[107, "plain-old-data-pod"]], "Pointer SNode": [[99, "pointer-snode"]], "Precision related": [[102, "precision-related"]], "Prerequisites": [[106, "prerequisites"]], "Primaries": [[120, "primaries"]], "Primitive type": [[107, "primitive-type"]], "Primitive types": [[124, "primitive-types"]], "Printing comma-separated strings, f-strings, or formatted strings": [[100, "printing-comma-separated-strings-f-strings-or-formatted-strings"]], "Profiler": [[117, null]], "Python built-in decorators": [[89, "python-built-in-decorators"]], "Python issues": [[103, "python-issues"]], "Python scope": [[107, "python-scope"]], "Python scope usages": [[97, "python-scope-usages"]], "Quant arrays": [[93, "quant-arrays"]], "Quantized data types": [[93, "quantized-data-types"]], "Quantized fixed-point numbers": [[93, "quantized-fixed-point-numbers"]], "Quantized floating-point numbers": [[93, "quantized-floating-point-numbers"]], "Quantized integers": [[93, "quantized-integers"]], "Random number generator": [[121, "random-number-generator"]], "Recap": [[105, "recap"]], "Reference": [[105, "reference"], [108, null]], "Reference examples": [[93, "reference-examples"]], "Relations between ti.Vector, ti.types.vector and ti.math.vec3": [[114, "relations-between-ti-vector-ti-types-vector-and-ti-math-vec3"]], "Return statement and return type annotation": [[118, "return-statement-and-return-type-annotation"]], "Return value": [[111, "return-value"]], "Return values": [[111, "return-values"], [111, "id3"]], "Row-major order": [[107, "row-major-order"]], "Row-major versus column-major": [[96, "row-major-versus-column-major"]], "Runtime": [[119, "runtime"]], "Runtime assert in Taichi scope": [[100, "runtime-assert-in-taichi-scope"]], "Runtime print in Taichi scope": [[100, "runtime-print-in-taichi-scope"]], "Runtime recursion": [[111, "runtime-recursion"]], "SIMT Intrinsics": [[122, null]], "Scalar fields": [[95, "scalar-fields"]], "ScopedProfiler": [[117, "scopedprofiler"]], "Serial execution": [[100, "serial-execution"]], "Serialize a specified parallel for loop": [[100, "serialize-a-specified-parallel-for-loop"]], "Serialize an entire Taichi program": [[100, "serialize-an-entire-taichi-program"]], "Set, list, dictionary and operator in": [[118, "set-list-dictionary-and-operator-in"]], "Shader storage buffer object (SSBO)": [[107, "shader-storage-buffer-object-ssbo"]], "Shared exponent": [[93, "shared-exponent"]], "Shifting operations": [[120, "shifting-operations"]], "Simple statements": [[120, "simple-statements"]], "Slicings": [[120, "slicings"]], "Small vector and matrix types": [[114, "small-vector-and-matrix-types"]], "Sparse Matrix": [[115, null]], "Sparse direct solver": [[113, "sparse-direct-solver"]], "Sparse grid": [[99, "sparse-grid"]], "Sparse iterative solver": [[113, "sparse-iterative-solver"]], "Sparse linear solver": [[113, "sparse-linear-solver"]], "Sparse matrix": [[107, "sparse-matrix"]], "Sparse struct-fors": [[99, "sparse-struct-fors"]], "Spatially Sparse Data Structures": [[99, null]], "Spatially sparse data structures in Taichi": [[99, "spatially-sparse-data-structures-in-taichi"]], "Static Scope": [[91, "static-scope"]], "Static expressions": [[120, "static-expressions"]], "Static scope": [[107, "static-scope"]], "Static single assignment (SSA)": [[107, "static-single-assignment-ssa"]], "Static type system": [[100, "static-type-system"]], "Statistics": [[110, "statistics"]], "Struct fields": [[95, "struct-fields"]], "Struct types and dataclass": [[124, "struct-types-and-dataclass"]], "Structure of arrays (SOA)": [[107, "structure-of-arrays-soa"]], "Submodules": [[4, "submodules"], [6, "submodules"], [7, "submodules"], [28, "submodules"], [34, "submodules"], [42, "submodules"], [55, "submodules"], [62, "submodules"], [67, "submodules"], [69, "submodules"], [76, "submodules"], [82, "submodules"]], "Subscriptions": [[120, "subscriptions"]], "Supported atomic operations": [[121, "supported-atomic-operations"]], "Supported operators for matrices": [[121, "supported-operators-for-matrices"]], "Supported operators for primitive types": [[121, "supported-operators-for-primitive-types"]], "Supported systems and backends": [[106, "supported-systems-and-backends"]], "Synchronization between Kernels and Python Scope": [[112, null]], "Syntax Sugars": [[123, null]], "Taichi": [[88, null], [88, null]], "Taichi Dataclass": [[90, null]], "Taichi Ndarray": [[97, null]], "Taichi Scope and Python Scope": [[111, "taichi-scope-and-python-scope"]], "Taichi function": [[107, "taichi-function"]], "Taichi inline function": [[111, "taichi-inline-function"]], "Taichi real function": [[111, "taichi-real-function"]], "Taichi scope": [[107, "taichi-scope"]], "Template instantiation and caching": [[109, "template-instantiation-and-caching"]], "Template metaprogramming": [[91, "template-metaprogramming"]], "Template signature": [[107, "template-signature"]], "The assert statement": [[120, "the-assert-statement"]], "The break statement": [[120, "the-break-statement"]], "The continue statement": [[120, "the-continue-statement"]], "The for statement": [[120, "the-for-statement"]], "The if statement": [[120, "the-if-statement"]], "The just-in-time (JIT) compilation engine": [[109, "the-just-in-time-jit-compilation-engine"]], "The ndrange for statement": [[120, "the-ndrange-for-statement"]], "The pass statement": [[120, "the-pass-statement"]], "The power operator": [[120, "the-power-operator"]], "The range for statement": [[120, "the-range-for-statement"]], "The return statement": [[120, "the-return-statement"]], "The static for statement": [[120, "the-static-for-statement"]], "The struct for statement": [[120, "the-struct-for-statement"]], "The while statement": [[120, "the-while-statement"]], "Thread  local storage (TLS)": [[107, "thread-local-storage-tls"]], "Thread Local Storage (TLS)": [[116, "thread-local-storage-tls"]], "Traceback": [[107, "traceback"]], "Trigonometric functions": [[121, "trigonometric-functions"]], "Type System": [[108, null], [124, null]], "Type casting": [[124, "type-casting"]], "Type hint": [[111, "type-hint"]], "Unary arithmetic and bitwise operations": [[120, "unary-arithmetic-and-bitwise-operations"]], "Unsupported/partially supported Python language features": [[118, "unsupported-partially-supported-python-language-features"]], "Use quantized data types": [[93, null]], "User guide": [[108, null]], "Using Taichi ndarrays in ti.kernel": [[97, "using-taichi-ndarrays-in-ti-kernel"]], "Using external arrays as Taichi kernel arguments": [[94, "using-external-arrays-as-taichi-kernel-arguments"]], "Using external data containers in ti.kernel": [[97, "using-external-data-containers-in-ti-kernel"]], "Using kernel.grad()": [[101, "using-kernel-grad"]], "Using ti.ad.FwdMode()": [[101, "using-ti-ad-fwdmode"]], "Using ti.ad.Tape()": [[101, "using-ti-ad-tape"]], "Value comparisons": [[120, "value-comparisons"]], "Values and types": [[120, "values-and-types"]], "Variable scoping": [[118, "variable-scoping"]], "Variables and scope": [[120, "variables-and-scope"]], "Vector fields": [[95, "vector-fields"]], "Vertex shader": [[107, "vertex-shader"]], "Virtual indices v.s. physical indices": [[110, "virtual-indices-v-s-physical-indices"]], "When to use ndarray": [[97, "when-to-use-ndarray"]], "Why Python frontend": [[110, "why-python-frontend"]], "Why an image obtained using field.to_numpy() is rotated when displayed using matplotlib\u2019s plt.imshow()?": [[102, "why-an-image-obtained-using-field-to-numpy-is-rotated-when-displayed-using-matplotlib-s-plt-imshow"]], "Why does inheritance fail? I created a parent class and a child class, both decorated with @ti.data_oriented, and placed fields under @ti.kernel.": [[102, "why-does-inheritance-fail-i-created-a-parent-class-and-a-child-class-both-decorated-with-ti-data-oriented-and-placed-fields-under-ti-kernel"]], "Why does it always return an error when I pass a list from the Python scope to a Taichi kernel?": [[102, "why-does-it-always-return-an-error-when-i-pass-a-list-from-the-python-scope-to-a-taichi-kernel"]], "Why does my pip complain package not found when installing Taichi?": [[102, "why-does-my-pip-complain-package-not-found-when-installing-taichi"]], "Windows issues": [[103, "windows-issues"]], "Write differentiable code inside a Taichi kernel": [[101, "write-differentiable-code-inside-a-taichi-kernel"]], "Your first program": [[93, "your-first-program"]], "glossary": [[108, null]], "taichi": [[28, null]], "taichi.ad": [[1, null]], "taichi.algorithms": [[2, null]], "taichi.aot": [[7, null]], "taichi.aot.conventions": [[6, null]], "taichi.aot.conventions.gfxruntime140": [[4, null]], "taichi.aot.conventions.gfxruntime140.dr": [[3, null]], "taichi.aot.conventions.gfxruntime140.sr": [[5, null]], "taichi.aot.module": [[8, null]], "taichi.aot.utils": [[9, null]], "taichi.examples.algorithm.circle-packing.circle_packing_image": [[10, null]], "taichi.examples.algorithm.laplace": [[11, null]], "taichi.examples.autodiff.jacobian": [[12, null]], "taichi.examples.autodiff.minimization": [[13, null]], "taichi.examples.autodiff.regression": [[14, null]], "taichi.examples.autodiff.simple_derivative": [[15, null]], "taichi.examples.features.io.export_mesh": [[16, null]], "taichi.examples.features.io.export_ply": [[17, null]], "taichi.examples.features.sparse.explicit_activation": [[18, null]], "taichi.examples.features.sparse.taichi_dynamic": [[19, null]], "taichi.examples.features.sparse.tutorial": [[20, null]], "taichi.examples.machine_learning.differential_evolution": [[21, null]], "taichi.examples.minimal": [[22, null]], "taichi.examples.patterns": [[23, null]], "taichi.examples.real_func.rendering.cornell_box": [[24, null]], "taichi.examples.simulation.eulerfluid2d": [[25, null]], "taichi.experimental": [[26, null]], "taichi.graph": [[27, null]], "taichi.lang": [[42, null]], "taichi.lang.any_array": [[29, null]], "taichi.lang.argpack": [[30, null]], "taichi.lang.ast": [[34, null]], "taichi.lang.ast.ast_transformer": [[31, null]], "taichi.lang.ast.ast_transformer_utils": [[32, null]], "taichi.lang.ast.checkers": [[33, null]], "taichi.lang.ast.symbol_resolver": [[35, null]], "taichi.lang.ast.transform": [[36, null]], "taichi.lang.common_ops": [[37, null]], "taichi.lang.exception": [[38, null]], "taichi.lang.expr": [[39, null]], "taichi.lang.field": [[40, null]], "taichi.lang.impl": [[41, null]], "taichi.lang.kernel_arguments": [[43, null]], "taichi.lang.kernel_impl": [[44, null]], "taichi.lang.matrix": [[45, null]], "taichi.lang.matrix_ops": [[46, null]], "taichi.lang.matrix_ops_utils": [[47, null]], "taichi.lang.mesh": [[48, null]], "taichi.lang.misc": [[49, null]], "taichi.lang.ops": [[50, null]], "taichi.lang.runtime_ops": [[51, null]], "taichi.lang.shell": [[52, null]], "taichi.lang.simt": [[55, null]], "taichi.lang.simt.block": [[53, null]], "taichi.lang.simt.grid": [[54, null]], "taichi.lang.simt.subgroup": [[56, null]], "taichi.lang.simt.warp": [[57, null]], "taichi.lang.snode": [[58, null]], "taichi.lang.source_builder": [[59, null]], "taichi.lang.struct": [[60, null]], "taichi.lang.util": [[61, null]], "taichi.linalg": [[62, null]], "taichi.linalg.matrixfree_cg": [[63, null]], "taichi.linalg.sparse_cg": [[64, null]], "taichi.linalg.sparse_matrix": [[65, null]], "taichi.linalg.sparse_solver": [[66, null]], "taichi.math": [[67, null]], "taichi.math.mathimpl": [[68, null]], "taichi.profiler": [[69, null]], "taichi.profiler.kernel_metrics": [[70, null]], "taichi.profiler.kernel_profiler": [[71, null]], "taichi.profiler.memory_profiler": [[72, null]], "taichi.profiler.scoped_profiler": [[73, null]], "taichi.sparse": [[74, null]], "taichi.tools": [[76, null]], "taichi.tools.diagnose": [[75, null]], "taichi.tools.np2ply": [[77, null]], "taichi.tools.vtk": [[78, null]], "taichi.types": [[82, null]], "taichi.types.annotations": [[79, null]], "taichi.types.compound_types": [[80, null]], "taichi.types.enums": [[81, null]], "taichi.types.ndarray_type": [[83, null]], "taichi.types.primitive_types": [[84, null]], "taichi.types.quant": [[85, null]], "taichi.types.texture_type": [[86, null]], "taichi.types.utils": [[87, null]]}, "docnames": ["autoapi/index", "autoapi/taichi/ad/index", "autoapi/taichi/algorithms/index", "autoapi/taichi/aot/conventions/gfxruntime140/dr/index", "autoapi/taichi/aot/conventions/gfxruntime140/index", "autoapi/taichi/aot/conventions/gfxruntime140/sr/index", "autoapi/taichi/aot/conventions/index", "autoapi/taichi/aot/index", "autoapi/taichi/aot/module/index", "autoapi/taichi/aot/utils/index", "autoapi/taichi/examples/algorithm/circle-packing/circle_packing_image/index", "autoapi/taichi/examples/algorithm/laplace/index", "autoapi/taichi/examples/autodiff/jacobian/index", "autoapi/taichi/examples/autodiff/minimization/index", "autoapi/taichi/examples/autodiff/regression/index", "autoapi/taichi/examples/autodiff/simple_derivative/index", "autoapi/taichi/examples/features/io/export_mesh/index", "autoapi/taichi/examples/features/io/export_ply/index", "autoapi/taichi/examples/features/sparse/explicit_activation/index", "autoapi/taichi/examples/features/sparse/taichi_dynamic/index", "autoapi/taichi/examples/features/sparse/tutorial/index", "autoapi/taichi/examples/machine_learning/differential_evolution/index", "autoapi/taichi/examples/minimal/index", "autoapi/taichi/examples/patterns/index", "autoapi/taichi/examples/real_func/rendering/cornell_box/index", "autoapi/taichi/examples/simulation/eulerfluid2d/index", "autoapi/taichi/experimental/index", "autoapi/taichi/graph/index", "autoapi/taichi/index", "autoapi/taichi/lang/any_array/index", "autoapi/taichi/lang/argpack/index", "autoapi/taichi/lang/ast/ast_transformer/index", "autoapi/taichi/lang/ast/ast_transformer_utils/index", "autoapi/taichi/lang/ast/checkers/index", "autoapi/taichi/lang/ast/index", "autoapi/taichi/lang/ast/symbol_resolver/index", "autoapi/taichi/lang/ast/transform/index", "autoapi/taichi/lang/common_ops/index", "autoapi/taichi/lang/exception/index", "autoapi/taichi/lang/expr/index", "autoapi/taichi/lang/field/index", "autoapi/taichi/lang/impl/index", "autoapi/taichi/lang/index", "autoapi/taichi/lang/kernel_arguments/index", "autoapi/taichi/lang/kernel_impl/index", "autoapi/taichi/lang/matrix/index", "autoapi/taichi/lang/matrix_ops/index", "autoapi/taichi/lang/matrix_ops_utils/index", "autoapi/taichi/lang/mesh/index", "autoapi/taichi/lang/misc/index", "autoapi/taichi/lang/ops/index", "autoapi/taichi/lang/runtime_ops/index", "autoapi/taichi/lang/shell/index", "autoapi/taichi/lang/simt/block/index", "autoapi/taichi/lang/simt/grid/index", "autoapi/taichi/lang/simt/index", "autoapi/taichi/lang/simt/subgroup/index", "autoapi/taichi/lang/simt/warp/index", "autoapi/taichi/lang/snode/index", "autoapi/taichi/lang/source_builder/index", "autoapi/taichi/lang/struct/index", "autoapi/taichi/lang/util/index", "autoapi/taichi/linalg/index", "autoapi/taichi/linalg/matrixfree_cg/index", "autoapi/taichi/linalg/sparse_cg/index", "autoapi/taichi/linalg/sparse_matrix/index", "autoapi/taichi/linalg/sparse_solver/index", "autoapi/taichi/math/index", "autoapi/taichi/math/mathimpl/index", "autoapi/taichi/profiler/index", "autoapi/taichi/profiler/kernel_metrics/index", "autoapi/taichi/profiler/kernel_profiler/index", "autoapi/taichi/profiler/memory_profiler/index", "autoapi/taichi/profiler/scoped_profiler/index", "autoapi/taichi/sparse/index", "autoapi/taichi/tools/diagnose/index", "autoapi/taichi/tools/index", "autoapi/taichi/tools/np2ply/index", "autoapi/taichi/tools/vtk/index", "autoapi/taichi/types/annotations/index", "autoapi/taichi/types/compound_types/index", "autoapi/taichi/types/enums/index", "autoapi/taichi/types/index", "autoapi/taichi/types/ndarray_type/index", "autoapi/taichi/types/primitive_types/index", "autoapi/taichi/types/quant/index", "autoapi/taichi/types/texture_type/index", "autoapi/taichi/types/utils/index", "index", "user_guide/advanced/data_oriented_class", "user_guide/advanced/dataclass", "user_guide/advanced/meta", "user_guide/advanced/odop", "user_guide/advanced/quant", "user_guide/basic/external", "user_guide/basic/field", "user_guide/basic/layout", "user_guide/basic/ndarray", "user_guide/basic/offset", "user_guide/basic/sparse", "user_guide/debug/debugging", "user_guide/differentiable/differentiable_programming", "user_guide/faqs/faq", "user_guide/faqs/install", "user_guide/get-started/accelerate_python", "user_guide/get-started/accelerate_pytorch", "user_guide/get-started/hello_world", "user_guide/glossary/glossary", "user_guide/index", "user_guide/internals/compilation", "user_guide/internals/internal", "user_guide/kernels/kernel_function", "user_guide/kernels/kernel_sync", "user_guide/math/linear_solver", "user_guide/math/math_module", "user_guide/math/sparse_matrix", "user_guide/performance_tuning/performance", "user_guide/performance_tuning/profiler", "user_guide/reference/differences_between_taichi_and_python_programs", "user_guide/reference/global_settings", "user_guide/reference/language_reference", "user_guide/reference/operator", "user_guide/reference/simt", "user_guide/reference/syntax_sugars", "user_guide/type_system/type"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["autoapi/index.rst", "autoapi/taichi/ad/index.rst", "autoapi/taichi/algorithms/index.rst", "autoapi/taichi/aot/conventions/gfxruntime140/dr/index.rst", "autoapi/taichi/aot/conventions/gfxruntime140/index.rst", "autoapi/taichi/aot/conventions/gfxruntime140/sr/index.rst", "autoapi/taichi/aot/conventions/index.rst", "autoapi/taichi/aot/index.rst", "autoapi/taichi/aot/module/index.rst", "autoapi/taichi/aot/utils/index.rst", "autoapi/taichi/examples/algorithm/circle-packing/circle_packing_image/index.rst", "autoapi/taichi/examples/algorithm/laplace/index.rst", "autoapi/taichi/examples/autodiff/jacobian/index.rst", "autoapi/taichi/examples/autodiff/minimization/index.rst", "autoapi/taichi/examples/autodiff/regression/index.rst", "autoapi/taichi/examples/autodiff/simple_derivative/index.rst", "autoapi/taichi/examples/features/io/export_mesh/index.rst", "autoapi/taichi/examples/features/io/export_ply/index.rst", "autoapi/taichi/examples/features/sparse/explicit_activation/index.rst", "autoapi/taichi/examples/features/sparse/taichi_dynamic/index.rst", "autoapi/taichi/examples/features/sparse/tutorial/index.rst", "autoapi/taichi/examples/machine_learning/differential_evolution/index.rst", "autoapi/taichi/examples/minimal/index.rst", "autoapi/taichi/examples/patterns/index.rst", "autoapi/taichi/examples/real_func/rendering/cornell_box/index.rst", "autoapi/taichi/examples/simulation/eulerfluid2d/index.rst", "autoapi/taichi/experimental/index.rst", "autoapi/taichi/graph/index.rst", "autoapi/taichi/index.rst", "autoapi/taichi/lang/any_array/index.rst", "autoapi/taichi/lang/argpack/index.rst", "autoapi/taichi/lang/ast/ast_transformer/index.rst", "autoapi/taichi/lang/ast/ast_transformer_utils/index.rst", "autoapi/taichi/lang/ast/checkers/index.rst", "autoapi/taichi/lang/ast/index.rst", "autoapi/taichi/lang/ast/symbol_resolver/index.rst", "autoapi/taichi/lang/ast/transform/index.rst", "autoapi/taichi/lang/common_ops/index.rst", "autoapi/taichi/lang/exception/index.rst", "autoapi/taichi/lang/expr/index.rst", "autoapi/taichi/lang/field/index.rst", "autoapi/taichi/lang/impl/index.rst", "autoapi/taichi/lang/index.rst", "autoapi/taichi/lang/kernel_arguments/index.rst", "autoapi/taichi/lang/kernel_impl/index.rst", "autoapi/taichi/lang/matrix/index.rst", "autoapi/taichi/lang/matrix_ops/index.rst", "autoapi/taichi/lang/matrix_ops_utils/index.rst", "autoapi/taichi/lang/mesh/index.rst", "autoapi/taichi/lang/misc/index.rst", "autoapi/taichi/lang/ops/index.rst", "autoapi/taichi/lang/runtime_ops/index.rst", "autoapi/taichi/lang/shell/index.rst", "autoapi/taichi/lang/simt/block/index.rst", "autoapi/taichi/lang/simt/grid/index.rst", "autoapi/taichi/lang/simt/index.rst", "autoapi/taichi/lang/simt/subgroup/index.rst", "autoapi/taichi/lang/simt/warp/index.rst", "autoapi/taichi/lang/snode/index.rst", "autoapi/taichi/lang/source_builder/index.rst", "autoapi/taichi/lang/struct/index.rst", "autoapi/taichi/lang/util/index.rst", "autoapi/taichi/linalg/index.rst", "autoapi/taichi/linalg/matrixfree_cg/index.rst", "autoapi/taichi/linalg/sparse_cg/index.rst", "autoapi/taichi/linalg/sparse_matrix/index.rst", "autoapi/taichi/linalg/sparse_solver/index.rst", "autoapi/taichi/math/index.rst", "autoapi/taichi/math/mathimpl/index.rst", "autoapi/taichi/profiler/index.rst", "autoapi/taichi/profiler/kernel_metrics/index.rst", "autoapi/taichi/profiler/kernel_profiler/index.rst", "autoapi/taichi/profiler/memory_profiler/index.rst", "autoapi/taichi/profiler/scoped_profiler/index.rst", "autoapi/taichi/sparse/index.rst", "autoapi/taichi/tools/diagnose/index.rst", "autoapi/taichi/tools/index.rst", "autoapi/taichi/tools/np2ply/index.rst", "autoapi/taichi/tools/vtk/index.rst", "autoapi/taichi/types/annotations/index.rst", "autoapi/taichi/types/compound_types/index.rst", "autoapi/taichi/types/enums/index.rst", "autoapi/taichi/types/index.rst", "autoapi/taichi/types/ndarray_type/index.rst", "autoapi/taichi/types/primitive_types/index.rst", "autoapi/taichi/types/quant/index.rst", "autoapi/taichi/types/texture_type/index.rst", "autoapi/taichi/types/utils/index.rst", "index.md", "user_guide/advanced/data_oriented_class.md", "user_guide/advanced/dataclass.md", "user_guide/advanced/meta.md", "user_guide/advanced/odop.md", "user_guide/advanced/quant.md", "user_guide/basic/external.md", "user_guide/basic/field.md", "user_guide/basic/layout.md", "user_guide/basic/ndarray.md", "user_guide/basic/offset.md", "user_guide/basic/sparse.md", "user_guide/debug/debugging.md", "user_guide/differentiable/differentiable_programming.md", "user_guide/faqs/faq.md", "user_guide/faqs/install.md", "user_guide/get-started/accelerate_python.md", "user_guide/get-started/accelerate_pytorch.md", "user_guide/get-started/hello_world.md", "user_guide/glossary/glossary.md", "user_guide/index.md", "user_guide/internals/compilation.md", "user_guide/internals/internal.md", "user_guide/kernels/kernel_function.md", "user_guide/kernels/kernel_sync.md", "user_guide/math/linear_solver.md", "user_guide/math/math_module.md", "user_guide/math/sparse_matrix.md", "user_guide/performance_tuning/performance.md", "user_guide/performance_tuning/profiler.md", "user_guide/reference/differences_between_taichi_and_python_programs.md", "user_guide/reference/global_settings.md", "user_guide/reference/language_reference.md", "user_guide/reference/operator.md", "user_guide/reference/simt.md", "user_guide/reference/syntax_sugars.md", "user_guide/type_system/type.md"], "indexentries": {"abs() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.abs", false]], "access (taichi.aot.conventions.gfxruntime140.sr.argumentndarray attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentNdArray.access", false]], "acos() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.acos", false]], "activate() (in module taichi.lang.snode)": [[58, "taichi.lang.snode.activate", false]], "active_mask() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.active_mask", false]], "add_face_channel() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_face_channel", false]], "add_face_id() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_face_id", false]], "add_face_piece() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_face_piece", false]], "add_faces() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_faces", false]], "add_field() (taichi.aot.module.module method)": [[8, "taichi.aot.module.Module.add_field", false]], "add_graph() (taichi.aot.module.module method)": [[8, "taichi.aot.module.Module.add_graph", false]], "add_kernel() (taichi.aot.module.module method)": [[8, "taichi.aot.module.Module.add_kernel", false]], "add_kernel_template() (taichi.aot.module.module method)": [[8, "taichi.aot.module.Module.add_kernel_template", false]], "add_mesh_attribute() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.add_mesh_attribute", false]], "add_new_circles() (in module taichi.examples.algorithm.circle-packing.circle_packing_image)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.add_new_circles", false]], "add_vertex_alpha() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_vertex_alpha", false]], "add_vertex_channel() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_vertex_channel", false]], "add_vertex_color() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_vertex_color", false]], "add_vertex_id() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_vertex_id", false]], "add_vertex_normal() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_vertex_normal", false]], "add_vertex_piece() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_vertex_piece", false]], "add_vertex_pos() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_vertex_pos", false]], "add_vertex_rgba() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_vertex_rgba", false]], "add_vertex_vel() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.add_vertex_vel", false]], "advaction_step() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.advaction_step", false]], "advection() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.advection", false]], "advisory_num_threads_per_group (taichi.aot.conventions.gfxruntime140.dr.taskattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TaskAttributes.advisory_num_threads_per_group", false]], "advisory_total_num_threads (taichi.aot.conventions.gfxruntime140.dr.taskattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TaskAttributes.advisory_total_num_threads", false]], "all() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.all", false]], "all() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.all", false]], "all_equal() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.all_equal", false]], "all_nonzero() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.all_nonzero", false]], "all_pop (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.all_pop", false]], "all_true() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.all_true", false]], "allows_for_loop (taichi.lang.ast.checkers.kernelsimplicityastchecker.scopeguard property)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.ScopeGuard.allows_for_loop", false]], "allows_more_stmt (taichi.lang.ast.checkers.kernelsimplicityastchecker.scopeguard property)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.ScopeGuard.allows_more_stmt", false]], "alpha (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.alpha", false]], "amdgpu (in module taichi.lang.misc)": [[49, "taichi.lang.misc.amdgpu", false]], "analyze_pattern() (taichi.linalg.sparse_solver.sparsesolver method)": [[66, "taichi.linalg.sparse_solver.SparseSolver.analyze_pattern", false]], "annotation (taichi.lang.kernel_arguments.kernelargument attribute)": [[43, "taichi.lang.kernel_arguments.KernelArgument.annotation", false]], "any() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.any", false]], "any() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.any", false]], "any_nonzero() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.any_nonzero", false]], "any_true() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.any_true", false]], "append() (in module taichi.lang.snode)": [[58, "taichi.lang.snode.append", false]], "apply_c_bc() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.apply_c_bc", false]], "apply_p_bc() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.apply_p_bc", false]], "apply_vel_bc() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.apply_vel_bc", false]], "arch_uses_spv() (in module taichi.lang.simt.block)": [[53, "taichi.lang.simt.block.arch_uses_spv", false]], "archive() (taichi.aot.module.module method)": [[8, "taichi.aot.module.Module.archive", false]], "arg (taichi.aot.conventions.gfxruntime140.sr.namedargument attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.NamedArgument.arg", false]], "arg_at() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.arg_at", false]], "arg_attribs_vec_ (taichi.aot.conventions.gfxruntime140.dr.contextattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ContextAttributes.arg_attribs_vec_", false]], "arg_features (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.arg_features", false]], "arg_foreach_check() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.arg_foreach_check", false]], "arg_id (taichi.aot.conventions.gfxruntime140.dr.texturebinding attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TextureBinding.arg_id", false]], "argpack (class in taichi.lang.argpack)": [[30, "taichi.lang.argpack.ArgPack", false]], "argpack() (in module taichi.types.compound_types)": [[80, "taichi.types.compound_types.argpack", false]], "args (taichi.aot.conventions.gfxruntime140.sr.bufferbindingtype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBindingType.Args", false]], "args (taichi.aot.conventions.gfxruntime140.sr.context attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Context.args", false]], "args (taichi.aot.conventions.gfxruntime140.sr.dispatch attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Dispatch.args", false]], "args (taichi.aot.conventions.gfxruntime140.sr.graph attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Graph.args", false]], "args_bytes_ (taichi.aot.conventions.gfxruntime140.dr.contextattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ContextAttributes.args_bytes_", false]], "argument (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Argument", false]], "argument_data (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.argument_data", false]], "argumentattributes (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes", false]], "argumentndarray (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentNdArray", false]], "argumentrwtexture (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentRwTexture", false]], "argumentscalar (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentScalar", false]], "argumenttexture (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentTexture", false]], "arm64 (in module taichi.lang.misc)": [[49, "taichi.lang.misc.arm64", false]], "arr (taichi.lang.matrix.matrixndarray attribute)": [[45, "taichi.lang.matrix.MatrixNdarray.arr", false]], "arr (taichi.lang.matrix.vectorndarray attribute)": [[45, "taichi.lang.matrix.VectorNdarray.arr", false]], "arr_access (taichi.aot.conventions.gfxruntime140.dr.contextattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ContextAttributes.arr_access", false]], "asin() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.asin", false]], "assert_list() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.assert_list", false]], "assert_tensor() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.assert_tensor", false]], "assert_vector() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.assert_vector", false]], "assume_in_range() (in module taichi.lang.misc)": [[49, "taichi.lang.misc.assume_in_range", false]], "ast_builder (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.ast_builder", false]], "astresolver (class in taichi.lang.ast.symbol_resolver)": [[35, "taichi.lang.ast.symbol_resolver.ASTResolver", false]], "asttransformer (class in taichi.lang.ast.ast_transformer)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer", false]], "asttransformercontext (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext", false]], "atan2() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.atan2", false]], "atomic_add() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.atomic_add", false]], "atomic_and() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.atomic_and", false]], "atomic_max() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.atomic_max", false]], "atomic_min() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.atomic_min", false]], "atomic_mul() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.atomic_mul", false]], "atomic_or() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.atomic_or", false]], "atomic_sub() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.atomic_sub", false]], "atomic_xor() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.atomic_xor", false]], "autodiffmode (in module taichi.types.enums)": [[81, "taichi.types.enums.AutodiffMode", false]], "ax (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.ax", false]], "axes() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.axes", false]], "b (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.b", false]], "b (taichi.linalg.sparse_cg.sparsecg attribute)": [[64, "taichi.linalg.sparse_cg.SparseCG.b", false]], "ballot() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.ballot", false]], "barrier() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.barrier", false]], "begin (taichi.aot.conventions.gfxruntime140.dr.rangeforattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.RangeForAttributes.begin", false]], "best_fit (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.best_fit", false]], "best_pop (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.best_pop", false]], "bilerp() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.bilerp", false]], "binding (taichi.aot.conventions.gfxruntime140.dr.bufferbinding attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.BufferBinding.binding", false]], "binding (taichi.aot.conventions.gfxruntime140.dr.texturebinding attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TextureBinding.binding", false]], "binding (taichi.aot.conventions.gfxruntime140.sr.bufferbinding attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBinding.binding", false]], "binding (taichi.aot.conventions.gfxruntime140.sr.texturebinding attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TextureBinding.binding", false]], "bit_cast() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.bit_cast", false]], "bit_shr() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.bit_shr", false]], "bit_struct_type_builder (taichi.lang.field.bitpackedfields attribute)": [[40, "taichi.lang.field.BitpackedFields.bit_struct_type_builder", false]], "bitmasked() (taichi.lang.snode.snode method)": [[58, "taichi.lang.snode.SNode.bitmasked", false]], "bitpackedfields (class in taichi.lang.field)": [[40, "taichi.lang.field.BitpackedFields", false]], "block (in module taichi.examples.features.sparse.tutorial)": [[20, "taichi.examples.features.sparse.tutorial.block", false]], "block1 (in module taichi.examples.features.sparse.explicit_activation)": [[18, "taichi.examples.features.sparse.explicit_activation.block1", false]], "block2 (in module taichi.examples.features.sparse.explicit_activation)": [[18, "taichi.examples.features.sparse.explicit_activation.block2", false]], "block_local() (in module taichi.lang.misc)": [[49, "taichi.lang.misc.block_local", false]], "block_size (taichi.aot.conventions.gfxruntime140.sr.launchgrid attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.LaunchGrid.block_size", false]], "boundary_type_cast_warning() (in module taichi.lang.ast.ast_transformer)": [[31, "taichi.lang.ast.ast_transformer.boundary_type_cast_warning", false]], "break (taichi.lang.ast.ast_transformer_utils.loopstatus attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopStatus.Break", false]], "broadcast_first() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.broadcast_first", false]], "buffer (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Buffer", false]], "buffer (taichi.aot.conventions.gfxruntime140.dr.bufferbinding attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.BufferBinding.buffer", false]], "buffer_bind_ty (taichi.aot.conventions.gfxruntime140.sr.bufferbinding attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBinding.buffer_bind_ty", false]], "buffer_binds (taichi.aot.conventions.gfxruntime140.dr.taskattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TaskAttributes.buffer_binds", false]], "buffer_binds (taichi.aot.conventions.gfxruntime140.sr.task attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Task.buffer_binds", false]], "bufferbinding (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.BufferBinding", false]], "bufferbinding (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBinding", false]], "bufferbindingtype (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBindingType", false]], "build() (taichi.linalg.sparse_matrix.sparsematrixbuilder method)": [[65, "taichi.linalg.sparse_matrix.SparseMatrixBuilder.build", false]], "build_annassign() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_AnnAssign", false]], "build_assert() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Assert", false]], "build_assign() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Assign", false]], "build_assign_annotated() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_assign_annotated", false]], "build_assign_basic() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_assign_basic", false]], "build_assign_unpack() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_assign_unpack", false]], "build_attribute() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Attribute", false]], "build_attribute_if_is_dynamic_snode_method() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_attribute_if_is_dynamic_snode_method", false]], "build_augassign() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_AugAssign", false]], "build_binop() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_BinOp", false]], "build_bool_op() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_bool_op", false]], "build_boolop() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_BoolOp", false]], "build_break() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Break", false]], "build_bytes() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Bytes", false]], "build_call() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Call", false]], "build_call_if_is_builtin() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_call_if_is_builtin", false]], "build_call_if_is_type() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_call_if_is_type", false]], "build_compare() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Compare", false]], "build_constant() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Constant", false]], "build_continue() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Continue", false]], "build_dict() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Dict", false]], "build_dictcomp() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_DictComp", false]], "build_expr() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Expr", false]], "build_extslice() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_ExtSlice", false]], "build_for() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_For", false]], "build_formattedvalue() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_FormattedValue", false]], "build_from_ndarray() (taichi.linalg.sparse_matrix.sparsematrix method)": [[65, "taichi.linalg.sparse_matrix.SparseMatrix.build_from_ndarray", false]], "build_functiondef() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_FunctionDef", false]], "build_grouped_ndrange_for() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_grouped_ndrange_for", false]], "build_if() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_If", false]], "build_ifexp() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_IfExp", false]], "build_index() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Index", false]], "build_joinedstr() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_JoinedStr", false]], "build_keyword() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_keyword", false]], "build_list() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_List", false]], "build_listcomp() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_ListComp", false]], "build_mesh_for() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_mesh_for", false]], "build_module() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Module", false]], "build_name() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Name", false]], "build_nameconstant() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_NameConstant", false]], "build_namedexpr() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_NamedExpr", false]], "build_ndrange_for() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_ndrange_for", false]], "build_nested_mesh_for() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_nested_mesh_for", false]], "build_num() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Num", false]], "build_pass() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Pass", false]], "build_range_for() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_range_for", false]], "build_return() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Return", false]], "build_scene() (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.build_scene", false]], "build_slice() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Slice", false]], "build_starred() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Starred", false]], "build_static_and() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_static_and", false]], "build_static_for() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_static_for", false]], "build_static_or() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_static_or", false]], "build_stmt (in module taichi.lang.ast.ast_transformer)": [[31, "taichi.lang.ast.ast_transformer.build_stmt", false]], "build_stmts() (in module taichi.lang.ast.ast_transformer)": [[31, "taichi.lang.ast.ast_transformer.build_stmts", false]], "build_str() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Str", false]], "build_struct_for() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_struct_for", false]], "build_subscript() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Subscript", false]], "build_tuple() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_Tuple", false]], "build_unaryop() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_UnaryOp", false]], "build_while() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.build_While", false]], "builder (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.Builder", false]], "c (taichi.lang.ast.checkers.kernelsimplicityastchecker.scopeguard attribute)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.ScopeGuard.c", false]], "c_with_boundary() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.c_with_boundary", false]], "cache_read_only() (in module taichi.lang.misc)": [[49, "taichi.lang.misc.cache_read_only", false]], "calc_normal() (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.calc_normal", false]], "canonicalize_formatted_string() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.canonicalize_formatted_string", false]], "cast() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.cast", false]], "cast() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.cast", false]], "cast() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.cast", false]], "ceil() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.ceil", false]], "cells (taichi.lang.mesh.meshinstance attribute)": [[48, "taichi.lang.mesh.MeshInstance.cells", false]], "check_activity() (in module taichi.examples.features.sparse.explicit_activation)": [[18, "taichi.examples.features.sparse.explicit_activation.check_activity", false]], "check_loop_var() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.check_loop_var", false]], "check_matmul() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.check_matmul", false]], "check_transpose() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.check_transpose", false]], "check_type_match() (in module taichi.aot.utils)": [[9, "taichi.aot.utils.check_type_match", false]], "circle (class in taichi.examples.algorithm.circle-packing.circle_packing_image)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.Circle", false]], "circles (in module taichi.examples.algorithm.circle-packing.circle_packing_image)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.circles", false]], "clamp() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.clamp", false]], "clear_kernel_profiler_info() (in module taichi.profiler.kernel_profiler)": [[71, "taichi.profiler.kernel_profiler.clear_kernel_profiler_info", false]], "clear_scoped_profiler_info() (in module taichi.profiler.scoped_profiler)": [[73, "taichi.profiler.scoped_profiler.clear_scoped_profiler_info", false]], "clip() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.clip", false]], "clip_only() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.clip_only", false]], "clz() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.clz", false]], "coeffs (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.coeffs", false]], "collect_kernel_profiler_metrics() (in module taichi.profiler.kernel_profiler)": [[71, "taichi.profiler.kernel_profiler.collect_kernel_profiler_metrics", false]], "color_pair (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.color_pair", false]], "colorfield (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.colorField", false]], "cols() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.cols", false]], "cols() (taichi.lang.matrix.matrix static method)": [[45, "taichi.lang.matrix.Matrix.cols", false]], "comment (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.comment", false]], "compute() (taichi.linalg.sparse_solver.sparsesolver method)": [[66, "taichi.linalg.sparse_solver.SparseSolver.compute", false]], "const_begin (taichi.aot.conventions.gfxruntime140.dr.rangeforattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.RangeForAttributes.const_begin", false]], "const_end (taichi.aot.conventions.gfxruntime140.dr.rangeforattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.RangeForAttributes.const_end", false]], "context (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Context", false]], "context (taichi.aot.conventions.gfxruntime140.sr.kernel attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Kernel.context", false]], "contextattributes (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ContextAttributes", false]], "continue (taichi.lang.ast.ast_transformer_utils.loopstatus attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopStatus.Continue", false]], "copy_2d_to_3d() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.copy_2d_to_3d", false]], "copy_field_a_to_b() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.copy_field_a_to_b", false]], "copy_field_to_pop() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.copy_field_to_pop", false]], "copy_from() (taichi.lang.field.field method)": [[40, "taichi.lang.field.Field.copy_from", false]], "copy_from() (taichi.lang.struct.structfield method)": [[60, "taichi.lang.struct.StructField.copy_from", false]], "copy_pop_to_field() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.copy_pop_to_field", false]], "corresponding_numpy_types (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.corresponding_numpy_types", false]], "cos() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.cos", false]], "cpu (in module taichi.lang.misc)": [[49, "taichi.lang.misc.cpu", false]], "create_variable() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.create_variable", false]], "cross() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.cross", false]], "cross() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.cross", false]], "cross() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.cross", false]], "ctx_attribs (taichi.aot.conventions.gfxruntime140.dr.kernelattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.KernelAttributes.ctx_attribs", false]], "cuda (in module taichi.lang.misc)": [[49, "taichi.lang.misc.cuda", false]], "cuptimetric (class in taichi.profiler.kernel_metrics)": [[70, "taichi.profiler.kernel_metrics.CuptiMetric", false]], "cur (taichi.examples.simulation.eulerfluid2d.texpair attribute)": [[25, "taichi.examples.simulation.eulerfluid2d.TexPair.cur", false]], "curl() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.curl", false]], "curlfield (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.curlField", false]], "current_loop_scope() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.current_loop_scope", false]], "current_scope (taichi.lang.ast.checkers.kernelsimplicityastchecker property)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.current_scope", false]], "current_scope() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.current_scope", false]], "data_oriented() (in module taichi.lang.kernel_impl)": [[44, "taichi.lang.kernel_impl.data_oriented", false]], "dataclass() (in module taichi.lang.struct)": [[60, "taichi.lang.struct.dataclass", false]], "datatype (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType", false]], "de() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.DE", false]], "de_crossover() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.de_crossover", false]], "de_loop() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.de_loop", false]], "deactivate() (in module taichi.lang.snode)": [[58, "taichi.lang.snode.deactivate", false]], "deactivate_all() (taichi.lang.snode.snode method)": [[58, "taichi.lang.snode.SNode.deactivate_all", false]], "deactivate_all_snodes() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.deactivate_all_snodes", false]], "decl_argpack_arg() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.decl_argpack_arg", false]], "decl_matrix_arg() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.decl_matrix_arg", false]], "decl_ndarray_arg() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.decl_ndarray_arg", false]], "decl_ret() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.decl_ret", false]], "decl_rw_texture_arg() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.decl_rw_texture_arg", false]], "decl_scalar_arg() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.decl_scalar_arg", false]], "decl_sparse_matrix() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.decl_sparse_matrix", false]], "decl_struct_arg() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.decl_struct_arg", false]], "decl_texture_arg() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.decl_texture_arg", false]], "default (taichi.lang.kernel_arguments.kernelargument attribute)": [[43, "taichi.lang.kernel_arguments.KernelArgument.default", false]], "degrees() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.degrees", false]], "dense() (taichi.lang.snode.snode method)": [[58, "taichi.lang.snode.SNode.dense", false]], "determinant() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.determinant", false]], "determinant() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.determinant", false]], "determinant() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.determinant", false]], "devicecapability (class in taichi.types.enums)": [[81, "taichi.types.enums.DeviceCapability", false]], "devicecapabilitylevel (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.DeviceCapabilityLevel", false]], "diag() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.diag", false]], "diag() (taichi.lang.matrix.matrix static method)": [[45, "taichi.lang.matrix.Matrix.diag", false]], "dim (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.dim", false]], "dim (taichi.types.annotations.template attribute)": [[79, "taichi.types.annotations.Template.dim", false]], "dim_lt() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.dim_lt", false]], "dispatch (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Dispatch", false]], "dispatch (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Dispatch", false]], "dispatches (taichi.aot.conventions.gfxruntime140.dr.graphdata attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.GraphData.dispatches", false]], "dispatches (taichi.aot.conventions.gfxruntime140.sr.graph attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Graph.dispatches", false]], "distance() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.distance", false]], "divergence() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.divergence", false]], "divfield (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.divField", false]], "do_check() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.do_check", false]], "dot() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.dot", false]], "dot() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.dot", false]], "dot() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.dot", false]], "draw() (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.draw", false]], "draw() (in module taichi.examples.autodiff.simple_derivative)": [[15, "taichi.examples.autodiff.simple_derivative.draw", false]], "draw_contour() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.draw_contour", false]], "dtype (taichi.aot.conventions.gfxruntime140.dr.argumentattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes.dtype", false]], "dtype (taichi.aot.conventions.gfxruntime140.dr.fieldattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.FieldAttributes.dtype", false]], "dtype (taichi.aot.conventions.gfxruntime140.sr.argumentndarray attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentNdArray.dtype", false]], "dtype (taichi.aot.conventions.gfxruntime140.sr.argumentscalar attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentScalar.dtype", false]], "dtype (taichi.aot.conventions.gfxruntime140.sr.field attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Field.dtype", false]], "dtype (taichi.aot.conventions.gfxruntime140.sr.returnvalue attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ReturnValue.dtype", false]], "dtype (taichi.lang.field.field property)": [[40, "taichi.lang.field.Field.dtype", false]], "dtype (taichi.lang.kernel_arguments.sparsematrixentry attribute)": [[43, "taichi.lang.kernel_arguments.SparseMatrixEntry.dtype", false]], "dtype (taichi.lang.kernel_arguments.sparsematrixproxy attribute)": [[43, "taichi.lang.kernel_arguments.SparseMatrixProxy.dtype", false]], "dtype (taichi.lang.matrix.matrixndarray attribute)": [[45, "taichi.lang.matrix.MatrixNdarray.dtype", false]], "dtype (taichi.lang.matrix.vectorndarray attribute)": [[45, "taichi.lang.matrix.VectorNdarray.dtype", false]], "dtype (taichi.lang.simt.block.sharedarray attribute)": [[53, "taichi.lang.simt.block.SharedArray.dtype", false]], "dtype (taichi.linalg.sparse_cg.sparsecg attribute)": [[64, "taichi.linalg.sparse_cg.SparseCG.dtype", false]], "dtype (taichi.linalg.sparse_matrix.sparsematrix attribute)": [[65, "taichi.linalg.sparse_matrix.SparseMatrix.dtype", false]], "dtype (taichi.linalg.sparse_matrix.sparsematrixbuilder attribute)": [[65, "taichi.linalg.sparse_matrix.SparseMatrixBuilder.dtype", false]], "dtype (taichi.linalg.sparse_solver.sparsesolver attribute)": [[66, "taichi.linalg.sparse_solver.SparseSolver.dtype", false]], "dtype_id (taichi.aot.conventions.gfxruntime140.dr.symbolicargument attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.SymbolicArgument.dtype_id", false]], "dtype_name (taichi.aot.conventions.gfxruntime140.dr.fieldattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.FieldAttributes.dtype_name", false]], "dual (taichi.lang.field.field attribute)": [[40, "taichi.lang.field.Field.dual", false]], "dual (taichi.lang.struct.structfield attribute)": [[60, "taichi.lang.struct.StructField.dual", false]], "dump_json_data_model() (in module taichi.aot.utils)": [[9, "taichi.aot.utils.dump_json_data_model", false]], "dx11 (in module taichi.lang.misc)": [[49, "taichi.lang.misc.dx11", false]], "dx12 (in module taichi.lang.misc)": [[49, "taichi.lang.misc.dx12", false]], "dynamic() (taichi.lang.snode.snode method)": [[58, "taichi.lang.snode.SNode.dynamic", false]], "e (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.e", false]], "e() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.E", false]], "edges (taichi.lang.mesh.meshinstance attribute)": [[48, "taichi.lang.mesh.MeshInstance.edges", false]], "elect() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.elect", false]], "element_shape (taichi.aot.conventions.gfxruntime140.dr.argumentattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes.element_shape", false]], "element_shape (taichi.aot.conventions.gfxruntime140.dr.fieldattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.FieldAttributes.element_shape", false]], "element_shape (taichi.aot.conventions.gfxruntime140.dr.symbolicargument attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.SymbolicArgument.element_shape", false]], "element_shape (taichi.aot.conventions.gfxruntime140.sr.argumentndarray attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentNdArray.element_shape", false]], "element_shape (taichi.aot.conventions.gfxruntime140.sr.field attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Field.element_shape", false]], "element_shape (taichi.lang.matrix.matrixndarray property)": [[45, "taichi.lang.matrix.MatrixNdarray.element_shape", false]], "element_shape (taichi.lang.matrix.vectorndarray property)": [[45, "taichi.lang.matrix.VectorNdarray.element_shape", false]], "element_type (taichi.lang.matrix.matrixndarray attribute)": [[45, "taichi.lang.matrix.MatrixNdarray.element_type", false]], "element_type (taichi.lang.matrix.vectorndarray attribute)": [[45, "taichi.lang.matrix.VectorNdarray.element_type", false]], "end (taichi.aot.conventions.gfxruntime140.dr.rangeforattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.RangeForAttributes.end", false]], "entries (taichi.lang.struct.struct property)": [[60, "taichi.lang.struct.Struct.entries", false]], "eulersimparam (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.eulerSimParam", false]], "excluded_parameters (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.excluded_parameters", false]], "exclusive_add() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.exclusive_add", false]], "exclusive_and() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.exclusive_and", false]], "exclusive_max() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.exclusive_max", false]], "exclusive_min() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.exclusive_min", false]], "exclusive_mul() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.exclusive_mul", false]], "exclusive_or() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.exclusive_or", false]], "exclusive_xor() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.exclusive_xor", false]], "exp() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.exp", false]], "export() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.export", false]], "export_ascii() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.export_ascii", false]], "export_frame() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.export_frame", false]], "export_frame_ascii() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.export_frame_ascii", false]], "extarr (taichi.aot.conventions.gfxruntime140.sr.bufferbindingtype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBindingType.ExtArr", false]], "extension (in module taichi.lang.misc)": [[49, "taichi.lang.misc.extension", false]], "eye() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.eye", false]], "f1() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.f1", false]], "f16 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.f16", false]], "f16 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.f16", false]], "f1_only() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.f1_only", false]], "f32 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.f32", false]], "f32 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.f32", false]], "f64 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.f64", false]], "f64 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.f64", false]], "face_channels (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.face_channels", false]], "face_data (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.face_data", false]], "face_data_type (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.face_data_type", false]], "face_type (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.face_type", false]], "faces (taichi.lang.mesh.meshinstance attribute)": [[48, "taichi.lang.mesh.MeshInstance.faces", false]], "factorize() (taichi.linalg.sparse_solver.sparsesolver method)": [[66, "taichi.linalg.sparse_solver.SparseSolver.factorize", false]], "field (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Field", false]], "field (class in taichi.lang.field)": [[40, "taichi.lang.field.Field", false]], "field() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.field", false]], "field() (taichi.lang.matrix.matrix class method)": [[45, "taichi.lang.matrix.Matrix.field", false]], "field() (taichi.lang.matrix.vector class method)": [[45, "taichi.lang.matrix.Vector.field", false]], "field() (taichi.lang.struct.struct class method)": [[60, "taichi.lang.struct.Struct.field", false]], "field_dict (taichi.lang.struct.structfield attribute)": [[60, "taichi.lang.struct.StructField.field_dict", false]], "field_dim (taichi.aot.conventions.gfxruntime140.dr.argumentattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes.field_dim", false]], "field_dim (taichi.aot.conventions.gfxruntime140.dr.symbolicargument attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.SymbolicArgument.field_dim", false]], "field_name (taichi.aot.conventions.gfxruntime140.dr.fieldattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.FieldAttributes.field_name", false]], "fieldattributes (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.FieldAttributes", false]], "fields (taichi.aot.conventions.gfxruntime140.dr.metadata attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Metadata.fields", false]], "fields (taichi.aot.conventions.gfxruntime140.sr.metadata attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Metadata.fields", false]], "fields (taichi.lang.field.bitpackedfields attribute)": [[40, "taichi.lang.field.BitpackedFields.fields", false]], "fig (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.fig", false]], "file (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.file", false]], "fill() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.fill", false]], "fill() (taichi.lang.field.field method)": [[40, "taichi.lang.field.Field.fill", false]], "fill() (taichi.lang.field.scalarfield method)": [[40, "taichi.lang.field.ScalarField.fill", false]], "fill() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.fill", false]], "fill() (taichi.lang.matrix.matrixfield method)": [[45, "taichi.lang.matrix.MatrixField.fill", false]], "fill() (taichi.lang.struct.structfield method)": [[60, "taichi.lang.struct.StructField.fill", false]], "fill_rgba() (in module taichi.examples.features.io.export_ply)": [[17, "taichi.examples.features.io.export_ply.fill_rgba", false]], "find_min() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.find_min", false]], "fit (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.fit", false]], "fixed() (in module taichi.types.quant)": [[85, "taichi.types.quant.fixed", false]], "float() (in module taichi.types.quant)": [[85, "taichi.types.quant.float", false]], "float16 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.float16", false]], "float32 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.float32", false]], "float64 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.float64", false]], "floor() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.floor", false]], "fmt (taichi.aot.conventions.gfxruntime140.sr.argumentrwtexture attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentRwTexture.fmt", false]], "foo_data (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.foo_data", false]], "format (in module taichi.types.enums)": [[81, "taichi.types.enums.Format", false]], "format (taichi.aot.conventions.gfxruntime140.dr.argumentattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes.format", false]], "fract() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.fract", false]], "frexp() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.frexp", false]], "from_dr_field() (in module taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.from_dr_field", false]], "from_dr_graph() (in module taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.from_dr_graph", false]], "from_dr_kernel() (in module taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.from_dr_kernel", false]], "from_dr_metadata() (in module taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.from_dr_metadata", false]], "from_json_graph() (in module taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.from_json_graph", false]], "from_json_metadata() (in module taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.from_json_metadata", false]], "from_module() (taichi.aot.conventions.gfxruntime140.gfxruntime140 static method)": [[4, "taichi.aot.conventions.gfxruntime140.GfxRuntime140.from_module", false]], "from_numpy() (taichi.lang.field.field method)": [[40, "taichi.lang.field.Field.from_numpy", false]], "from_numpy() (taichi.lang.field.scalarfield method)": [[40, "taichi.lang.field.ScalarField.from_numpy", false]], "from_numpy() (taichi.lang.matrix.matrixfield method)": [[45, "taichi.lang.matrix.MatrixField.from_numpy", false]], "from_numpy() (taichi.lang.matrix.matrixndarray method)": [[45, "taichi.lang.matrix.MatrixNdarray.from_numpy", false]], "from_numpy() (taichi.lang.matrix.vectorndarray method)": [[45, "taichi.lang.matrix.VectorNdarray.from_numpy", false]], "from_numpy() (taichi.lang.struct.structfield method)": [[60, "taichi.lang.struct.StructField.from_numpy", false]], "from_paddle() (taichi.lang.field.field method)": [[40, "taichi.lang.field.Field.from_paddle", false]], "from_paddle() (taichi.lang.struct.structfield method)": [[60, "taichi.lang.struct.StructField.from_paddle", false]], "from_torch() (taichi.lang.field.field method)": [[40, "taichi.lang.field.Field.from_torch", false]], "from_torch() (taichi.lang.struct.structfield method)": [[60, "taichi.lang.struct.StructField.from_torch", false]], "func (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.func", false]], "func() (in module taichi.examples.autodiff.jacobian)": [[12, "taichi.examples.autodiff.jacobian.func", false]], "func() (in module taichi.lang.kernel_impl)": [[44, "taichi.lang.kernel_impl.func", false]], "g (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.g", false]], "gc (taichi.aot.conventions.gfxruntime140.sr.tasktype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TaskType.Gc", false]], "gcrc (taichi.aot.conventions.gfxruntime140.sr.tasktype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TaskType.GcRc", false]], "generate_meta() (taichi.lang.mesh.mesh static method)": [[48, "taichi.lang.mesh.Mesh.generate_meta", false]], "generic_visit() (taichi.lang.ast.checkers.kernelsimplicityastchecker method)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.generic_visit", false]], "get() (taichi.lang.exception.taichiruntimetypeerror static method)": [[38, "taichi.lang.exception.TaichiRuntimeTypeError.get", false]], "get_addr() (in module taichi.lang.snode)": [[58, "taichi.lang.snode.get_addr", false]], "get_data_type_size() (in module taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.get_data_type_size", false]], "get_decorator() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.get_decorator", false]], "get_dist_transform_image() (in module taichi.examples.algorithm.circle-packing.circle_packing_image)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.get_dist_transform_image", false]], "get_error_location() (taichi.lang.ast.checkers.kernelsimplicityastchecker method)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.get_error_location", false]], "get_for_loop_targets() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.get_for_loop_targets", false]], "get_kernel_profiler_total_time() (in module taichi.profiler.kernel_profiler)": [[71, "taichi.profiler.kernel_profiler.get_kernel_profiler_total_time", false]], "get_list_shape() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.get_list_shape", false]], "get_member_field() (taichi.lang.struct.structfield method)": [[60, "taichi.lang.struct.StructField.get_member_field", false]], "get_pos_info() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.get_pos_info", false]], "get_position_as_numpy() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.get_position_as_numpy", false]], "get_predefined_cupti_metrics() (in module taichi.profiler.kernel_metrics)": [[70, "taichi.profiler.kernel_metrics.get_predefined_cupti_metrics", false]], "get_relation_access() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.get_relation_access", false]], "get_relation_size() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.get_relation_size", false]], "get_ret() (taichi.lang.exception.taichiruntimetypeerror static method)": [[38, "taichi.lang.exception.TaichiRuntimeTypeError.get_ret", false]], "get_scalar_field() (taichi.lang.matrix.matrixfield method)": [[45, "taichi.lang.matrix.MatrixField.get_scalar_field", false]], "get_shape() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.get_shape", false]], "get_shape() (taichi.lang.matrix.vector method)": [[45, "taichi.lang.matrix.Vector.get_shape", false]], "get_type_for_kernel_args() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.get_type_for_kernel_args", false]], "get_var_by_name() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.get_var_by_name", false]], "gfxruntime140 (class in taichi.aot.conventions.gfxruntime140)": [[4, "taichi.aot.conventions.gfxruntime140.GfxRuntime140", false]], "gles (in module taichi.lang.misc)": [[49, "taichi.lang.misc.gles", false]], "global_thread_idx() (in module taichi.lang.misc)": [[49, "taichi.lang.misc.global_thread_idx", false]], "global_thread_idx() (in module taichi.lang.simt.block)": [[53, "taichi.lang.simt.block.global_thread_idx", false]], "global_vars (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.global_vars", false]], "globaltmps (taichi.aot.conventions.gfxruntime140.sr.bufferbindingtype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBindingType.GlobalTmps", false]], "gpu (in module taichi.lang.misc)": [[49, "taichi.lang.misc.gpu", false]], "grad (taichi.lang.field.field attribute)": [[40, "taichi.lang.field.Field.grad", false]], "grad (taichi.lang.struct.structfield attribute)": [[60, "taichi.lang.struct.StructField.grad", false]], "grad_xs (in module taichi.examples.autodiff.simple_derivative)": [[15, "taichi.examples.autodiff.simple_derivative.grad_xs", false]], "gradient_descent() (in module taichi.examples.autodiff.minimization)": [[13, "taichi.examples.autodiff.minimization.gradient_descent", false]], "graph (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Graph", false]], "graph (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Graph", false]], "graphdata (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.GraphData", false]], "graphs (taichi.aot.conventions.gfxruntime140.gfxruntime140 attribute)": [[4, "taichi.aot.conventions.gfxruntime140.GfxRuntime140.graphs", false]], "grid_size (taichi.aot.conventions.gfxruntime140.sr.launchgrid attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.LaunchGrid.grid_size", false]], "grouped() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.grouped", false]], "header (taichi.profiler.kernel_metrics.cuptimetric attribute)": [[70, "taichi.profiler.kernel_metrics.CuptiMetric.header", false]], "hemispheric_sampling() (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.hemispheric_sampling", false]], "host_accessors (taichi.lang.field.field attribute)": [[40, "taichi.lang.field.Field.host_accessors", false]], "i (in module taichi.lang.misc)": [[49, "taichi.lang.misc.i", false]], "i (taichi.lang.kernel_arguments.sparsematrixentry attribute)": [[43, "taichi.lang.kernel_arguments.SparseMatrixEntry.i", false]], "i16 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.i16", false]], "i16 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.i16", false]], "i32 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.i32", false]], "i32 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.i32", false]], "i64 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.i64", false]], "i64 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.i64", false]], "i8 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.i8", false]], "i8 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.i8", false]], "iarg (taichi.aot.conventions.gfxruntime140.sr.bufferbinding attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBinding.iarg", false]], "iarg (taichi.aot.conventions.gfxruntime140.sr.texturebinding attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TextureBinding.iarg", false]], "identity() (taichi.lang.matrix.matrix static method)": [[45, "taichi.lang.matrix.Matrix.identity", false]], "if_node (taichi.lang.ast.ast_transformer_utils.nonstaticifguard attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.NonStaticIfGuard.if_node", false]], "ij (in module taichi.lang.misc)": [[49, "taichi.lang.misc.ij", false]], "ijk (in module taichi.lang.misc)": [[49, "taichi.lang.misc.ijk", false]], "ijkl (in module taichi.lang.misc)": [[49, "taichi.lang.misc.ijkl", false]], "ijl (in module taichi.lang.misc)": [[49, "taichi.lang.misc.ijl", false]], "ik (in module taichi.lang.misc)": [[49, "taichi.lang.misc.ik", false]], "ikl (in module taichi.lang.misc)": [[49, "taichi.lang.misc.ikl", false]], "il (in module taichi.lang.misc)": [[49, "taichi.lang.misc.il", false]], "image_buffer (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.image_buffer", false]], "image_pixels (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.image_pixels", false]], "image_resolution (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.image_resolution", false]], "inclusive_add() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.inclusive_add", false]], "inclusive_and() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.inclusive_and", false]], "inclusive_max() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.inclusive_max", false]], "inclusive_min() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.inclusive_min", false]], "inclusive_mul() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.inclusive_mul", false]], "inclusive_or() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.inclusive_or", false]], "inclusive_xor() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.inclusive_xor", false]], "indent (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.indent", false]], "index (taichi.aot.conventions.gfxruntime140.dr.argumentattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes.index", false]], "indices (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.indices", false]], "inf (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.inf", false]], "info() (taichi.linalg.sparse_solver.sparsesolver method)": [[66, "taichi.linalg.sparse_solver.SparseSolver.info", false]], "init() (in module taichi.lang.misc)": [[49, "taichi.lang.misc.init", false]], "init_field() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.init_field", false]], "initialize() (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.initialize", false]], "initialize() (in module taichi.examples.autodiff.simple_derivative)": [[15, "taichi.examples.autodiff.simple_derivative.initialize", false]], "instantiate() (taichi.aot.module.kerneltemplate method)": [[8, "taichi.aot.module.KernelTemplate.instantiate", false]], "int() (in module taichi.types.quant)": [[85, "taichi.types.quant.int", false]], "int16 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.int16", false]], "int32 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.int32", false]], "int64 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.int64", false]], "int8 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.int8", false]], "inverse() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.inverse", false]], "inverse() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.inverse", false]], "inverse() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.inverse", false]], "is_active() (in module taichi.lang.snode)": [[58, "taichi.lang.snode.is_active", false]], "is_array (taichi.aot.conventions.gfxruntime140.dr.argumentattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes.is_array", false]], "is_external_func() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.is_external_func", false]], "is_in_non_static_control_flow (taichi.lang.ast.ast_transformer_utils.nonstaticcontrolflowstatus attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.NonStaticControlFlowStatus.is_in_non_static_control_flow", false]], "is_in_non_static_control_flow() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.is_in_non_static_control_flow", false]], "is_in_static_for() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.is_in_static_for", false]], "is_in_static_scope (taichi.lang.ast.ast_transformer_utils.staticscopestatus attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.StaticScopeStatus.is_in_static_scope", false]], "is_in_static_scope() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.is_in_static_scope", false]], "is_int_const() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.is_int_const", false]], "is_integral (in module taichi.types.utils)": [[87, "taichi.types.utils.is_integral", false]], "is_jit_evaluator (taichi.aot.conventions.gfxruntime140.dr.kernelattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.KernelAttributes.is_jit_evaluator", false]], "is_json_data_model() (in module taichi.aot.utils)": [[9, "taichi.aot.utils.is_json_data_model", false]], "is_kernel (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.is_kernel", false]], "is_real (in module taichi.types.utils)": [[87, "taichi.types.utils.is_real", false]], "is_real_function (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.is_real_function", false]], "is_scalar (taichi.aot.conventions.gfxruntime140.dr.fieldattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.FieldAttributes.is_scalar", false]], "is_signed (in module taichi.types.utils)": [[87, "taichi.types.utils.is_signed", false]], "is_static (taichi.lang.ast.ast_transformer_utils.loopscopeattribute attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopScopeAttribute.is_static", false]], "is_storage (taichi.aot.conventions.gfxruntime140.dr.texturebinding attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TextureBinding.is_storage", false]], "is_tensor (in module taichi.types.utils)": [[87, "taichi.types.utils.is_tensor", false]], "is_tuple() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.is_tuple", false]], "is_var_declared() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.is_var_declared", false]], "isinf() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.isinf", false]], "isnan() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.isnan", false]], "items (taichi.lang.argpack.argpack property)": [[30, "taichi.lang.argpack.ArgPack.items", false]], "items (taichi.lang.struct.struct property)": [[60, "taichi.lang.struct.Struct.items", false]], "ivec2 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.ivec2", false]], "ivec3 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.ivec3", false]], "ivec4 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.ivec4", false]], "j (in module taichi.lang.misc)": [[49, "taichi.lang.misc.j", false]], "j (taichi.lang.kernel_arguments.sparsematrixentry attribute)": [[43, "taichi.lang.kernel_arguments.SparseMatrixEntry.j", false]], "jacobian_fwd (in module taichi.examples.autodiff.jacobian)": [[12, "taichi.examples.autodiff.jacobian.jacobian_fwd", false]], "jacobian_rev (in module taichi.examples.autodiff.jacobian)": [[12, "taichi.examples.autodiff.jacobian.jacobian_rev", false]], "jk (in module taichi.lang.misc)": [[49, "taichi.lang.misc.jk", false]], "jkl (in module taichi.lang.misc)": [[49, "taichi.lang.misc.jkl", false]], "jl (in module taichi.lang.misc)": [[49, "taichi.lang.misc.jl", false]], "json_data_model() (in module taichi.aot.utils)": [[9, "taichi.aot.utils.json_data_model", false]], "k (in module taichi.lang.misc)": [[49, "taichi.lang.misc.k", false]], "kernel (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Kernel", false]], "kernel (taichi.aot.conventions.gfxruntime140.sr.dispatch attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Dispatch.kernel", false]], "kernel() (in module taichi.lang.kernel_impl)": [[44, "taichi.lang.kernel_impl.kernel", false]], "kernel_args (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.kernel_args", false]], "kernel_name (taichi.aot.conventions.gfxruntime140.dr.dispatch attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Dispatch.kernel_name", false]], "kernelargument (class in taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.KernelArgument", false]], "kernelattributes (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.KernelAttributes", false]], "kernels (taichi.aot.conventions.gfxruntime140.dr.metadata attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Metadata.kernels", false]], "kernels (taichi.aot.conventions.gfxruntime140.sr.metadata attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Metadata.kernels", false]], "kernelsimplicityastchecker (class in taichi.lang.ast.checkers)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker", false]], "kernelsimplicityastchecker.scopeguard (class in taichi.lang.ast.checkers)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.ScopeGuard", false]], "kerneltemplate (class in taichi.aot.module)": [[8, "taichi.aot.module.KernelTemplate", false]], "key (taichi.aot.conventions.gfxruntime140.dr.devicecapabilitylevel attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.DeviceCapabilityLevel.key", false]], "key (taichi.aot.conventions.gfxruntime140.dr.graph attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Graph.key", false]], "keygen() (taichi.aot.module.kerneltemplate static method)": [[8, "taichi.aot.module.KernelTemplate.keygen", false]], "keys (taichi.lang.argpack.argpack property)": [[30, "taichi.lang.argpack.ArgPack.keys", false]], "keys (taichi.lang.struct.struct property)": [[60, "taichi.lang.struct.Struct.keys", false]], "keys (taichi.lang.struct.structfield property)": [[60, "taichi.lang.struct.StructField.keys", false]], "kl (in module taichi.lang.misc)": [[49, "taichi.lang.misc.kl", false]], "l (in module taichi.examples.autodiff.minimization)": [[13, "taichi.examples.autodiff.minimization.L", false]], "l (in module taichi.examples.features.sparse.taichi_dynamic)": [[19, "taichi.examples.features.sparse.taichi_dynamic.l", false]], "l (in module taichi.lang.misc)": [[49, "taichi.lang.misc.l", false]], "laplace() (in module taichi.examples.algorithm.laplace)": [[11, "taichi.examples.algorithm.laplace.laplace", false]], "launch_grid (taichi.aot.conventions.gfxruntime140.sr.task attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Task.launch_grid", false]], "launchgrid (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.LaunchGrid", false]], "layout (in module taichi.types.enums)": [[81, "taichi.types.enums.Layout", false]], "layout (taichi.lang.matrix.matrixndarray attribute)": [[45, "taichi.lang.matrix.MatrixNdarray.layout", false]], "layout (taichi.lang.matrix.vectorndarray attribute)": [[45, "taichi.lang.matrix.VectorNdarray.layout", false]], "lazy_dual() (taichi.lang.snode.snode method)": [[58, "taichi.lang.snode.SNode.lazy_dual", false]], "lazy_grad() (taichi.lang.snode.snode method)": [[58, "taichi.lang.snode.SNode.lazy_grad", false]], "lb (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.lb", false]], "learning_rate (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.learning_rate", false]], "length() (in module taichi.lang.snode)": [[58, "taichi.lang.snode.length", false]], "length() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.length", false]], "lerp() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.lerp", false]], "linearoperator (class in taichi.linalg.matrixfree_cg)": [[63, "taichi.linalg.matrixfree_cg.LinearOperator", false]], "lineno_offset (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.lineno_offset", false]], "listgen (taichi.aot.conventions.gfxruntime140.sr.bufferbindingtype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBindingType.ListGen", false]], "listgen (taichi.aot.conventions.gfxruntime140.sr.tasktype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TaskType.ListGen", false]], "load_image() (in module taichi.examples.algorithm.circle-packing.circle_packing_image)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.load_image", false]], "load_meta() (taichi.lang.mesh.mesh static method)": [[48, "taichi.lang.mesh.Mesh.load_meta", false]], "local_scopes (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.local_scopes", false]], "log() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.log", false]], "log2() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.log2", false]], "loop_attribute (taichi.lang.ast.ast_transformer_utils.nonstaticifguard attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.NonStaticIfGuard.loop_attribute", false]], "loop_config() (in module taichi.lang.misc)": [[49, "taichi.lang.misc.loop_config", false]], "loop_scope_guard() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.loop_scope_guard", false]], "loop_scopes (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.loop_scopes", false]], "loop_status() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.loop_status", false]], "loopscopeattribute (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopScopeAttribute", false]], "loopscopeguard (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopScopeGuard", false]], "loopstatus (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopStatus", false]], "loss (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.loss", false]], "losses (in module taichi.examples.autodiff.jacobian)": [[12, "taichi.examples.autodiff.jacobian.losses", false]], "m (taichi.lang.matrix.matrixfield attribute)": [[45, "taichi.lang.matrix.MatrixField.m", false]], "m (taichi.lang.matrix.matrixndarray attribute)": [[45, "taichi.lang.matrix.MatrixNdarray.m", false]], "main() (in module taichi.examples.algorithm.circle-packing.circle_packing_image)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.main", false]], "main() (in module taichi.examples.algorithm.laplace)": [[11, "taichi.examples.algorithm.laplace.main", false]], "main() (in module taichi.examples.autodiff.minimization)": [[13, "taichi.examples.autodiff.minimization.main", false]], "main() (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.main", false]], "main() (in module taichi.examples.autodiff.simple_derivative)": [[15, "taichi.examples.autodiff.simple_derivative.main", false]], "main() (in module taichi.examples.features.sparse.taichi_dynamic)": [[19, "taichi.examples.features.sparse.taichi_dynamic.main", false]], "main() (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.main", false]], "make_lists() (in module taichi.examples.features.sparse.taichi_dynamic)": [[19, "taichi.examples.features.sparse.taichi_dynamic.make_lists", false]], "mark_no_more_for_loop() (taichi.lang.ast.checkers.kernelsimplicityastchecker.scopeguard method)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.ScopeGuard.mark_no_more_for_loop", false]], "mark_no_more_stmt() (taichi.lang.ast.checkers.kernelsimplicityastchecker.scopeguard method)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.ScopeGuard.mark_no_more_stmt", false]], "mat2 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.mat2", false]], "mat3 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.mat3", false]], "mat4 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.mat4", false]], "match_all() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.match_all", false]], "match_any() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.match_any", false]], "material (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.Material", false]], "matmul() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.matmul", false]], "matrix (class in taichi.lang.matrix)": [[45, "taichi.lang.matrix.Matrix", false]], "matrix (taichi.linalg.sparse_cg.sparsecg attribute)": [[64, "taichi.linalg.sparse_cg.SparseCG.matrix", false]], "matrix (taichi.linalg.sparse_solver.sparsesolver attribute)": [[66, "taichi.linalg.sparse_solver.SparseSolver.matrix", false]], "matrix() (in module taichi.types.compound_types)": [[80, "taichi.types.compound_types.matrix", false]], "matrixfield (class in taichi.lang.matrix)": [[45, "taichi.lang.matrix.MatrixField", false]], "matrixfreebicgstab() (in module taichi.linalg.matrixfree_cg)": [[63, "taichi.linalg.matrixfree_cg.MatrixFreeBICGSTAB", false]], "matrixfreecg() (in module taichi.linalg.matrixfree_cg)": [[63, "taichi.linalg.matrixfree_cg.MatrixFreeCG", false]], "matrixndarray (class in taichi.lang.matrix)": [[45, "taichi.lang.matrix.MatrixNdarray", false]], "matvec() (taichi.linalg.matrixfree_cg.linearoperator method)": [[63, "taichi.linalg.matrixfree_cg.LinearOperator.matvec", false]], "max() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.max", false]], "max() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.max", false]], "max() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.max", false]], "max_iter (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.max_iter", false]], "mem_offset_in_parent (taichi.aot.conventions.gfxruntime140.dr.fieldattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.FieldAttributes.mem_offset_in_parent", false]], "mem_sync() (in module taichi.lang.simt.block)": [[53, "taichi.lang.simt.block.mem_sync", false]], "memfence() (in module taichi.lang.simt.grid)": [[54, "taichi.lang.simt.grid.memfence", false]], "memory_barrier() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.memory_barrier", false]], "mesh (class in taichi.lang.mesh)": [[48, "taichi.lang.mesh.Mesh", false]], "mesh_local() (in module taichi.lang.misc)": [[49, "taichi.lang.misc.mesh_local", false]], "mesh_patch_idx() (in module taichi.lang.misc)": [[49, "taichi.lang.misc.mesh_patch_idx", false]], "mesh_ptr (taichi.lang.mesh.meshinstance attribute)": [[48, "taichi.lang.mesh.MeshInstance.mesh_ptr", false]], "meshfor (taichi.aot.conventions.gfxruntime140.sr.tasktype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TaskType.MeshFor", false]], "meshinstance (class in taichi.lang.mesh)": [[48, "taichi.lang.mesh.MeshInstance", false]], "metadata (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Metadata", false]], "metadata (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Metadata", false]], "metadata (taichi.aot.conventions.gfxruntime140.gfxruntime140 attribute)": [[4, "taichi.aot.conventions.gfxruntime140.GfxRuntime140.metadata", false]], "metal (in module taichi.lang.misc)": [[49, "taichi.lang.misc.metal", false]], "methods (taichi.lang.struct.struct property)": [[60, "taichi.lang.struct.Struct.methods", false]], "min() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.min", false]], "min() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.min", false]], "min() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.min", false]], "mix() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.mix", false]], "mmwrite() (taichi.linalg.sparse_matrix.sparsematrix method)": [[65, "taichi.linalg.sparse_matrix.SparseMatrix.mmwrite", false]], "mod() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.mod", false]], "module": [[1, "module-taichi.ad", false], [2, "module-taichi.algorithms", false], [3, "module-taichi.aot.conventions.gfxruntime140.dr", false], [4, "module-taichi.aot.conventions.gfxruntime140", false], [5, "module-taichi.aot.conventions.gfxruntime140.sr", false], [6, "module-taichi.aot.conventions", false], [7, "module-taichi.aot", false], [8, "module-taichi.aot.module", false], [9, "module-taichi.aot.utils", false], [10, "module-taichi.examples.algorithm.circle-packing.circle_packing_image", false], [11, "module-taichi.examples.algorithm.laplace", false], [12, "module-taichi.examples.autodiff.jacobian", false], [13, "module-taichi.examples.autodiff.minimization", false], [14, "module-taichi.examples.autodiff.regression", false], [15, "module-taichi.examples.autodiff.simple_derivative", false], [16, "module-taichi.examples.features.io.export_mesh", false], [17, "module-taichi.examples.features.io.export_ply", false], [18, "module-taichi.examples.features.sparse.explicit_activation", false], [19, "module-taichi.examples.features.sparse.taichi_dynamic", false], [20, "module-taichi.examples.features.sparse.tutorial", false], [21, "module-taichi.examples.machine_learning.differential_evolution", false], [22, "module-taichi.examples.minimal", false], [23, "module-taichi.examples.patterns", false], [24, "module-taichi.examples.real_func.rendering.cornell_box", false], [25, "module-taichi.examples.simulation.eulerfluid2d", false], [26, "module-taichi.experimental", false], [27, "module-taichi.graph", false], [28, "module-taichi", false], [29, "module-taichi.lang.any_array", false], [30, "module-taichi.lang.argpack", false], [31, "module-taichi.lang.ast.ast_transformer", false], [32, "module-taichi.lang.ast.ast_transformer_utils", false], [33, "module-taichi.lang.ast.checkers", false], [34, "module-taichi.lang.ast", false], [35, "module-taichi.lang.ast.symbol_resolver", false], [36, "module-taichi.lang.ast.transform", false], [37, "module-taichi.lang.common_ops", false], [38, "module-taichi.lang.exception", false], [39, "module-taichi.lang.expr", false], [40, "module-taichi.lang.field", false], [41, "module-taichi.lang.impl", false], [42, "module-taichi.lang", false], [43, "module-taichi.lang.kernel_arguments", false], [44, "module-taichi.lang.kernel_impl", false], [45, "module-taichi.lang.matrix", false], [46, "module-taichi.lang.matrix_ops", false], [47, "module-taichi.lang.matrix_ops_utils", false], [48, "module-taichi.lang.mesh", false], [49, "module-taichi.lang.misc", false], [50, "module-taichi.lang.ops", false], [51, "module-taichi.lang.runtime_ops", false], [52, "module-taichi.lang.shell", false], [53, "module-taichi.lang.simt.block", false], [54, "module-taichi.lang.simt.grid", false], [55, "module-taichi.lang.simt", false], [56, "module-taichi.lang.simt.subgroup", false], [57, "module-taichi.lang.simt.warp", false], [58, "module-taichi.lang.snode", false], [59, "module-taichi.lang.source_builder", false], [60, "module-taichi.lang.struct", false], [61, "module-taichi.lang.util", false], [62, "module-taichi.linalg", false], [63, "module-taichi.linalg.matrixfree_cg", false], [64, "module-taichi.linalg.sparse_cg", false], [65, "module-taichi.linalg.sparse_matrix", false], [66, "module-taichi.linalg.sparse_solver", false], [67, "module-taichi.math", false], [68, "module-taichi.math.mathimpl", false], [69, "module-taichi.profiler", false], [70, "module-taichi.profiler.kernel_metrics", false], [71, "module-taichi.profiler.kernel_profiler", false], [72, "module-taichi.profiler.memory_profiler", false], [73, "module-taichi.profiler.scoped_profiler", false], [74, "module-taichi.sparse", false], [75, "module-taichi.tools.diagnose", false], [76, "module-taichi.tools", false], [77, "module-taichi.tools.np2ply", false], [78, "module-taichi.tools.vtk", false], [79, "module-taichi.types.annotations", false], [80, "module-taichi.types.compound_types", false], [81, "module-taichi.types.enums", false], [82, "module-taichi.types", false], [83, "module-taichi.types.ndarray_type", false], [84, "module-taichi.types.primitive_types", false], [85, "module-taichi.types.quant", false], [86, "module-taichi.types.texture_type", false], [87, "module-taichi.types.utils", false]], "module (class in taichi.aot.module)": [[8, "taichi.aot.module.Module", false]], "mouse_addspeed() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.mouse_addspeed", false]], "mouse_interaction() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.mouse_interaction", false]], "move_particles() (in module taichi.examples.features.io.export_ply)": [[17, "taichi.examples.features.io.export_ply.move_particles", false]], "n (in module taichi.examples.algorithm.laplace)": [[11, "taichi.examples.algorithm.laplace.N", false]], "n (in module taichi.examples.autodiff.minimization)": [[13, "taichi.examples.autodiff.minimization.n", false]], "n (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.N", false]], "n (in module taichi.examples.autodiff.simple_derivative)": [[15, "taichi.examples.autodiff.simple_derivative.N", false]], "n (in module taichi.examples.features.sparse.taichi_dynamic)": [[19, "taichi.examples.features.sparse.taichi_dynamic.n", false]], "n (taichi.lang.matrix.matrixfield attribute)": [[45, "taichi.lang.matrix.MatrixField.n", false]], "n (taichi.lang.matrix.matrixndarray attribute)": [[45, "taichi.lang.matrix.MatrixNdarray.n", false]], "n (taichi.lang.matrix.vectorndarray attribute)": [[45, "taichi.lang.matrix.VectorNdarray.n", false]], "n_loss (in module taichi.examples.autodiff.jacobian)": [[12, "taichi.examples.autodiff.jacobian.N_loss", false]], "n_param (in module taichi.examples.autodiff.jacobian)": [[12, "taichi.examples.autodiff.jacobian.N_param", false]], "name (taichi.aot.conventions.gfxruntime140.dr.argumentattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes.name", false]], "name (taichi.aot.conventions.gfxruntime140.dr.kernelattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.KernelAttributes.name", false]], "name (taichi.aot.conventions.gfxruntime140.dr.symbolicargument attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.SymbolicArgument.name", false]], "name (taichi.aot.conventions.gfxruntime140.dr.taskattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TaskAttributes.name", false]], "name (taichi.aot.conventions.gfxruntime140.sr.argument attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Argument.name", false]], "name (taichi.aot.conventions.gfxruntime140.sr.field attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Field.name", false]], "name (taichi.aot.conventions.gfxruntime140.sr.graph attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Graph.name", false]], "name (taichi.aot.conventions.gfxruntime140.sr.kernel attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Kernel.name", false]], "name (taichi.aot.conventions.gfxruntime140.sr.namedargument attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.NamedArgument.name", false]], "name (taichi.aot.conventions.gfxruntime140.sr.task attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Task.name", false]], "name (taichi.lang.kernel_arguments.kernelargument attribute)": [[43, "taichi.lang.kernel_arguments.KernelArgument.name", false]], "name (taichi.lang.struct.structfield attribute)": [[60, "taichi.lang.struct.StructField.name", false]], "name (taichi.profiler.kernel_metrics.cuptimetric attribute)": [[70, "taichi.profiler.kernel_metrics.CuptiMetric.name", false]], "namedargument (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.NamedArgument", false]], "nan (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.nan", false]], "ndarray (in module taichi.types.ndarray_type)": [[83, "taichi.types.ndarray_type.NDArray", false], [83, "taichi.types.ndarray_type.ndarray", false]], "ndarray (taichi.aot.conventions.gfxruntime140.sr.parametertype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ParameterType.Ndarray", false]], "ndarray() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.ndarray", false]], "ndarray() (taichi.lang.matrix.matrix class method)": [[45, "taichi.lang.matrix.Matrix.ndarray", false]], "ndarray() (taichi.lang.matrix.vector class method)": [[45, "taichi.lang.matrix.Vector.ndarray", false]], "ndarrayaccess (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.NdArrayAccess", false]], "ndim (taichi.aot.conventions.gfxruntime140.sr.argumentndarray attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentNdArray.ndim", false]], "ndim (taichi.aot.conventions.gfxruntime140.sr.argumentrwtexture attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentRwTexture.ndim", false]], "ndim (taichi.aot.conventions.gfxruntime140.sr.argumenttexture attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ArgumentTexture.ndim", false]], "ndim (taichi.lang.matrix.matrixfield attribute)": [[45, "taichi.lang.matrix.MatrixField.ndim", false]], "nearest_non_static_if (taichi.lang.ast.ast_transformer_utils.loopscopeattribute attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopScopeAttribute.nearest_non_static_if", false]], "nearest_object() (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.nearest_object", false]], "new_scope() (taichi.lang.ast.checkers.kernelsimplicityastchecker method)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.new_scope", false]], "no_activate() (in module taichi.lang.misc)": [[49, "taichi.lang.misc.no_activate", false]], "noaccess (taichi.aot.conventions.gfxruntime140.sr.ndarrayaccess attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.NdArrayAccess.NoAccess", false]], "non_static_control_flow_guard() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.non_static_control_flow_guard", false]], "non_static_control_flow_status (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.non_static_control_flow_status", false]], "non_static_guard (taichi.lang.ast.ast_transformer_utils.loopscopeguard attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopScopeGuard.non_static_guard", false]], "non_static_guard (taichi.lang.ast.ast_transformer_utils.nonstaticifguard attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.NonStaticIfGuard.non_static_guard", false]], "non_static_if_guard() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.non_static_if_guard", false]], "nonstaticcontrolflowguard (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.NonStaticControlFlowGuard", false]], "nonstaticcontrolflowstatus (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.NonStaticControlFlowStatus", false]], "nonstaticifguard (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.NonStaticIfGuard", false]], "noreturn (taichi.lang.ast.ast_transformer_utils.returnstatus attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ReturnStatus.NoReturn", false]], "norm() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.norm", false]], "norm() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.norm", false]], "norm_inv() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.norm_inv", false]], "norm_inv() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.norm_inv", false]], "norm_sqr() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.norm_sqr", false]], "norm_sqr() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.norm_sqr", false]], "normal (taichi.lang.ast.ast_transformer_utils.loopstatus attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopStatus.Normal", false]], "normalize() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.normalize", false]], "normalized() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.normalized", false]], "normalized() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.normalized", false]], "np_pos (in module taichi.examples.features.io.export_ply)": [[17, "taichi.examples.features.io.export_ply.np_pos", false]], "num_channels (taichi.aot.conventions.gfxruntime140.dr.symbolicargument attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.SymbolicArgument.num_channels", false]], "num_cols (taichi.linalg.sparse_matrix.sparsematrixbuilder attribute)": [[65, "taichi.linalg.sparse_matrix.SparseMatrixBuilder.num_cols", false]], "num_face_channels (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.num_face_channels", false]], "num_faces (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.num_faces", false]], "num_rows (taichi.linalg.sparse_matrix.sparsematrixbuilder attribute)": [[65, "taichi.linalg.sparse_matrix.SparseMatrixBuilder.num_rows", false]], "num_vertex_channels (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.num_vertex_channels", false]], "num_vertices (in module taichi.examples.features.io.export_ply)": [[17, "taichi.examples.features.io.export_ply.num_vertices", false]], "num_vertices (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.num_vertices", false]], "number_coeffs (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.number_coeffs", false]], "nxt (taichi.examples.simulation.eulerfluid2d.texpair attribute)": [[25, "taichi.examples.simulation.eulerfluid2d.TexPair.nxt", false]], "objects (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.objects", false]], "offset (taichi.aot.conventions.gfxruntime140.sr.field attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Field.offset", false]], "offset_in_mem (taichi.aot.conventions.gfxruntime140.dr.argumentattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes.offset_in_mem", false]], "one() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.one", false]], "one() (taichi.lang.matrix.matrix static method)": [[45, "taichi.lang.matrix.Matrix.one", false]], "opengl (in module taichi.lang.misc)": [[49, "taichi.lang.misc.opengl", false]], "outer_product() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.outer_product", false]], "outer_product() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.outer_product", false]], "p() (in module taichi.examples.minimal)": [[22, "taichi.examples.minimal.p", false]], "p_with_boundary() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.p_with_boundary", false]], "parametertype (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ParameterType", false]], "params (in module taichi.examples.autodiff.jacobian)": [[12, "taichi.examples.autodiff.jacobian.params", false]], "parent() (taichi.lang.field.field method)": [[40, "taichi.lang.field.Field.parent", false]], "parent() (taichi.lang.snode.snode method)": [[58, "taichi.lang.snode.SNode.parent", false]], "pi (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.pi", false]], "pixel (in module taichi.examples.features.sparse.explicit_activation)": [[18, "taichi.examples.features.sparse.explicit_activation.pixel", false]], "pixel (in module taichi.examples.features.sparse.tutorial)": [[20, "taichi.examples.features.sparse.tutorial.pixel", false]], "place() (taichi.lang.field.bitpackedfields method)": [[40, "taichi.lang.field.BitpackedFields.place", false]], "place() (taichi.lang.snode.snode method)": [[58, "taichi.lang.snode.SNode.place", false]], "place_pos() (in module taichi.examples.features.io.export_ply)": [[17, "taichi.examples.features.io.export_ply.place_pos", false]], "plot_cirlces() (in module taichi.examples.algorithm.circle-packing.circle_packing_image)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.plot_cirlces", false]], "ply_supported_types (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.ply_supported_types", false]], "plywriter (class in taichi.tools.np2ply)": [[77, "taichi.tools.np2ply.PLYWriter", false]], "pointer() (taichi.lang.snode.snode method)": [[58, "taichi.lang.snode.SNode.pointer", false]], "poly() (in module taichi.examples.autodiff.simple_derivative)": [[15, "taichi.examples.autodiff.simple_derivative.poly", false]], "pop (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.pop", false]], "popcnt() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.popcnt", false]], "pos (in module taichi.examples.features.io.export_ply)": [[17, "taichi.examples.features.io.export_ply.pos", false]], "pow() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.pow", false]], "preconditions() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.preconditions", false]], "pressfield (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.pressField", false]], "pressure_iteration() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.pressure_iteration", false]], "pressure_pair (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.pressure_pair", false]], "pressure_projection() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.pressure_projection", false]], "pressure_solve() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.pressure_solve", false]], "pressure_step() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.pressure_step", false]], "print_header() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.print_header", false]], "print_kernel_profiler_info() (in module taichi.profiler.kernel_profiler)": [[71, "taichi.profiler.kernel_profiler.print_kernel_profiler_info", false]], "print_memory_profiler_info() (in module taichi.profiler.memory_profiler)": [[72, "taichi.profiler.memory_profiler.print_memory_profiler_info", false]], "print_scoped_profiler_info() (in module taichi.profiler.scoped_profiler)": [[73, "taichi.profiler.scoped_profiler.print_scoped_profiler_info", false]], "print_triplets() (taichi.linalg.sparse_matrix.sparsematrixbuilder method)": [[65, "taichi.linalg.sparse_matrix.SparseMatrixBuilder.print_triplets", false]], "process() (in module taichi.examples.algorithm.circle-packing.circle_packing_image)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.process", false]], "process_dictcomp() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.process_dictcomp", false]], "process_generators() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.process_generators", false]], "process_ifs() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.process_ifs", false]], "process_listcomp() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.process_listcomp", false]], "produce_injected_args() (in module taichi.aot.utils)": [[9, "taichi.aot.utils.produce_injected_args", false]], "produce_injected_args_from_template() (in module taichi.aot.utils)": [[9, "taichi.aot.utils.produce_injected_args_from_template", false]], "ptr (taichi.lang.kernel_arguments.sparsematrixentry attribute)": [[43, "taichi.lang.kernel_arguments.SparseMatrixEntry.ptr", false]], "ptr (taichi.lang.kernel_arguments.sparsematrixproxy attribute)": [[43, "taichi.lang.kernel_arguments.SparseMatrixProxy.ptr", false]], "ptr (taichi.lang.matrix.matrixfield attribute)": [[45, "taichi.lang.matrix.MatrixField.ptr", false]], "ptr (taichi.lang.snode.snode attribute)": [[58, "taichi.lang.snode.SNode.ptr", false]], "ptype (taichi.aot.conventions.gfxruntime140.dr.argumentattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes.ptype", false]], "push_argpack_arg() (in module taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.push_argpack_arg", false]], "pybuf_enabled (in module taichi.lang.shell)": [[52, "id0", false], [52, "taichi.lang.shell.pybuf_enabled", false]], "pyfunc() (in module taichi.lang.kernel_impl)": [[44, "taichi.lang.kernel_impl.pyfunc", false]], "quant_array() (taichi.lang.snode.snode method)": [[58, "taichi.lang.snode.SNode.quant_array", false]], "query_kernel_profiler_info() (in module taichi.profiler.kernel_profiler)": [[71, "taichi.profiler.kernel_profiler.query_kernel_profiler_info", false]], "r (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.r", false]], "r (taichi.examples.algorithm.circle-packing.circle_packing_image.circle attribute)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.Circle.r", false]], "radians() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.radians", false]], "raised (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.raised", false]], "rand_int() (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.rand_int", false]], "random() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.random", false]], "range_for_attribs (taichi.aot.conventions.gfxruntime140.dr.taskattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TaskAttributes.range_for_attribs", false]], "rangefor (taichi.aot.conventions.gfxruntime140.sr.tasktype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TaskType.RangeFor", false]], "rangeforattributes (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.RangeForAttributes", false]], "raw_div() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.raw_div", false]], "raw_mod() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.raw_mod", false]], "ray (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.Ray", false]], "raycast() (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.raycast", false]], "raytrace() (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.raytrace", false]], "read (taichi.aot.conventions.gfxruntime140.sr.ndarrayaccess attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.NdArrayAccess.Read", false]], "readwrite (taichi.aot.conventions.gfxruntime140.sr.ndarrayaccess attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.NdArrayAccess.ReadWrite", false]], "real_func() (in module taichi.experimental)": [[26, "taichi.experimental.real_func", false]], "real_func() (in module taichi.lang.kernel_impl)": [[44, "taichi.lang.kernel_impl.real_func", false]], "reduce() (in module taichi.examples.autodiff.minimization)": [[13, "taichi.examples.autodiff.minimization.reduce", false]], "reduce_add() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.reduce_add", false]], "reduce_and() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.reduce_and", false]], "reduce_max() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.reduce_max", false]], "reduce_min() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.reduce_min", false]], "reduce_mul() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.reduce_mul", false]], "reduce_or() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.reduce_or", false]], "reduce_xor() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.reduce_xor", false]], "ref() (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.ref", false]], "reflect() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.reflect", false]], "refract() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.refract", false]], "regress() (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.regress", false]], "regress_raw() (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.regress_raw", false]], "relation_set (taichi.lang.mesh.meshinstance attribute)": [[48, "taichi.lang.mesh.MeshInstance.relation_set", false]], "render() (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.render", false]], "required_caps (taichi.aot.conventions.gfxruntime140.dr.metadata attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Metadata.required_caps", false]], "required_caps (taichi.aot.conventions.gfxruntime140.sr.metadata attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Metadata.required_caps", false]], "res (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.res", false]], "rescale_index() (in module taichi.lang.snode)": [[58, "taichi.lang.snode.rescale_index", false]], "reset() (in module taichi.lang.misc)": [[49, "taichi.lang.misc.reset", false]], "reshape_list() (in module taichi.lang.ast.ast_transformer)": [[31, "taichi.lang.ast.ast_transformer.reshape_list", false]], "resolve_to() (taichi.lang.ast.symbol_resolver.astresolver static method)": [[35, "taichi.lang.ast.symbol_resolver.ASTResolver.resolve_to", false]], "ret (taichi.aot.conventions.gfxruntime140.sr.context attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Context.ret", false]], "ret_attribs_vec_ (taichi.aot.conventions.gfxruntime140.dr.contextattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ContextAttributes.ret_attribs_vec_", false]], "rets (taichi.aot.conventions.gfxruntime140.sr.bufferbindingtype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBindingType.Rets", false]], "rets_bytes_ (taichi.aot.conventions.gfxruntime140.dr.contextattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ContextAttributes.rets_bytes_", false]], "return_data (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.return_data", false]], "returned (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.returned", false]], "returnedvalue (taichi.lang.ast.ast_transformer_utils.returnstatus attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ReturnStatus.ReturnedValue", false]], "returnedvoid (taichi.lang.ast.ast_transformer_utils.returnstatus attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ReturnStatus.ReturnedVoid", false]], "returns (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.returns", false]], "returnstatus (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.ReturnStatus", false]], "returnvalue (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ReturnValue", false]], "rgba (in module taichi.examples.features.io.export_ply)": [[17, "taichi.examples.features.io.export_ply.rgba", false]], "root (in module taichi.lang.impl)": [[41, "taichi.lang.impl.root", false]], "root (taichi.aot.conventions.gfxruntime140.sr.bufferbindingtype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.BufferBindingType.Root", false]], "root_buffer_size (taichi.aot.conventions.gfxruntime140.dr.metadata attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Metadata.root_buffer_size", false]], "root_buffer_size (taichi.aot.conventions.gfxruntime140.sr.metadata attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Metadata.root_buffer_size", false]], "root_id (taichi.aot.conventions.gfxruntime140.dr.buffer attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Buffer.root_id", false]], "rot_by_axis() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.rot_by_axis", false]], "rot_yaw_pitch_roll() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.rot_yaw_pitch_roll", false]], "rotate() (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.rotate", false]], "rotation2d() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.rotation2d", false]], "rotation3d() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.rotation3d", false]], "round() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.round", false]], "row (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.row", false]], "rows() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.rows", false]], "rows() (taichi.lang.matrix.matrix static method)": [[45, "taichi.lang.matrix.Matrix.rows", false]], "rsqrt() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.rsqrt", false]], "rw_texture (in module taichi.types.texture_type)": [[86, "taichi.types.texture_type.rw_texture", false]], "rwtexture (taichi.aot.conventions.gfxruntime140.sr.parametertype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ParameterType.RwTexture", false]], "rwtexture (taichi.aot.conventions.gfxruntime140.sr.texturebindingtype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TextureBindingType.RwTexture", false]], "same_shapes() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.same_shapes", false]], "sample() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.sample", false]], "sanity_check() (taichi.tools.np2ply.plywriter method)": [[77, "taichi.tools.np2ply.PLYWriter.sanity_check", false]], "save() (taichi.aot.module.module method)": [[8, "taichi.aot.module.Module.save", false]], "scalar (taichi.aot.conventions.gfxruntime140.sr.parametertype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ParameterType.Scalar", false]], "scalarfield (class in taichi.lang.field)": [[40, "taichi.lang.field.ScalarField", false]], "scale (taichi.profiler.kernel_metrics.cuptimetric attribute)": [[70, "taichi.profiler.kernel_metrics.CuptiMetric.scale", false]], "scale() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.scale", false]], "scopes (taichi.lang.ast.ast_transformer_utils.loopscopeguard attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopScopeGuard.scopes", false]], "scopes (taichi.lang.ast.ast_transformer_utils.variablescopeguard attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.VariableScopeGuard.scopes", false]], "sdfobject (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.SDFObject", false]], "search_num (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.search_num", false]], "seed (in module taichi.examples.autodiff.jacobian)": [[12, "taichi.examples.autodiff.jacobian.seed", false]], "select() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.select", false]], "serial (taichi.aot.conventions.gfxruntime140.sr.tasktype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TaskType.Serial", false]], "series_prefix (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.series_prefix", false]], "series_prefix (in module taichi.examples.features.io.export_ply)": [[17, "taichi.examples.features.io.export_ply.series_prefix", false]], "series_prefix_ascii (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.series_prefix_ascii", false]], "set_index_mapping() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.set_index_mapping", false]], "set_kernel_profiler_metrics() (in module taichi.profiler.kernel_profiler)": [[71, "taichi.profiler.kernel_profiler.set_kernel_profiler_metrics", false]], "set_kernel_profiler_toolkit() (in module taichi.profiler.kernel_profiler)": [[71, "taichi.profiler.kernel_profiler.set_kernel_profiler_toolkit", false]], "set_loop_status() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.set_loop_status", false]], "set_num_patches() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.set_num_patches", false]], "set_owned_offset() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.set_owned_offset", false]], "set_patch_max_element_num() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.set_patch_max_element_num", false]], "set_relation_dynamic() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.set_relation_dynamic", false]], "set_relation_fixed() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.set_relation_fixed", false]], "set_total_offset() (taichi.lang.mesh.meshinstance method)": [[48, "taichi.lang.mesh.MeshInstance.set_total_offset", false]], "shape (taichi.aot.conventions.gfxruntime140.dr.fieldattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.FieldAttributes.shape", false]], "shape (taichi.aot.conventions.gfxruntime140.sr.field attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Field.shape", false]], "shape (taichi.lang.field.field property)": [[40, "taichi.lang.field.Field.shape", false]], "shape (taichi.lang.matrix.matrixndarray attribute)": [[45, "taichi.lang.matrix.MatrixNdarray.shape", false]], "shape (taichi.lang.matrix.vectorndarray attribute)": [[45, "taichi.lang.matrix.VectorNdarray.shape", false]], "shape (taichi.lang.snode.snode property)": [[58, "taichi.lang.snode.SNode.shape", false]], "shape (taichi.linalg.sparse_matrix.sparsematrix property)": [[65, "taichi.linalg.sparse_matrix.SparseMatrix.shape", false]], "shared_array_proxy (taichi.lang.simt.block.sharedarray attribute)": [[53, "taichi.lang.simt.block.SharedArray.shared_array_proxy", false]], "sharedarray (class in taichi.lang.simt.block)": [[53, "taichi.lang.simt.block.SharedArray", false]], "shfl_down_f32() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.shfl_down_f32", false]], "shfl_down_i32() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.shfl_down_i32", false]], "shfl_sync_f32() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.shfl_sync_f32", false]], "shfl_sync_i32() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.shfl_sync_i32", false]], "shfl_up_f32() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.shfl_up_f32", false]], "shfl_up_i32() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.shfl_up_i32", false]], "shfl_xor_i32() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.shfl_xor_i32", false]], "should_check() (taichi.lang.ast.checkers.kernelsimplicityastchecker static method)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.should_check", false]], "shuffle() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.shuffle", false]], "shuffle_down() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.shuffle_down", false]], "shuffle_up() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.shuffle_up", false]], "shuffle_xor() (in module taichi.lang.simt.subgroup)": [[56, "taichi.lang.simt.subgroup.shuffle_xor", false]], "sign() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.sign", false]], "signed_distance() (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.signed_distance", false]], "sin() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.sin", false]], "smoothstep() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.smoothstep", false]], "snode (class in taichi.lang.snode)": [[58, "taichi.lang.snode.SNode", false]], "snode (taichi.lang.field.field property)": [[40, "taichi.lang.field.Field.snode", false]], "snodegradtype (in module taichi.types.enums)": [[81, "taichi.types.enums.SNodeGradType", false]], "solve() (taichi.linalg.sparse_cg.sparsecg method)": [[64, "taichi.linalg.sparse_cg.SparseCG.solve", false]], "solve() (taichi.linalg.sparse_solver.sparsesolver method)": [[66, "taichi.linalg.sparse_solver.SparseSolver.solve", false]], "sparse_api_demo() (in module taichi.examples.features.sparse.explicit_activation)": [[18, "taichi.examples.features.sparse.explicit_activation.sparse_api_demo", false]], "sparse_matrix_builder (class in taichi.types.annotations)": [[79, "taichi.types.annotations.sparse_matrix_builder", false]], "sparse_struct_for() (in module taichi.examples.features.sparse.tutorial)": [[20, "taichi.examples.features.sparse.tutorial.sparse_struct_for", false]], "sparsecg (class in taichi.linalg.sparse_cg)": [[64, "taichi.linalg.sparse_cg.SparseCG", false]], "sparsematrix (class in taichi.linalg.sparse_matrix)": [[65, "taichi.linalg.sparse_matrix.SparseMatrix", false]], "sparsematrixbuilder (class in taichi.linalg.sparse_matrix)": [[65, "taichi.linalg.sparse_matrix.SparseMatrixBuilder", false]], "sparsematrixentry (class in taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.SparseMatrixEntry", false]], "sparsematrixproxy (class in taichi.lang.kernel_arguments)": [[43, "taichi.lang.kernel_arguments.SparseMatrixProxy", false]], "sparsesolver (class in taichi.linalg.sparse_solver)": [[66, "taichi.linalg.sparse_solver.SparseSolver", false]], "spirv_has_atomic_float (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_atomic_float", false]], "spirv_has_atomic_float16 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_atomic_float16", false]], "spirv_has_atomic_float16_add (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_atomic_float16_add", false]], "spirv_has_atomic_float16_minmax (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_atomic_float16_minmax", false]], "spirv_has_atomic_float64 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_atomic_float64", false]], "spirv_has_atomic_float64_add (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_atomic_float64_add", false]], "spirv_has_atomic_float64_minmax (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_atomic_float64_minmax", false]], "spirv_has_atomic_float_add (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_atomic_float_add", false]], "spirv_has_atomic_float_minmax (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_atomic_float_minmax", false]], "spirv_has_atomic_int64 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_atomic_int64", false]], "spirv_has_float16 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_float16", false]], "spirv_has_float64 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_float64", false]], "spirv_has_int16 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_int16", false]], "spirv_has_int64 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_int64", false]], "spirv_has_int8 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_int8", false]], "spirv_has_no_integer_wrap_decoration (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_no_integer_wrap_decoration", false]], "spirv_has_non_semantic_info (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_non_semantic_info", false]], "spirv_has_physical_storage_buffer (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_physical_storage_buffer", false]], "spirv_has_subgroup_arithmetic (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_subgroup_arithmetic", false]], "spirv_has_subgroup_ballot (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_subgroup_ballot", false]], "spirv_has_subgroup_basic (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_subgroup_basic", false]], "spirv_has_subgroup_vote (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_subgroup_vote", false]], "spirv_has_variable_ptr (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_has_variable_ptr", false]], "spirv_version_1_3 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_version_1_3", false]], "spirv_version_1_4 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_version_1_4", false]], "spirv_version_1_5 (taichi.types.enums.devicecapability attribute)": [[81, "taichi.types.enums.DeviceCapability.spirv_version_1_5", false]], "sqrt() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.sqrt", false]], "square_matrix() (in module taichi.lang.matrix_ops_utils)": [[47, "taichi.lang.matrix_ops_utils.square_matrix", false]], "src (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.src", false]], "static() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.static", false]], "static_assert() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.static_assert", false]], "static_print() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.static_print", false]], "static_scope_guard() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.static_scope_guard", false]], "static_scope_status (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.static_scope_status", false]], "staticscopeguard (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.StaticScopeGuard", false]], "staticscopestatus (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.StaticScopeStatus", false]], "status (taichi.lang.ast.ast_transformer_utils.loopscopeattribute attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.LoopScopeAttribute.status", false]], "status (taichi.lang.ast.ast_transformer_utils.nonstaticcontrolflowguard attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.NonStaticControlFlowGuard.status", false]], "status (taichi.lang.ast.ast_transformer_utils.staticscopeguard attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.StaticScopeGuard.status", false]], "step() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.step", false]], "stop_grad() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.stop_grad", false]], "stride (taichi.aot.conventions.gfxruntime140.dr.argumentattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes.stride", false]], "struct (class in taichi.lang.struct)": [[60, "taichi.lang.struct.Struct", false]], "struct() (in module taichi.types.compound_types)": [[80, "taichi.types.compound_types.struct", false]], "struct_methods (taichi.lang.struct.structfield attribute)": [[60, "taichi.lang.struct.StructField.struct_methods", false]], "structfield (class in taichi.lang.struct)": [[60, "taichi.lang.struct.StructField", false]], "structfor (taichi.aot.conventions.gfxruntime140.sr.tasktype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TaskType.StructFor", false]], "subscript() (taichi.lang.kernel_arguments.sparsematrixproxy method)": [[43, "taichi.lang.kernel_arguments.SparseMatrixProxy.subscript", false]], "subscript() (taichi.lang.simt.block.sharedarray method)": [[53, "taichi.lang.simt.block.SharedArray.subscript", false]], "sum() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.sum", false]], "sum() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.sum", false]], "swap() (taichi.examples.simulation.eulerfluid2d.texpair method)": [[25, "taichi.examples.simulation.eulerfluid2d.TexPair.swap", false]], "symbolic_args (taichi.aot.conventions.gfxruntime140.dr.dispatch attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Dispatch.symbolic_args", false]], "symbolicargument (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.SymbolicArgument", false]], "sync() (in module taichi.lang.runtime_ops)": [[51, "taichi.lang.runtime_ops.sync", false]], "sync() (in module taichi.lang.simt.block)": [[53, "taichi.lang.simt.block.sync", false]], "sync() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.sync", false]], "sync_all_nonzero() (in module taichi.lang.simt.block)": [[53, "taichi.lang.simt.block.sync_all_nonzero", false]], "sync_any_nonzero() (in module taichi.lang.simt.block)": [[53, "taichi.lang.simt.block.sync_any_nonzero", false]], "sync_count_nonzero() (in module taichi.lang.simt.block)": [[53, "taichi.lang.simt.block.sync_count_nonzero", false]], "tag (taichi.aot.conventions.gfxruntime140.dr.symbolicargument attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.SymbolicArgument.tag", false]], "taichi": [[28, "module-taichi", false]], "taichi.ad": [[1, "module-taichi.ad", false]], "taichi.algorithms": [[2, "module-taichi.algorithms", false]], "taichi.aot": [[7, "module-taichi.aot", false]], "taichi.aot.conventions": [[6, "module-taichi.aot.conventions", false]], "taichi.aot.conventions.gfxruntime140": [[4, "module-taichi.aot.conventions.gfxruntime140", false]], "taichi.aot.conventions.gfxruntime140.dr": [[3, "module-taichi.aot.conventions.gfxruntime140.dr", false]], "taichi.aot.conventions.gfxruntime140.sr": [[5, "module-taichi.aot.conventions.gfxruntime140.sr", false]], "taichi.aot.module": [[8, "module-taichi.aot.module", false]], "taichi.aot.utils": [[9, "module-taichi.aot.utils", false]], "taichi.examples.algorithm.circle-packing.circle_packing_image": [[10, "module-taichi.examples.algorithm.circle-packing.circle_packing_image", false]], "taichi.examples.algorithm.laplace": [[11, "module-taichi.examples.algorithm.laplace", false]], "taichi.examples.autodiff.jacobian": [[12, "module-taichi.examples.autodiff.jacobian", false]], "taichi.examples.autodiff.minimization": [[13, "module-taichi.examples.autodiff.minimization", false]], "taichi.examples.autodiff.regression": [[14, "module-taichi.examples.autodiff.regression", false]], "taichi.examples.autodiff.simple_derivative": [[15, "module-taichi.examples.autodiff.simple_derivative", false]], "taichi.examples.features.io.export_mesh": [[16, "module-taichi.examples.features.io.export_mesh", false]], "taichi.examples.features.io.export_ply": [[17, "module-taichi.examples.features.io.export_ply", false]], "taichi.examples.features.sparse.explicit_activation": [[18, "module-taichi.examples.features.sparse.explicit_activation", false]], "taichi.examples.features.sparse.taichi_dynamic": [[19, "module-taichi.examples.features.sparse.taichi_dynamic", false]], "taichi.examples.features.sparse.tutorial": [[20, "module-taichi.examples.features.sparse.tutorial", false]], "taichi.examples.machine_learning.differential_evolution": [[21, "module-taichi.examples.machine_learning.differential_evolution", false]], "taichi.examples.minimal": [[22, "module-taichi.examples.minimal", false]], "taichi.examples.patterns": [[23, "module-taichi.examples.patterns", false]], "taichi.examples.real_func.rendering.cornell_box": [[24, "module-taichi.examples.real_func.rendering.cornell_box", false]], "taichi.examples.simulation.eulerfluid2d": [[25, "module-taichi.examples.simulation.eulerfluid2d", false]], "taichi.experimental": [[26, "module-taichi.experimental", false]], "taichi.graph": [[27, "module-taichi.graph", false]], "taichi.lang": [[42, "module-taichi.lang", false]], "taichi.lang.any_array": [[29, "module-taichi.lang.any_array", false]], "taichi.lang.argpack": [[30, "module-taichi.lang.argpack", false]], "taichi.lang.ast": [[34, "module-taichi.lang.ast", false]], "taichi.lang.ast.ast_transformer": [[31, "module-taichi.lang.ast.ast_transformer", false]], "taichi.lang.ast.ast_transformer_utils": [[32, "module-taichi.lang.ast.ast_transformer_utils", false]], "taichi.lang.ast.checkers": [[33, "module-taichi.lang.ast.checkers", false]], "taichi.lang.ast.symbol_resolver": [[35, "module-taichi.lang.ast.symbol_resolver", false]], "taichi.lang.ast.transform": [[36, "module-taichi.lang.ast.transform", false]], "taichi.lang.common_ops": [[37, "module-taichi.lang.common_ops", false]], "taichi.lang.exception": [[38, "module-taichi.lang.exception", false]], "taichi.lang.expr": [[39, "module-taichi.lang.expr", false]], "taichi.lang.field": [[40, "module-taichi.lang.field", false]], "taichi.lang.impl": [[41, "module-taichi.lang.impl", false]], "taichi.lang.kernel_arguments": [[43, "module-taichi.lang.kernel_arguments", false]], "taichi.lang.kernel_impl": [[44, "module-taichi.lang.kernel_impl", false]], "taichi.lang.matrix": [[45, "module-taichi.lang.matrix", false]], "taichi.lang.matrix_ops": [[46, "module-taichi.lang.matrix_ops", false]], "taichi.lang.matrix_ops_utils": [[47, "module-taichi.lang.matrix_ops_utils", false]], "taichi.lang.mesh": [[48, "module-taichi.lang.mesh", false]], "taichi.lang.misc": [[49, "module-taichi.lang.misc", false]], "taichi.lang.ops": [[50, "module-taichi.lang.ops", false]], "taichi.lang.runtime_ops": [[51, "module-taichi.lang.runtime_ops", false]], "taichi.lang.shell": [[52, "module-taichi.lang.shell", false]], "taichi.lang.simt": [[55, "module-taichi.lang.simt", false]], "taichi.lang.simt.block": [[53, "module-taichi.lang.simt.block", false]], "taichi.lang.simt.grid": [[54, "module-taichi.lang.simt.grid", false]], "taichi.lang.simt.subgroup": [[56, "module-taichi.lang.simt.subgroup", false]], "taichi.lang.simt.warp": [[57, "module-taichi.lang.simt.warp", false]], "taichi.lang.snode": [[58, "module-taichi.lang.snode", false]], "taichi.lang.source_builder": [[59, "module-taichi.lang.source_builder", false]], "taichi.lang.struct": [[60, "module-taichi.lang.struct", false]], "taichi.lang.util": [[61, "module-taichi.lang.util", false]], "taichi.linalg": [[62, "module-taichi.linalg", false]], "taichi.linalg.matrixfree_cg": [[63, "module-taichi.linalg.matrixfree_cg", false]], "taichi.linalg.sparse_cg": [[64, "module-taichi.linalg.sparse_cg", false]], "taichi.linalg.sparse_matrix": [[65, "module-taichi.linalg.sparse_matrix", false]], "taichi.linalg.sparse_solver": [[66, "module-taichi.linalg.sparse_solver", false]], "taichi.math": [[67, "module-taichi.math", false]], "taichi.math.mathimpl": [[68, "module-taichi.math.mathimpl", false]], "taichi.profiler": [[69, "module-taichi.profiler", false]], "taichi.profiler.kernel_metrics": [[70, "module-taichi.profiler.kernel_metrics", false]], "taichi.profiler.kernel_profiler": [[71, "module-taichi.profiler.kernel_profiler", false]], "taichi.profiler.memory_profiler": [[72, "module-taichi.profiler.memory_profiler", false]], "taichi.profiler.scoped_profiler": [[73, "module-taichi.profiler.scoped_profiler", false]], "taichi.sparse": [[74, "module-taichi.sparse", false]], "taichi.tools": [[76, "module-taichi.tools", false]], "taichi.tools.diagnose": [[75, "module-taichi.tools.diagnose", false]], "taichi.tools.np2ply": [[77, "module-taichi.tools.np2ply", false]], "taichi.tools.vtk": [[78, "module-taichi.tools.vtk", false]], "taichi.types": [[82, "module-taichi.types", false]], "taichi.types.annotations": [[79, "module-taichi.types.annotations", false]], "taichi.types.compound_types": [[80, "module-taichi.types.compound_types", false]], "taichi.types.enums": [[81, "module-taichi.types.enums", false]], "taichi.types.ndarray_type": [[83, "module-taichi.types.ndarray_type", false]], "taichi.types.primitive_types": [[84, "module-taichi.types.primitive_types", false]], "taichi.types.quant": [[85, "module-taichi.types.quant", false]], "taichi.types.texture_type": [[86, "module-taichi.types.texture_type", false]], "taichi.types.utils": [[87, "module-taichi.types.utils", false]], "taichi_logo() (in module taichi.examples.patterns)": [[23, "taichi.examples.patterns.taichi_logo", false]], "taichiassertionerror": [[38, "taichi.lang.exception.TaichiAssertionError", false]], "taichicompilationerror": [[38, "taichi.lang.exception.TaichiCompilationError", false]], "taichinameerror": [[38, "taichi.lang.exception.TaichiNameError", false]], "taichioperations (class in taichi.lang.common_ops)": [[37, "taichi.lang.common_ops.TaichiOperations", false]], "taichiruntimeerror": [[38, "taichi.lang.exception.TaichiRuntimeError", false]], "taichiruntimetypeerror": [[38, "taichi.lang.exception.TaichiRuntimeTypeError", false]], "taichisyntaxerror": [[38, "taichi.lang.exception.TaichiSyntaxError", false]], "taichitypeerror": [[38, "taichi.lang.exception.TaichiTypeError", false]], "tan() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.tan", false]], "tanh() (in module taichi.lang.ops)": [[50, "taichi.lang.ops.tanh", false]], "task (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Task", false]], "task_ty (taichi.aot.conventions.gfxruntime140.sr.task attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Task.task_ty", false]], "task_type (taichi.aot.conventions.gfxruntime140.dr.taskattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TaskAttributes.task_type", false]], "taskattributes (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TaskAttributes", false]], "tasks (taichi.aot.conventions.gfxruntime140.sr.kernel attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Kernel.tasks", false]], "tasks_attribs (taichi.aot.conventions.gfxruntime140.dr.kernelattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.KernelAttributes.tasks_attribs", false]], "tasktype (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TaskType", false]], "template (class in taichi.types.annotations)": [[79, "taichi.types.annotations.Template", false]], "template (in module taichi.types.annotations)": [[79, "taichi.types.annotations.template", false]], "template_types (in module taichi.aot.utils)": [[9, "taichi.aot.utils.template_types", false]], "tensor (taichi.types.annotations.template attribute)": [[79, "taichi.types.annotations.Template.tensor", false]], "texpair (class in taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.TexPair", false]], "texture (in module taichi.types.texture_type)": [[86, "taichi.types.texture_type.texture", false]], "texture (taichi.aot.conventions.gfxruntime140.sr.parametertype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ParameterType.Texture", false]], "texture (taichi.aot.conventions.gfxruntime140.sr.texturebindingtype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TextureBindingType.Texture", false]], "texture_bind_ty (taichi.aot.conventions.gfxruntime140.sr.texturebinding attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TextureBinding.texture_bind_ty", false]], "texture_binds (taichi.aot.conventions.gfxruntime140.dr.taskattributes attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TaskAttributes.texture_binds", false]], "texture_binds (taichi.aot.conventions.gfxruntime140.sr.task attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.Task.texture_binds", false]], "texturebinding (class in taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.TextureBinding", false]], "texturebinding (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TextureBinding", false]], "texturebindingtype (class in taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.TextureBindingType", false]], "thread_idx() (in module taichi.lang.simt.block)": [[53, "taichi.lang.simt.block.thread_idx", false]], "ti_arch (taichi.linalg.sparse_cg.sparsecg attribute)": [[64, "taichi.linalg.sparse_cg.SparseCG.ti_arch", false]], "ti_format_list_to_assert_msg() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.ti_format_list_to_assert_msg", false]], "to_dict() (taichi.lang.argpack.argpack method)": [[30, "taichi.lang.argpack.ArgPack.to_dict", false]], "to_dict() (taichi.lang.struct.struct method)": [[60, "taichi.lang.struct.Struct.to_dict", false]], "to_dr_field() (in module taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.to_dr_field", false]], "to_dr_graph() (in module taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.to_dr_graph", false]], "to_dr_kernel() (in module taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.to_dr_kernel", false]], "to_dr_metadata() (in module taichi.aot.conventions.gfxruntime140.sr)": [[5, "taichi.aot.conventions.gfxruntime140.sr.to_dr_metadata", false]], "to_graphs_json() (taichi.aot.conventions.gfxruntime140.gfxruntime140 method)": [[4, "taichi.aot.conventions.gfxruntime140.GfxRuntime140.to_graphs_json", false]], "to_json_graph() (in module taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.to_json_graph", false]], "to_json_metadata() (in module taichi.aot.conventions.gfxruntime140.dr)": [[3, "taichi.aot.conventions.gfxruntime140.dr.to_json_metadata", false]], "to_list() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.to_list", false]], "to_metadata_json() (taichi.aot.conventions.gfxruntime140.gfxruntime140 method)": [[4, "taichi.aot.conventions.gfxruntime140.GfxRuntime140.to_metadata_json", false]], "to_numpy() (taichi.lang.field.field method)": [[40, "taichi.lang.field.Field.to_numpy", false]], "to_numpy() (taichi.lang.field.scalarfield method)": [[40, "taichi.lang.field.ScalarField.to_numpy", false]], "to_numpy() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.to_numpy", false]], "to_numpy() (taichi.lang.matrix.matrixfield method)": [[45, "taichi.lang.matrix.MatrixField.to_numpy", false]], "to_numpy() (taichi.lang.matrix.matrixndarray method)": [[45, "taichi.lang.matrix.MatrixNdarray.to_numpy", false]], "to_numpy() (taichi.lang.matrix.vectorndarray method)": [[45, "taichi.lang.matrix.VectorNdarray.to_numpy", false]], "to_numpy() (taichi.lang.struct.structfield method)": [[60, "taichi.lang.struct.StructField.to_numpy", false]], "to_paddle() (taichi.lang.field.field method)": [[40, "taichi.lang.field.Field.to_paddle", false]], "to_paddle() (taichi.lang.field.scalarfield method)": [[40, "taichi.lang.field.ScalarField.to_paddle", false]], "to_paddle() (taichi.lang.matrix.matrixfield method)": [[45, "taichi.lang.matrix.MatrixField.to_paddle", false]], "to_paddle() (taichi.lang.struct.structfield method)": [[60, "taichi.lang.struct.StructField.to_paddle", false]], "to_torch() (taichi.lang.field.field method)": [[40, "taichi.lang.field.Field.to_torch", false]], "to_torch() (taichi.lang.field.scalarfield method)": [[40, "taichi.lang.field.ScalarField.to_torch", false]], "to_torch() (taichi.lang.matrix.matrixfield method)": [[45, "taichi.lang.matrix.MatrixField.to_torch", false]], "to_torch() (taichi.lang.struct.structfield method)": [[60, "taichi.lang.struct.StructField.to_torch", false]], "top_level (taichi.lang.ast.checkers.kernelsimplicityastchecker property)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.top_level", false]], "trace() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.trace", false]], "trace() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.trace", false]], "transform (in module taichi.examples.real_func.rendering.cornell_box)": [[24, "taichi.examples.real_func.rendering.cornell_box.Transform", false]], "transform_tree() (in module taichi.lang.ast.transform)": [[36, "taichi.lang.ast.transform.transform_tree", false]], "translate() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.translate", false]], "transpose() (in module taichi.lang.matrix_ops)": [[46, "taichi.lang.matrix_ops.transpose", false]], "transpose() (taichi.lang.matrix.matrix method)": [[45, "taichi.lang.matrix.Matrix.transpose", false]], "transpose() (taichi.linalg.sparse_matrix.sparsematrix method)": [[65, "taichi.linalg.sparse_matrix.SparseMatrix.transpose", false]], "trial (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.trial", false]], "type (taichi.aot.conventions.gfxruntime140.dr.buffer attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Buffer.type", false]], "type_map (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.type_map", false]], "u1 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.u1", false]], "u16 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.u16", false]], "u16 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.u16", false]], "u32 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.u32", false]], "u32 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.u32", false]], "u64 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.u64", false]], "u64 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.u64", false]], "u8 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.u8", false]], "u8 (taichi.aot.conventions.gfxruntime140.sr.datatype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.DataType.u8", false]], "ub (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.ub", false]], "uint1 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.uint1", false]], "uint16 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.uint16", false]], "uint32 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.uint32", false]], "uint64 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.uint64", false]], "uint8 (in module taichi.types.primitive_types)": [[84, "taichi.types.primitive_types.uint8", false]], "unique() (in module taichi.lang.simt.warp)": [[57, "taichi.lang.simt.warp.unique", false]], "unit() (taichi.lang.matrix.matrix static method)": [[45, "taichi.lang.matrix.Matrix.unit", false]], "unknown (taichi.aot.conventions.gfxruntime140.sr.parametertype attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.ParameterType.Unknown", false]], "update() (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.update", false]], "use_bitmask (in module taichi.examples.features.sparse.tutorial)": [[20, "taichi.examples.features.sparse.tutorial.use_bitmask", false]], "uvec2 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.uvec2", false]], "uvec3 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.uvec3", false]], "uvec4 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.uvec4", false]], "val_format (taichi.profiler.kernel_metrics.cuptimetric attribute)": [[70, "taichi.profiler.kernel_metrics.CuptiMetric.val_format", false]], "value (taichi.aot.conventions.gfxruntime140.dr.devicecapabilitylevel attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.DeviceCapabilityLevel.value", false]], "value (taichi.aot.conventions.gfxruntime140.dr.graph attribute)": [[3, "taichi.aot.conventions.gfxruntime140.dr.Graph.value", false]], "variable_scope_guard() (taichi.lang.ast.ast_transformer_utils.asttransformercontext method)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.variable_scope_guard", false]], "variablescopeguard (class in taichi.lang.ast.ast_transformer_utils)": [[32, "taichi.lang.ast.ast_transformer_utils.VariableScopeGuard", false]], "vars (taichi.lang.field.field attribute)": [[40, "taichi.lang.field.Field.vars", false]], "vdata (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.vdata", false]], "vdir() (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.vdir", false]], "vec2 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.vec2", false]], "vec3 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.vec3", false]], "vec4 (in module taichi.math.mathimpl)": [[68, "taichi.math.mathimpl.vec4", false]], "vector (class in taichi.lang.matrix)": [[45, "taichi.lang.matrix.Vector", false]], "vector() (in module taichi.types.compound_types)": [[80, "taichi.types.compound_types.vector", false]], "vectorndarray (class in taichi.lang.matrix)": [[45, "taichi.lang.matrix.VectorNdarray", false]], "vel_with_boundary() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.vel_with_boundary", false]], "velocities_pair (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.velocities_pair", false]], "velocityfield (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.velocityField", false]], "vertex_channels (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.vertex_channels", false]], "vertex_data (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.vertex_data", false]], "vertex_data_type (taichi.tools.np2ply.plywriter attribute)": [[77, "taichi.tools.np2ply.PLYWriter.vertex_data_type", false]], "verts (taichi.lang.mesh.meshinstance attribute)": [[48, "taichi.lang.mesh.MeshInstance.verts", false]], "visit_for() (taichi.lang.ast.checkers.kernelsimplicityastchecker static method)": [[33, "taichi.lang.ast.checkers.KernelSimplicityASTChecker.visit_for", false]], "visited_funcdef (taichi.lang.ast.ast_transformer_utils.asttransformercontext attribute)": [[32, "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext.visited_funcdef", false]], "voricity_step() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.voricity_step", false]], "vorticity_projection() (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.vorticity_projection", false]], "vulkan (in module taichi.lang.misc)": [[49, "taichi.lang.misc.vulkan", false]], "warn_if_is_external_func() (taichi.lang.ast.ast_transformer.asttransformer static method)": [[31, "taichi.lang.ast.ast_transformer.ASTTransformer.warn_if_is_external_func", false]], "window (in module taichi.examples.simulation.eulerfluid2d)": [[25, "taichi.examples.simulation.eulerfluid2d.window", false]], "write (taichi.aot.conventions.gfxruntime140.sr.ndarrayaccess attribute)": [[5, "taichi.aot.conventions.gfxruntime140.sr.NdArrayAccess.Write", false]], "write_vtk() (in module taichi.tools.vtk)": [[78, "taichi.tools.vtk.write_vtk", false]], "writer (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.writer", false]], "x (in module taichi.examples.autodiff.minimization)": [[13, "taichi.examples.autodiff.minimization.x", false]], "x (in module taichi.examples.features.io.export_mesh)": [[16, "id0", false], [16, "taichi.examples.features.io.export_mesh.x", false]], "x (in module taichi.examples.features.sparse.explicit_activation)": [[18, "taichi.examples.features.sparse.explicit_activation.x", false]], "x (in module taichi.examples.features.sparse.taichi_dynamic)": [[19, "taichi.examples.features.sparse.taichi_dynamic.x", false]], "x (in module taichi.examples.features.sparse.tutorial)": [[20, "taichi.examples.features.sparse.tutorial.x", false]], "x (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.x", false]], "x (taichi.examples.algorithm.circle-packing.circle_packing_image.circle attribute)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.Circle.x", false]], "x64 (in module taichi.lang.misc)": [[49, "taichi.lang.misc.x64", false]], "x86_64 (in module taichi.lang.misc)": [[49, "taichi.lang.misc.x86_64", false]], "xs (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.xs", false]], "xs (in module taichi.examples.autodiff.simple_derivative)": [[15, "taichi.examples.autodiff.simple_derivative.xs", false]], "y (in module taichi.examples.autodiff.minimization)": [[13, "taichi.examples.autodiff.minimization.y", false]], "y (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.y", false]], "y (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.y", false]], "y (taichi.examples.algorithm.circle-packing.circle_packing_image.circle attribute)": [[10, "taichi.examples.algorithm.circle-packing.circle_packing_image.Circle.y", false]], "ys (in module taichi.examples.autodiff.regression)": [[14, "taichi.examples.autodiff.regression.ys", false]], "ys (in module taichi.examples.autodiff.simple_derivative)": [[15, "taichi.examples.autodiff.simple_derivative.ys", false]], "z (in module taichi.examples.features.io.export_mesh)": [[16, "taichi.examples.features.io.export_mesh.z", false]], "z (in module taichi.examples.machine_learning.differential_evolution)": [[21, "taichi.examples.machine_learning.differential_evolution.z", false]], "zero() (in module taichi.lang.impl)": [[41, "taichi.lang.impl.zero", false]], "zero() (taichi.lang.matrix.matrix static method)": [[45, "taichi.lang.matrix.Matrix.zero", false]]}, "objects": {"": [[28, 0, 0, "-", "taichi"]], "taichi": [[1, 0, 0, "-", "ad"], [2, 0, 0, "-", "algorithms"], [7, 0, 0, "-", "aot"], [26, 0, 0, "-", "experimental"], [27, 0, 0, "-", "graph"], [42, 0, 0, "-", "lang"], [62, 0, 0, "-", "linalg"], [67, 0, 0, "-", "math"], [69, 0, 0, "-", "profiler"], [74, 0, 0, "-", "sparse"], [76, 0, 0, "-", "tools"], [82, 0, 0, "-", "types"]], "taichi.aot": [[6, 0, 0, "-", "conventions"], [8, 0, 0, "-", "module"], [9, 0, 0, "-", "utils"]], "taichi.aot.conventions": [[4, 0, 0, "-", "gfxruntime140"]], "taichi.aot.conventions.gfxruntime140": [[4, 1, 1, "", "GfxRuntime140"], [3, 0, 0, "-", "dr"], [5, 0, 0, "-", "sr"]], "taichi.aot.conventions.gfxruntime140.GfxRuntime140": [[4, 2, 1, "", "from_module"], [4, 3, 1, "", "graphs"], [4, 3, 1, "", "metadata"], [4, 2, 1, "", "to_graphs_json"], [4, 2, 1, "", "to_metadata_json"]], "taichi.aot.conventions.gfxruntime140.dr": [[3, 1, 1, "", "ArgumentAttributes"], [3, 1, 1, "", "Buffer"], [3, 1, 1, "", "BufferBinding"], [3, 1, 1, "", "ContextAttributes"], [3, 1, 1, "", "DeviceCapabilityLevel"], [3, 1, 1, "", "Dispatch"], [3, 1, 1, "", "FieldAttributes"], [3, 1, 1, "", "Graph"], [3, 1, 1, "", "GraphData"], [3, 1, 1, "", "KernelAttributes"], [3, 1, 1, "", "Metadata"], [3, 1, 1, "", "RangeForAttributes"], [3, 1, 1, "", "SymbolicArgument"], [3, 1, 1, "", "TaskAttributes"], [3, 1, 1, "", "TextureBinding"], [3, 4, 1, "", "from_json_graph"], [3, 4, 1, "", "from_json_metadata"], [3, 4, 1, "", "to_json_graph"], [3, 4, 1, "", "to_json_metadata"]], "taichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes": [[3, 3, 1, "", "dtype"], [3, 3, 1, "", "element_shape"], [3, 3, 1, "", "field_dim"], [3, 3, 1, "", "format"], [3, 3, 1, "", "index"], [3, 3, 1, "", "is_array"], [3, 3, 1, "", "name"], [3, 3, 1, "", "offset_in_mem"], [3, 3, 1, "", "ptype"], [3, 3, 1, "", "stride"]], "taichi.aot.conventions.gfxruntime140.dr.Buffer": [[3, 3, 1, "", "root_id"], [3, 3, 1, "", "type"]], "taichi.aot.conventions.gfxruntime140.dr.BufferBinding": [[3, 3, 1, "", "binding"], [3, 3, 1, "", "buffer"]], "taichi.aot.conventions.gfxruntime140.dr.ContextAttributes": [[3, 3, 1, "", "arg_attribs_vec_"], [3, 3, 1, "", "args_bytes_"], [3, 3, 1, "", "arr_access"], [3, 3, 1, "", "ret_attribs_vec_"], [3, 3, 1, "", "rets_bytes_"]], "taichi.aot.conventions.gfxruntime140.dr.DeviceCapabilityLevel": [[3, 3, 1, "", "key"], [3, 3, 1, "", "value"]], "taichi.aot.conventions.gfxruntime140.dr.Dispatch": [[3, 3, 1, "", "kernel_name"], [3, 3, 1, "", "symbolic_args"]], "taichi.aot.conventions.gfxruntime140.dr.FieldAttributes": [[3, 3, 1, "", "dtype"], [3, 3, 1, "", "dtype_name"], [3, 3, 1, "", "element_shape"], [3, 3, 1, "", "field_name"], [3, 3, 1, "", "is_scalar"], [3, 3, 1, "", "mem_offset_in_parent"], [3, 3, 1, "", "shape"]], "taichi.aot.conventions.gfxruntime140.dr.Graph": [[3, 3, 1, "", "key"], [3, 3, 1, "", "value"]], "taichi.aot.conventions.gfxruntime140.dr.GraphData": [[3, 3, 1, "", "dispatches"]], "taichi.aot.conventions.gfxruntime140.dr.KernelAttributes": [[3, 3, 1, "", "ctx_attribs"], [3, 3, 1, "", "is_jit_evaluator"], [3, 3, 1, "", "name"], [3, 3, 1, "", "tasks_attribs"]], "taichi.aot.conventions.gfxruntime140.dr.Metadata": [[3, 3, 1, "", "fields"], [3, 3, 1, "", "kernels"], [3, 3, 1, "", "required_caps"], [3, 3, 1, "", "root_buffer_size"]], "taichi.aot.conventions.gfxruntime140.dr.RangeForAttributes": [[3, 3, 1, "", "begin"], [3, 3, 1, "", "const_begin"], [3, 3, 1, "", "const_end"], [3, 3, 1, "", "end"]], "taichi.aot.conventions.gfxruntime140.dr.SymbolicArgument": [[3, 3, 1, "", "dtype_id"], [3, 3, 1, "", "element_shape"], [3, 3, 1, "", "field_dim"], [3, 3, 1, "", "name"], [3, 3, 1, "", "num_channels"], [3, 3, 1, "", "tag"]], "taichi.aot.conventions.gfxruntime140.dr.TaskAttributes": [[3, 3, 1, "", "advisory_num_threads_per_group"], [3, 3, 1, "", "advisory_total_num_threads"], [3, 3, 1, "", "buffer_binds"], [3, 3, 1, "", "name"], [3, 3, 1, "", "range_for_attribs"], [3, 3, 1, "", "task_type"], [3, 3, 1, "", "texture_binds"]], "taichi.aot.conventions.gfxruntime140.dr.TextureBinding": [[3, 3, 1, "", "arg_id"], [3, 3, 1, "", "binding"], [3, 3, 1, "", "is_storage"]], "taichi.aot.conventions.gfxruntime140.sr": [[5, 1, 1, "", "Argument"], [5, 1, 1, "", "ArgumentNdArray"], [5, 1, 1, "", "ArgumentRwTexture"], [5, 1, 1, "", "ArgumentScalar"], [5, 1, 1, "", "ArgumentTexture"], [5, 1, 1, "", "BufferBinding"], [5, 1, 1, "", "BufferBindingType"], [5, 1, 1, "", "Context"], [5, 1, 1, "", "DataType"], [5, 1, 1, "", "Dispatch"], [5, 1, 1, "", "Field"], [5, 1, 1, "", "Graph"], [5, 1, 1, "", "Kernel"], [5, 1, 1, "", "LaunchGrid"], [5, 1, 1, "", "Metadata"], [5, 1, 1, "", "NamedArgument"], [5, 1, 1, "", "NdArrayAccess"], [5, 1, 1, "", "ParameterType"], [5, 1, 1, "", "ReturnValue"], [5, 1, 1, "", "Task"], [5, 1, 1, "", "TaskType"], [5, 1, 1, "", "TextureBinding"], [5, 1, 1, "", "TextureBindingType"], [5, 4, 1, "", "from_dr_field"], [5, 4, 1, "", "from_dr_graph"], [5, 4, 1, "", "from_dr_kernel"], [5, 4, 1, "", "from_dr_metadata"], [5, 4, 1, "", "get_data_type_size"], [5, 4, 1, "", "to_dr_field"], [5, 4, 1, "", "to_dr_graph"], [5, 4, 1, "", "to_dr_kernel"], [5, 4, 1, "", "to_dr_metadata"]], "taichi.aot.conventions.gfxruntime140.sr.Argument": [[5, 3, 1, "", "name"]], "taichi.aot.conventions.gfxruntime140.sr.ArgumentNdArray": [[5, 3, 1, "", "access"], [5, 3, 1, "", "dtype"], [5, 3, 1, "", "element_shape"], [5, 3, 1, "", "ndim"]], "taichi.aot.conventions.gfxruntime140.sr.ArgumentRwTexture": [[5, 3, 1, "", "fmt"], [5, 3, 1, "", "ndim"]], "taichi.aot.conventions.gfxruntime140.sr.ArgumentScalar": [[5, 3, 1, "", "dtype"]], "taichi.aot.conventions.gfxruntime140.sr.ArgumentTexture": [[5, 3, 1, "", "ndim"]], "taichi.aot.conventions.gfxruntime140.sr.BufferBinding": [[5, 3, 1, "", "binding"], [5, 3, 1, "", "buffer_bind_ty"], [5, 3, 1, "", "iarg"]], "taichi.aot.conventions.gfxruntime140.sr.BufferBindingType": [[5, 3, 1, "", "Args"], [5, 3, 1, "", "ExtArr"], [5, 3, 1, "", "GlobalTmps"], [5, 3, 1, "", "ListGen"], [5, 3, 1, "", "Rets"], [5, 3, 1, "", "Root"]], "taichi.aot.conventions.gfxruntime140.sr.Context": [[5, 3, 1, "", "args"], [5, 3, 1, "", "ret"]], "taichi.aot.conventions.gfxruntime140.sr.DataType": [[5, 3, 1, "", "f16"], [5, 3, 1, "", "f32"], [5, 3, 1, "", "f64"], [5, 3, 1, "", "i16"], [5, 3, 1, "", "i32"], [5, 3, 1, "", "i64"], [5, 3, 1, "", "i8"], [5, 3, 1, "", "u16"], [5, 3, 1, "", "u32"], [5, 3, 1, "", "u64"], [5, 3, 1, "", "u8"]], "taichi.aot.conventions.gfxruntime140.sr.Dispatch": [[5, 3, 1, "", "args"], [5, 3, 1, "", "kernel"]], "taichi.aot.conventions.gfxruntime140.sr.Field": [[5, 3, 1, "", "dtype"], [5, 3, 1, "", "element_shape"], [5, 3, 1, "", "name"], [5, 3, 1, "", "offset"], [5, 3, 1, "", "shape"]], "taichi.aot.conventions.gfxruntime140.sr.Graph": [[5, 3, 1, "", "args"], [5, 3, 1, "", "dispatches"], [5, 3, 1, "", "name"]], "taichi.aot.conventions.gfxruntime140.sr.Kernel": [[5, 3, 1, "", "context"], [5, 3, 1, "", "name"], [5, 3, 1, "", "tasks"]], "taichi.aot.conventions.gfxruntime140.sr.LaunchGrid": [[5, 3, 1, "", "block_size"], [5, 3, 1, "", "grid_size"]], "taichi.aot.conventions.gfxruntime140.sr.Metadata": [[5, 3, 1, "", "fields"], [5, 3, 1, "", "kernels"], [5, 3, 1, "", "required_caps"], [5, 3, 1, "", "root_buffer_size"]], "taichi.aot.conventions.gfxruntime140.sr.NamedArgument": [[5, 3, 1, "", "arg"], [5, 3, 1, "", "name"]], "taichi.aot.conventions.gfxruntime140.sr.NdArrayAccess": [[5, 3, 1, "", "NoAccess"], [5, 3, 1, "", "Read"], [5, 3, 1, "", "ReadWrite"], [5, 3, 1, "", "Write"]], "taichi.aot.conventions.gfxruntime140.sr.ParameterType": [[5, 3, 1, "", "Ndarray"], [5, 3, 1, "", "RwTexture"], [5, 3, 1, "", "Scalar"], [5, 3, 1, "", "Texture"], [5, 3, 1, "", "Unknown"]], "taichi.aot.conventions.gfxruntime140.sr.ReturnValue": [[5, 3, 1, "", "dtype"]], "taichi.aot.conventions.gfxruntime140.sr.Task": [[5, 3, 1, "", "buffer_binds"], [5, 3, 1, "", "launch_grid"], [5, 3, 1, "", "name"], [5, 3, 1, "", "task_ty"], [5, 3, 1, "", "texture_binds"]], "taichi.aot.conventions.gfxruntime140.sr.TaskType": [[5, 3, 1, "", "Gc"], [5, 3, 1, "", "GcRc"], [5, 3, 1, "", "ListGen"], [5, 3, 1, "", "MeshFor"], [5, 3, 1, "", "RangeFor"], [5, 3, 1, "", "Serial"], [5, 3, 1, "", "StructFor"]], "taichi.aot.conventions.gfxruntime140.sr.TextureBinding": [[5, 3, 1, "", "binding"], [5, 3, 1, "", "iarg"], [5, 3, 1, "", "texture_bind_ty"]], "taichi.aot.conventions.gfxruntime140.sr.TextureBindingType": [[5, 3, 1, "", "RwTexture"], [5, 3, 1, "", "Texture"]], "taichi.aot.module": [[8, 1, 1, "", "KernelTemplate"], [8, 1, 1, "", "Module"]], "taichi.aot.module.KernelTemplate": [[8, 2, 1, "", "instantiate"], [8, 2, 1, "", "keygen"]], "taichi.aot.module.Module": [[8, 2, 1, "", "add_field"], [8, 2, 1, "", "add_graph"], [8, 2, 1, "", "add_kernel"], [8, 2, 1, "", "add_kernel_template"], [8, 2, 1, "", "archive"], [8, 2, 1, "", "save"]], "taichi.aot.utils": [[9, 4, 1, "", "check_type_match"], [9, 4, 1, "", "dump_json_data_model"], [9, 4, 1, "", "is_json_data_model"], [9, 4, 1, "", "json_data_model"], [9, 4, 1, "", "produce_injected_args"], [9, 4, 1, "", "produce_injected_args_from_template"], [9, 5, 1, "", "template_types"]], "taichi.examples": [[22, 0, 0, "-", "minimal"], [23, 0, 0, "-", "patterns"]], "taichi.examples.algorithm": [[11, 0, 0, "-", "laplace"]], "taichi.examples.algorithm.circle-packing": [[10, 0, 0, "-", "circle_packing_image"]], "taichi.examples.algorithm.circle-packing.circle_packing_image": [[10, 1, 1, "", "Circle"], [10, 4, 1, "", "add_new_circles"], [10, 5, 1, "", "circles"], [10, 4, 1, "", "get_dist_transform_image"], [10, 4, 1, "", "load_image"], [10, 4, 1, "", "main"], [10, 4, 1, "", "plot_cirlces"], [10, 4, 1, "", "process"]], "taichi.examples.algorithm.circle-packing.circle_packing_image.Circle": [[10, 3, 1, "", "r"], [10, 3, 1, "", "x"], [10, 3, 1, "", "y"]], "taichi.examples.algorithm.laplace": [[11, 5, 1, "", "N"], [11, 4, 1, "", "laplace"], [11, 4, 1, "", "main"]], "taichi.examples.autodiff": [[12, 0, 0, "-", "jacobian"], [13, 0, 0, "-", "minimization"], [14, 0, 0, "-", "regression"], [15, 0, 0, "-", "simple_derivative"]], "taichi.examples.autodiff.jacobian": [[12, 5, 1, "", "N_loss"], [12, 5, 1, "", "N_param"], [12, 4, 1, "", "func"], [12, 5, 1, "", "jacobian_fwd"], [12, 5, 1, "", "jacobian_rev"], [12, 5, 1, "", "losses"], [12, 5, 1, "", "params"], [12, 5, 1, "", "seed"]], "taichi.examples.autodiff.minimization": [[13, 5, 1, "", "L"], [13, 4, 1, "", "gradient_descent"], [13, 4, 1, "", "main"], [13, 5, 1, "", "n"], [13, 4, 1, "", "reduce"], [13, 5, 1, "", "x"], [13, 5, 1, "", "y"]], "taichi.examples.autodiff.regression": [[14, 5, 1, "", "N"], [14, 5, 1, "", "coeffs"], [14, 4, 1, "", "draw"], [14, 4, 1, "", "initialize"], [14, 5, 1, "", "learning_rate"], [14, 5, 1, "", "loss"], [14, 4, 1, "", "main"], [14, 5, 1, "", "number_coeffs"], [14, 4, 1, "", "regress"], [14, 4, 1, "", "regress_raw"], [14, 4, 1, "", "update"], [14, 5, 1, "", "xs"], [14, 5, 1, "", "ys"]], "taichi.examples.autodiff.simple_derivative": [[15, 5, 1, "", "N"], [15, 4, 1, "", "draw"], [15, 5, 1, "", "grad_xs"], [15, 4, 1, "", "initialize"], [15, 4, 1, "", "main"], [15, 4, 1, "", "poly"], [15, 5, 1, "", "xs"], [15, 5, 1, "", "ys"]], "taichi.examples.features.io": [[16, 0, 0, "-", "export_mesh"], [17, 0, 0, "-", "export_ply"]], "taichi.examples.features.io.export_mesh": [[16, 5, 1, "", "alpha"], [16, 5, 1, "", "b"], [16, 5, 1, "", "foo_data"], [16, 5, 1, "", "g"], [16, 5, 1, "", "indices"], [16, 5, 1, "", "r"], [16, 5, 1, "", "series_prefix"], [16, 5, 1, "", "series_prefix_ascii"], [16, 5, 1, "", "vdata"], [16, 5, 1, "", "writer"], [16, 5, 1, "id0", "x"], [16, 5, 1, "", "y"], [16, 5, 1, "", "z"]], "taichi.examples.features.io.export_ply": [[17, 4, 1, "", "fill_rgba"], [17, 4, 1, "", "move_particles"], [17, 5, 1, "", "np_pos"], [17, 5, 1, "", "num_vertices"], [17, 4, 1, "", "place_pos"], [17, 5, 1, "", "pos"], [17, 5, 1, "", "rgba"], [17, 5, 1, "", "series_prefix"]], "taichi.examples.features.sparse": [[18, 0, 0, "-", "explicit_activation"], [19, 0, 0, "-", "taichi_dynamic"], [20, 0, 0, "-", "tutorial"]], "taichi.examples.features.sparse.explicit_activation": [[18, 5, 1, "", "block1"], [18, 5, 1, "", "block2"], [18, 4, 1, "", "check_activity"], [18, 5, 1, "", "pixel"], [18, 4, 1, "", "sparse_api_demo"], [18, 5, 1, "", "x"]], "taichi.examples.features.sparse.taichi_dynamic": [[19, 5, 1, "", "l"], [19, 4, 1, "", "main"], [19, 4, 1, "", "make_lists"], [19, 5, 1, "", "n"], [19, 5, 1, "", "x"]], "taichi.examples.features.sparse.tutorial": [[20, 5, 1, "", "block"], [20, 5, 1, "", "pixel"], [20, 4, 1, "", "sparse_struct_for"], [20, 5, 1, "", "use_bitmask"], [20, 5, 1, "", "x"]], "taichi.examples.machine_learning": [[21, 0, 0, "-", "differential_evolution"]], "taichi.examples.machine_learning.differential_evolution": [[21, 4, 1, "", "DE"], [21, 5, 1, "", "all_pop"], [21, 5, 1, "", "ax"], [21, 5, 1, "", "best_fit"], [21, 5, 1, "", "best_pop"], [21, 4, 1, "", "clip"], [21, 4, 1, "", "clip_only"], [21, 4, 1, "", "copy_2d_to_3d"], [21, 4, 1, "", "copy_field_a_to_b"], [21, 4, 1, "", "copy_field_to_pop"], [21, 4, 1, "", "copy_pop_to_field"], [21, 4, 1, "", "de_crossover"], [21, 4, 1, "", "de_loop"], [21, 5, 1, "", "dim"], [21, 4, 1, "", "draw_contour"], [21, 4, 1, "", "f1"], [21, 4, 1, "", "f1_only"], [21, 5, 1, "", "fig"], [21, 4, 1, "", "find_min"], [21, 5, 1, "", "fit"], [21, 5, 1, "", "lb"], [21, 5, 1, "", "max_iter"], [21, 5, 1, "", "pop"], [21, 4, 1, "", "rand_int"], [21, 5, 1, "", "res"], [21, 5, 1, "", "row"], [21, 5, 1, "", "search_num"], [21, 5, 1, "", "trial"], [21, 5, 1, "", "ub"], [21, 5, 1, "", "x"], [21, 5, 1, "", "y"], [21, 5, 1, "", "z"]], "taichi.examples.minimal": [[22, 4, 1, "", "p"]], "taichi.examples.patterns": [[23, 4, 1, "", "taichi_logo"]], "taichi.examples.real_func.rendering": [[24, 0, 0, "-", "cornell_box"]], "taichi.examples.real_func.rendering.cornell_box": [[24, 5, 1, "", "Material"], [24, 5, 1, "", "Ray"], [24, 5, 1, "", "SDFObject"], [24, 5, 1, "", "Transform"], [24, 4, 1, "", "build_scene"], [24, 4, 1, "", "calc_normal"], [24, 4, 1, "", "hemispheric_sampling"], [24, 5, 1, "", "image_buffer"], [24, 5, 1, "", "image_pixels"], [24, 5, 1, "", "image_resolution"], [24, 4, 1, "", "main"], [24, 4, 1, "", "nearest_object"], [24, 5, 1, "", "objects"], [24, 4, 1, "", "raycast"], [24, 4, 1, "", "raytrace"], [24, 4, 1, "", "render"], [24, 4, 1, "", "rotate"], [24, 4, 1, "", "signed_distance"]], "taichi.examples.simulation": [[25, 0, 0, "-", "eulerfluid2d"]], "taichi.examples.simulation.eulerfluid2d": [[25, 1, 1, "", "TexPair"], [25, 4, 1, "", "advaction_step"], [25, 4, 1, "", "advection"], [25, 4, 1, "", "apply_c_bc"], [25, 4, 1, "", "apply_p_bc"], [25, 4, 1, "", "apply_vel_bc"], [25, 4, 1, "", "bilerp"], [25, 4, 1, "", "c_with_boundary"], [25, 5, 1, "", "colorField"], [25, 5, 1, "", "color_pair"], [25, 4, 1, "", "curl"], [25, 5, 1, "", "curlField"], [25, 5, 1, "", "divField"], [25, 4, 1, "", "divergence"], [25, 5, 1, "", "eulerSimParam"], [25, 4, 1, "", "init_field"], [25, 4, 1, "", "lerp"], [25, 4, 1, "", "mouse_addspeed"], [25, 4, 1, "", "mouse_interaction"], [25, 4, 1, "", "p_with_boundary"], [25, 5, 1, "", "pressField"], [25, 4, 1, "", "pressure_iteration"], [25, 5, 1, "", "pressure_pair"], [25, 4, 1, "", "pressure_projection"], [25, 4, 1, "", "pressure_solve"], [25, 4, 1, "", "pressure_step"], [25, 4, 1, "", "sample"], [25, 4, 1, "", "vel_with_boundary"], [25, 5, 1, "", "velocities_pair"], [25, 5, 1, "", "velocityField"], [25, 4, 1, "", "voricity_step"], [25, 4, 1, "", "vorticity_projection"], [25, 5, 1, "", "window"]], "taichi.examples.simulation.eulerfluid2d.TexPair": [[25, 3, 1, "", "cur"], [25, 3, 1, "", "nxt"], [25, 2, 1, "", "swap"]], "taichi.experimental": [[26, 4, 1, "", "real_func"]], "taichi.lang": [[29, 0, 0, "-", "any_array"], [30, 0, 0, "-", "argpack"], [34, 0, 0, "-", "ast"], [37, 0, 0, "-", "common_ops"], [38, 0, 0, "-", "exception"], [39, 0, 0, "-", "expr"], [40, 0, 0, "-", "field"], [41, 0, 0, "-", "impl"], [43, 0, 0, "-", "kernel_arguments"], [44, 0, 0, "-", "kernel_impl"], [45, 0, 0, "-", "matrix"], [46, 0, 0, "-", "matrix_ops"], [47, 0, 0, "-", "matrix_ops_utils"], [48, 0, 0, "-", "mesh"], [49, 0, 0, "-", "misc"], [50, 0, 0, "-", "ops"], [51, 0, 0, "-", "runtime_ops"], [52, 0, 0, "-", "shell"], [55, 0, 0, "-", "simt"], [58, 0, 0, "-", "snode"], [59, 0, 0, "-", "source_builder"], [60, 0, 0, "-", "struct"], [61, 0, 0, "-", "util"]], "taichi.lang.argpack": [[30, 1, 1, "", "ArgPack"]], "taichi.lang.argpack.ArgPack": [[30, 6, 1, "", "items"], [30, 6, 1, "", "keys"], [30, 2, 1, "", "to_dict"]], "taichi.lang.ast": [[31, 0, 0, "-", "ast_transformer"], [32, 0, 0, "-", "ast_transformer_utils"], [33, 0, 0, "-", "checkers"], [35, 0, 0, "-", "symbol_resolver"], [36, 0, 0, "-", "transform"]], "taichi.lang.ast.ast_transformer": [[31, 1, 1, "", "ASTTransformer"], [31, 4, 1, "", "boundary_type_cast_warning"], [31, 5, 1, "", "build_stmt"], [31, 4, 1, "", "build_stmts"], [31, 4, 1, "", "reshape_list"]], "taichi.lang.ast.ast_transformer.ASTTransformer": [[31, 2, 1, "", "build_AnnAssign"], [31, 2, 1, "", "build_Assert"], [31, 2, 1, "", "build_Assign"], [31, 2, 1, "", "build_Attribute"], [31, 2, 1, "", "build_AugAssign"], [31, 2, 1, "", "build_BinOp"], [31, 2, 1, "", "build_BoolOp"], [31, 2, 1, "", "build_Break"], [31, 2, 1, "", "build_Bytes"], [31, 2, 1, "", "build_Call"], [31, 2, 1, "", "build_Compare"], [31, 2, 1, "", "build_Constant"], [31, 2, 1, "", "build_Continue"], [31, 2, 1, "", "build_Dict"], [31, 2, 1, "", "build_DictComp"], [31, 2, 1, "", "build_Expr"], [31, 2, 1, "", "build_ExtSlice"], [31, 2, 1, "", "build_For"], [31, 2, 1, "", "build_FormattedValue"], [31, 2, 1, "", "build_FunctionDef"], [31, 2, 1, "", "build_If"], [31, 2, 1, "", "build_IfExp"], [31, 2, 1, "", "build_Index"], [31, 2, 1, "", "build_JoinedStr"], [31, 2, 1, "", "build_List"], [31, 2, 1, "", "build_ListComp"], [31, 2, 1, "", "build_Module"], [31, 2, 1, "", "build_Name"], [31, 2, 1, "", "build_NameConstant"], [31, 2, 1, "", "build_NamedExpr"], [31, 2, 1, "", "build_Num"], [31, 2, 1, "", "build_Pass"], [31, 2, 1, "", "build_Return"], [31, 2, 1, "", "build_Slice"], [31, 2, 1, "", "build_Starred"], [31, 2, 1, "", "build_Str"], [31, 2, 1, "", "build_Subscript"], [31, 2, 1, "", "build_Tuple"], [31, 2, 1, "", "build_UnaryOp"], [31, 2, 1, "", "build_While"], [31, 2, 1, "", "build_assign_annotated"], [31, 2, 1, "", "build_assign_basic"], [31, 2, 1, "", "build_assign_unpack"], [31, 2, 1, "", "build_attribute_if_is_dynamic_snode_method"], [31, 2, 1, "", "build_bool_op"], [31, 2, 1, "", "build_call_if_is_builtin"], [31, 2, 1, "", "build_call_if_is_type"], [31, 2, 1, "", "build_grouped_ndrange_for"], [31, 2, 1, "", "build_keyword"], [31, 2, 1, "", "build_mesh_for"], [31, 2, 1, "", "build_ndrange_for"], [31, 2, 1, "", "build_nested_mesh_for"], [31, 2, 1, "", "build_range_for"], [31, 2, 1, "", "build_static_and"], [31, 2, 1, "", "build_static_for"], [31, 2, 1, "", "build_static_or"], [31, 2, 1, "", "build_struct_for"], [31, 2, 1, "", "canonicalize_formatted_string"], [31, 2, 1, "", "get_decorator"], [31, 2, 1, "", "get_for_loop_targets"], [31, 2, 1, "", "is_external_func"], [31, 2, 1, "", "is_tuple"], [31, 2, 1, "", "process_dictcomp"], [31, 2, 1, "", "process_generators"], [31, 2, 1, "", "process_ifs"], [31, 2, 1, "", "process_listcomp"], [31, 2, 1, "", "ti_format_list_to_assert_msg"], [31, 2, 1, "", "warn_if_is_external_func"]], "taichi.lang.ast.ast_transformer_utils": [[32, 1, 1, "", "ASTTransformerContext"], [32, 1, 1, "", "Builder"], [32, 1, 1, "", "LoopScopeAttribute"], [32, 1, 1, "", "LoopScopeGuard"], [32, 1, 1, "", "LoopStatus"], [32, 1, 1, "", "NonStaticControlFlowGuard"], [32, 1, 1, "", "NonStaticControlFlowStatus"], [32, 1, 1, "", "NonStaticIfGuard"], [32, 1, 1, "", "ReturnStatus"], [32, 1, 1, "", "StaticScopeGuard"], [32, 1, 1, "", "StaticScopeStatus"], [32, 1, 1, "", "VariableScopeGuard"]], "taichi.lang.ast.ast_transformer_utils.ASTTransformerContext": [[32, 3, 1, "", "arg_features"], [32, 3, 1, "", "argument_data"], [32, 3, 1, "", "ast_builder"], [32, 2, 1, "", "check_loop_var"], [32, 2, 1, "", "create_variable"], [32, 2, 1, "", "current_loop_scope"], [32, 2, 1, "", "current_scope"], [32, 3, 1, "", "excluded_parameters"], [32, 3, 1, "", "file"], [32, 3, 1, "", "func"], [32, 2, 1, "", "get_pos_info"], [32, 2, 1, "", "get_var_by_name"], [32, 3, 1, "", "global_vars"], [32, 3, 1, "", "indent"], [32, 2, 1, "", "is_in_non_static_control_flow"], [32, 2, 1, "", "is_in_static_for"], [32, 2, 1, "", "is_in_static_scope"], [32, 3, 1, "", "is_kernel"], [32, 3, 1, "", "is_real_function"], [32, 2, 1, "", "is_var_declared"], [32, 3, 1, "", "kernel_args"], [32, 3, 1, "", "lineno_offset"], [32, 3, 1, "", "local_scopes"], [32, 2, 1, "", "loop_scope_guard"], [32, 3, 1, "", "loop_scopes"], [32, 2, 1, "", "loop_status"], [32, 2, 1, "", "non_static_control_flow_guard"], [32, 3, 1, "", "non_static_control_flow_status"], [32, 2, 1, "", "non_static_if_guard"], [32, 3, 1, "", "raised"], [32, 3, 1, "", "return_data"], [32, 3, 1, "", "returned"], [32, 3, 1, "", "returns"], [32, 2, 1, "", "set_loop_status"], [32, 3, 1, "", "src"], [32, 2, 1, "", "static_scope_guard"], [32, 3, 1, "", "static_scope_status"], [32, 2, 1, "", "variable_scope_guard"], [32, 3, 1, "", "visited_funcdef"]], "taichi.lang.ast.ast_transformer_utils.LoopScopeAttribute": [[32, 3, 1, "", "is_static"], [32, 3, 1, "", "nearest_non_static_if"], [32, 3, 1, "", "status"]], "taichi.lang.ast.ast_transformer_utils.LoopScopeGuard": [[32, 3, 1, "", "non_static_guard"], [32, 3, 1, "", "scopes"]], "taichi.lang.ast.ast_transformer_utils.LoopStatus": [[32, 3, 1, "", "Break"], [32, 3, 1, "", "Continue"], [32, 3, 1, "", "Normal"]], "taichi.lang.ast.ast_transformer_utils.NonStaticControlFlowGuard": [[32, 3, 1, "", "status"]], "taichi.lang.ast.ast_transformer_utils.NonStaticControlFlowStatus": [[32, 3, 1, "", "is_in_non_static_control_flow"]], "taichi.lang.ast.ast_transformer_utils.NonStaticIfGuard": [[32, 3, 1, "", "if_node"], [32, 3, 1, "", "loop_attribute"], [32, 3, 1, "", "non_static_guard"]], "taichi.lang.ast.ast_transformer_utils.ReturnStatus": [[32, 3, 1, "", "NoReturn"], [32, 3, 1, "", "ReturnedValue"], [32, 3, 1, "", "ReturnedVoid"]], "taichi.lang.ast.ast_transformer_utils.StaticScopeGuard": [[32, 3, 1, "", "status"]], "taichi.lang.ast.ast_transformer_utils.StaticScopeStatus": [[32, 3, 1, "", "is_in_static_scope"]], "taichi.lang.ast.ast_transformer_utils.VariableScopeGuard": [[32, 3, 1, "", "scopes"]], "taichi.lang.ast.checkers": [[33, 1, 1, "", "KernelSimplicityASTChecker"]], "taichi.lang.ast.checkers.KernelSimplicityASTChecker": [[33, 1, 1, "", "ScopeGuard"], [33, 6, 1, "", "current_scope"], [33, 2, 1, "", "generic_visit"], [33, 2, 1, "", "get_error_location"], [33, 2, 1, "", "new_scope"], [33, 2, 1, "", "should_check"], [33, 6, 1, "", "top_level"], [33, 2, 1, "", "visit_for"]], "taichi.lang.ast.checkers.KernelSimplicityASTChecker.ScopeGuard": [[33, 6, 1, "", "allows_for_loop"], [33, 6, 1, "", "allows_more_stmt"], [33, 3, 1, "", "c"], [33, 2, 1, "", "mark_no_more_for_loop"], [33, 2, 1, "", "mark_no_more_stmt"]], "taichi.lang.ast.symbol_resolver": [[35, 1, 1, "", "ASTResolver"]], "taichi.lang.ast.symbol_resolver.ASTResolver": [[35, 2, 1, "", "resolve_to"]], "taichi.lang.ast.transform": [[36, 4, 1, "", "transform_tree"]], "taichi.lang.common_ops": [[37, 1, 1, "", "TaichiOperations"]], "taichi.lang.exception": [[38, 7, 1, "", "TaichiAssertionError"], [38, 7, 1, "", "TaichiCompilationError"], [38, 7, 1, "", "TaichiNameError"], [38, 7, 1, "", "TaichiRuntimeError"], [38, 7, 1, "", "TaichiRuntimeTypeError"], [38, 7, 1, "", "TaichiSyntaxError"], [38, 7, 1, "", "TaichiTypeError"]], "taichi.lang.exception.TaichiRuntimeTypeError": [[38, 2, 1, "", "get"], [38, 2, 1, "", "get_ret"]], "taichi.lang.field": [[40, 1, 1, "", "BitpackedFields"], [40, 1, 1, "", "Field"], [40, 1, 1, "", "ScalarField"]], "taichi.lang.field.BitpackedFields": [[40, 3, 1, "", "bit_struct_type_builder"], [40, 3, 1, "", "fields"], [40, 2, 1, "", "place"]], "taichi.lang.field.Field": [[40, 2, 1, "", "copy_from"], [40, 6, 1, "", "dtype"], [40, 3, 1, "", "dual"], [40, 2, 1, "", "fill"], [40, 2, 1, "", "from_numpy"], [40, 2, 1, "", "from_paddle"], [40, 2, 1, "", "from_torch"], [40, 3, 1, "", "grad"], [40, 3, 1, "", "host_accessors"], [40, 2, 1, "", "parent"], [40, 6, 1, "", "shape"], [40, 6, 1, "", "snode"], [40, 2, 1, "", "to_numpy"], [40, 2, 1, "", "to_paddle"], [40, 2, 1, "", "to_torch"], [40, 3, 1, "", "vars"]], "taichi.lang.field.ScalarField": [[40, 2, 1, "", "fill"], [40, 2, 1, "", "from_numpy"], [40, 2, 1, "", "to_numpy"], [40, 2, 1, "", "to_paddle"], [40, 2, 1, "", "to_torch"]], "taichi.lang.impl": [[41, 4, 1, "", "axes"], [41, 4, 1, "", "deactivate_all_snodes"], [41, 4, 1, "", "field"], [41, 4, 1, "", "grouped"], [41, 4, 1, "", "ndarray"], [41, 4, 1, "", "one"], [41, 5, 1, "", "root"], [41, 4, 1, "", "static"], [41, 4, 1, "", "static_assert"], [41, 4, 1, "", "static_print"], [41, 4, 1, "", "stop_grad"], [41, 4, 1, "", "zero"]], "taichi.lang.kernel_arguments": [[43, 1, 1, "", "KernelArgument"], [43, 1, 1, "", "SparseMatrixEntry"], [43, 1, 1, "", "SparseMatrixProxy"], [43, 4, 1, "", "decl_argpack_arg"], [43, 4, 1, "", "decl_matrix_arg"], [43, 4, 1, "", "decl_ndarray_arg"], [43, 4, 1, "", "decl_ret"], [43, 4, 1, "", "decl_rw_texture_arg"], [43, 4, 1, "", "decl_scalar_arg"], [43, 4, 1, "", "decl_sparse_matrix"], [43, 4, 1, "", "decl_struct_arg"], [43, 4, 1, "", "decl_texture_arg"], [43, 4, 1, "", "get_type_for_kernel_args"], [43, 4, 1, "", "push_argpack_arg"]], "taichi.lang.kernel_arguments.KernelArgument": [[43, 3, 1, "", "annotation"], [43, 3, 1, "", "default"], [43, 3, 1, "", "name"]], "taichi.lang.kernel_arguments.SparseMatrixEntry": [[43, 3, 1, "", "dtype"], [43, 3, 1, "", "i"], [43, 3, 1, "", "j"], [43, 3, 1, "", "ptr"]], "taichi.lang.kernel_arguments.SparseMatrixProxy": [[43, 3, 1, "", "dtype"], [43, 3, 1, "", "ptr"], [43, 2, 1, "", "subscript"]], "taichi.lang.kernel_impl": [[44, 4, 1, "", "data_oriented"], [44, 4, 1, "", "func"], [44, 4, 1, "", "kernel"], [44, 4, 1, "", "pyfunc"], [44, 4, 1, "", "real_func"]], "taichi.lang.matrix": [[45, 1, 1, "", "Matrix"], [45, 1, 1, "", "MatrixField"], [45, 1, 1, "", "MatrixNdarray"], [45, 1, 1, "", "Vector"], [45, 1, 1, "", "VectorNdarray"]], "taichi.lang.matrix.Matrix": [[45, 2, 1, "", "all"], [45, 2, 1, "", "any"], [45, 2, 1, "", "cast"], [45, 2, 1, "", "cols"], [45, 2, 1, "", "cross"], [45, 2, 1, "", "determinant"], [45, 2, 1, "", "diag"], [45, 2, 1, "", "dot"], [45, 2, 1, "", "field"], [45, 2, 1, "", "fill"], [45, 2, 1, "", "get_shape"], [45, 2, 1, "", "identity"], [45, 2, 1, "", "inverse"], [45, 2, 1, "", "max"], [45, 2, 1, "", "min"], [45, 2, 1, "", "ndarray"], [45, 2, 1, "", "norm"], [45, 2, 1, "", "norm_inv"], [45, 2, 1, "", "norm_sqr"], [45, 2, 1, "", "normalized"], [45, 2, 1, "", "one"], [45, 2, 1, "", "outer_product"], [45, 2, 1, "", "rows"], [45, 2, 1, "", "sum"], [45, 2, 1, "", "to_list"], [45, 2, 1, "", "to_numpy"], [45, 2, 1, "", "trace"], [45, 2, 1, "", "transpose"], [45, 2, 1, "", "unit"], [45, 2, 1, "", "zero"]], "taichi.lang.matrix.MatrixField": [[45, 2, 1, "", "fill"], [45, 2, 1, "", "from_numpy"], [45, 2, 1, "", "get_scalar_field"], [45, 3, 1, "", "m"], [45, 3, 1, "", "n"], [45, 3, 1, "", "ndim"], [45, 3, 1, "", "ptr"], [45, 2, 1, "", "to_numpy"], [45, 2, 1, "", "to_paddle"], [45, 2, 1, "", "to_torch"]], "taichi.lang.matrix.MatrixNdarray": [[45, 3, 1, "", "arr"], [45, 3, 1, "", "dtype"], [45, 6, 1, "", "element_shape"], [45, 3, 1, "", "element_type"], [45, 2, 1, "", "from_numpy"], [45, 3, 1, "", "layout"], [45, 3, 1, "", "m"], [45, 3, 1, "", "n"], [45, 3, 1, "", "shape"], [45, 2, 1, "", "to_numpy"]], "taichi.lang.matrix.Vector": [[45, 2, 1, "", "field"], [45, 2, 1, "", "get_shape"], [45, 2, 1, "", "ndarray"]], "taichi.lang.matrix.VectorNdarray": [[45, 3, 1, "", "arr"], [45, 3, 1, "", "dtype"], [45, 6, 1, "", "element_shape"], [45, 3, 1, "", "element_type"], [45, 2, 1, "", "from_numpy"], [45, 3, 1, "", "layout"], [45, 3, 1, "", "n"], [45, 3, 1, "", "shape"], [45, 2, 1, "", "to_numpy"]], "taichi.lang.matrix_ops": [[46, 4, 1, "", "E"], [46, 4, 1, "", "all"], [46, 4, 1, "", "any"], [46, 4, 1, "", "cast"], [46, 4, 1, "", "cols"], [46, 4, 1, "", "cross"], [46, 4, 1, "", "determinant"], [46, 4, 1, "", "diag"], [46, 4, 1, "", "dot"], [46, 4, 1, "", "fill"], [46, 4, 1, "", "inverse"], [46, 4, 1, "", "matmul"], [46, 4, 1, "", "max"], [46, 4, 1, "", "min"], [46, 4, 1, "", "norm"], [46, 4, 1, "", "norm_inv"], [46, 4, 1, "", "norm_sqr"], [46, 4, 1, "", "normalized"], [46, 4, 1, "", "outer_product"], [46, 4, 1, "", "rows"], [46, 4, 1, "", "sum"], [46, 4, 1, "", "trace"], [46, 4, 1, "", "transpose"]], "taichi.lang.matrix_ops_utils": [[47, 4, 1, "", "arg_at"], [47, 4, 1, "", "arg_foreach_check"], [47, 4, 1, "", "assert_list"], [47, 4, 1, "", "assert_tensor"], [47, 4, 1, "", "assert_vector"], [47, 4, 1, "", "check_matmul"], [47, 4, 1, "", "check_transpose"], [47, 4, 1, "", "dim_lt"], [47, 4, 1, "", "do_check"], [47, 4, 1, "", "get_list_shape"], [47, 4, 1, "", "is_int_const"], [47, 4, 1, "", "preconditions"], [47, 4, 1, "", "same_shapes"], [47, 4, 1, "", "square_matrix"]], "taichi.lang.mesh": [[48, 1, 1, "", "Mesh"], [48, 1, 1, "", "MeshInstance"]], "taichi.lang.mesh.Mesh": [[48, 2, 1, "", "generate_meta"], [48, 2, 1, "", "load_meta"]], "taichi.lang.mesh.MeshInstance": [[48, 2, 1, "", "add_mesh_attribute"], [48, 3, 1, "", "cells"], [48, 3, 1, "", "edges"], [48, 3, 1, "", "faces"], [48, 2, 1, "", "get_position_as_numpy"], [48, 2, 1, "", "get_relation_access"], [48, 2, 1, "", "get_relation_size"], [48, 3, 1, "", "mesh_ptr"], [48, 3, 1, "", "relation_set"], [48, 2, 1, "", "set_index_mapping"], [48, 2, 1, "", "set_num_patches"], [48, 2, 1, "", "set_owned_offset"], [48, 2, 1, "", "set_patch_max_element_num"], [48, 2, 1, "", "set_relation_dynamic"], [48, 2, 1, "", "set_relation_fixed"], [48, 2, 1, "", "set_total_offset"], [48, 3, 1, "", "verts"]], "taichi.lang.misc": [[49, 5, 1, "", "amdgpu"], [49, 5, 1, "", "arm64"], [49, 4, 1, "", "assume_in_range"], [49, 4, 1, "", "block_local"], [49, 4, 1, "", "cache_read_only"], [49, 5, 1, "", "cpu"], [49, 5, 1, "", "cuda"], [49, 5, 1, "", "dx11"], [49, 5, 1, "", "dx12"], [49, 5, 1, "", "extension"], [49, 5, 1, "", "gles"], [49, 4, 1, "", "global_thread_idx"], [49, 5, 1, "", "gpu"], [49, 5, 1, "", "i"], [49, 5, 1, "", "ij"], [49, 5, 1, "", "ijk"], [49, 5, 1, "", "ijkl"], [49, 5, 1, "", "ijl"], [49, 5, 1, "", "ik"], [49, 5, 1, "", "ikl"], [49, 5, 1, "", "il"], [49, 4, 1, "", "init"], [49, 5, 1, "", "j"], [49, 5, 1, "", "jk"], [49, 5, 1, "", "jkl"], [49, 5, 1, "", "jl"], [49, 5, 1, "", "k"], [49, 5, 1, "", "kl"], [49, 5, 1, "", "l"], [49, 4, 1, "", "loop_config"], [49, 4, 1, "", "mesh_local"], [49, 4, 1, "", "mesh_patch_idx"], [49, 5, 1, "", "metal"], [49, 4, 1, "", "no_activate"], [49, 5, 1, "", "opengl"], [49, 4, 1, "", "reset"], [49, 5, 1, "", "vulkan"], [49, 5, 1, "", "x64"], [49, 5, 1, "", "x86_64"]], "taichi.lang.ops": [[50, 4, 1, "", "abs"], [50, 4, 1, "", "acos"], [50, 4, 1, "", "asin"], [50, 4, 1, "", "atan2"], [50, 4, 1, "", "atomic_add"], [50, 4, 1, "", "atomic_and"], [50, 4, 1, "", "atomic_max"], [50, 4, 1, "", "atomic_min"], [50, 4, 1, "", "atomic_mul"], [50, 4, 1, "", "atomic_or"], [50, 4, 1, "", "atomic_sub"], [50, 4, 1, "", "atomic_xor"], [50, 4, 1, "", "bit_cast"], [50, 4, 1, "", "bit_shr"], [50, 4, 1, "", "cast"], [50, 4, 1, "", "ceil"], [50, 4, 1, "", "cos"], [50, 4, 1, "", "exp"], [50, 4, 1, "", "floor"], [50, 4, 1, "", "frexp"], [50, 4, 1, "", "log"], [50, 4, 1, "", "max"], [50, 4, 1, "", "min"], [50, 4, 1, "", "pow"], [50, 4, 1, "", "random"], [50, 4, 1, "", "raw_div"], [50, 4, 1, "", "raw_mod"], [50, 4, 1, "", "round"], [50, 4, 1, "", "rsqrt"], [50, 4, 1, "", "select"], [50, 4, 1, "", "sin"], [50, 4, 1, "", "sqrt"], [50, 4, 1, "", "tan"], [50, 4, 1, "", "tanh"]], "taichi.lang.runtime_ops": [[51, 4, 1, "", "sync"]], "taichi.lang.shell": [[52, 5, 1, "id0", "pybuf_enabled"]], "taichi.lang.simt": [[53, 0, 0, "-", "block"], [54, 0, 0, "-", "grid"], [56, 0, 0, "-", "subgroup"], [57, 0, 0, "-", "warp"]], "taichi.lang.simt.block": [[53, 1, 1, "", "SharedArray"], [53, 4, 1, "", "arch_uses_spv"], [53, 4, 1, "", "global_thread_idx"], [53, 4, 1, "", "mem_sync"], [53, 4, 1, "", "sync"], [53, 4, 1, "", "sync_all_nonzero"], [53, 4, 1, "", "sync_any_nonzero"], [53, 4, 1, "", "sync_count_nonzero"], [53, 4, 1, "", "thread_idx"]], "taichi.lang.simt.block.SharedArray": [[53, 3, 1, "", "dtype"], [53, 3, 1, "", "shared_array_proxy"], [53, 2, 1, "", "subscript"]], "taichi.lang.simt.grid": [[54, 4, 1, "", "memfence"]], "taichi.lang.simt.subgroup": [[56, 4, 1, "", "all_equal"], [56, 4, 1, "", "all_true"], [56, 4, 1, "", "any_true"], [56, 4, 1, "", "barrier"], [56, 4, 1, "", "broadcast_first"], [56, 4, 1, "", "elect"], [56, 4, 1, "", "exclusive_add"], [56, 4, 1, "", "exclusive_and"], [56, 4, 1, "", "exclusive_max"], [56, 4, 1, "", "exclusive_min"], [56, 4, 1, "", "exclusive_mul"], [56, 4, 1, "", "exclusive_or"], [56, 4, 1, "", "exclusive_xor"], [56, 4, 1, "", "inclusive_add"], [56, 4, 1, "", "inclusive_and"], [56, 4, 1, "", "inclusive_max"], [56, 4, 1, "", "inclusive_min"], [56, 4, 1, "", "inclusive_mul"], [56, 4, 1, "", "inclusive_or"], [56, 4, 1, "", "inclusive_xor"], [56, 4, 1, "", "memory_barrier"], [56, 4, 1, "", "reduce_add"], [56, 4, 1, "", "reduce_and"], [56, 4, 1, "", "reduce_max"], [56, 4, 1, "", "reduce_min"], [56, 4, 1, "", "reduce_mul"], [56, 4, 1, "", "reduce_or"], [56, 4, 1, "", "reduce_xor"], [56, 4, 1, "", "shuffle"], [56, 4, 1, "", "shuffle_down"], [56, 4, 1, "", "shuffle_up"], [56, 4, 1, "", "shuffle_xor"]], "taichi.lang.simt.warp": [[57, 4, 1, "", "active_mask"], [57, 4, 1, "", "all_nonzero"], [57, 4, 1, "", "any_nonzero"], [57, 4, 1, "", "ballot"], [57, 4, 1, "", "match_all"], [57, 4, 1, "", "match_any"], [57, 4, 1, "", "shfl_down_f32"], [57, 4, 1, "", "shfl_down_i32"], [57, 4, 1, "", "shfl_sync_f32"], [57, 4, 1, "", "shfl_sync_i32"], [57, 4, 1, "", "shfl_up_f32"], [57, 4, 1, "", "shfl_up_i32"], [57, 4, 1, "", "shfl_xor_i32"], [57, 4, 1, "", "sync"], [57, 4, 1, "", "unique"]], "taichi.lang.snode": [[58, 1, 1, "", "SNode"], [58, 4, 1, "", "activate"], [58, 4, 1, "", "append"], [58, 4, 1, "", "deactivate"], [58, 4, 1, "", "get_addr"], [58, 4, 1, "", "is_active"], [58, 4, 1, "", "length"], [58, 4, 1, "", "rescale_index"]], "taichi.lang.snode.SNode": [[58, 2, 1, "", "bitmasked"], [58, 2, 1, "", "deactivate_all"], [58, 2, 1, "", "dense"], [58, 2, 1, "", "dynamic"], [58, 2, 1, "", "lazy_dual"], [58, 2, 1, "", "lazy_grad"], [58, 2, 1, "", "parent"], [58, 2, 1, "", "place"], [58, 2, 1, "", "pointer"], [58, 3, 1, "", "ptr"], [58, 2, 1, "", "quant_array"], [58, 6, 1, "", "shape"]], "taichi.lang.struct": [[60, 1, 1, "", "Struct"], [60, 1, 1, "", "StructField"], [60, 4, 1, "", "dataclass"]], "taichi.lang.struct.Struct": [[60, 6, 1, "", "entries"], [60, 2, 1, "", "field"], [60, 6, 1, "", "items"], [60, 6, 1, "", "keys"], [60, 6, 1, "", "methods"], [60, 2, 1, "", "to_dict"]], "taichi.lang.struct.StructField": [[60, 2, 1, "", "copy_from"], [60, 3, 1, "", "dual"], [60, 3, 1, "", "field_dict"], [60, 2, 1, "", "fill"], [60, 2, 1, "", "from_numpy"], [60, 2, 1, "", "from_paddle"], [60, 2, 1, "", "from_torch"], [60, 2, 1, "", "get_member_field"], [60, 3, 1, "", "grad"], [60, 6, 1, "", "keys"], [60, 3, 1, "", "name"], [60, 3, 1, "", "struct_methods"], [60, 2, 1, "", "to_numpy"], [60, 2, 1, "", "to_paddle"], [60, 2, 1, "", "to_torch"]], "taichi.linalg": [[63, 0, 0, "-", "matrixfree_cg"], [64, 0, 0, "-", "sparse_cg"], [65, 0, 0, "-", "sparse_matrix"], [66, 0, 0, "-", "sparse_solver"]], "taichi.linalg.matrixfree_cg": [[63, 1, 1, "", "LinearOperator"], [63, 4, 1, "", "MatrixFreeBICGSTAB"], [63, 4, 1, "", "MatrixFreeCG"]], "taichi.linalg.matrixfree_cg.LinearOperator": [[63, 2, 1, "", "matvec"]], "taichi.linalg.sparse_cg": [[64, 1, 1, "", "SparseCG"]], "taichi.linalg.sparse_cg.SparseCG": [[64, 3, 1, "", "b"], [64, 3, 1, "", "dtype"], [64, 3, 1, "", "matrix"], [64, 2, 1, "", "solve"], [64, 3, 1, "", "ti_arch"]], "taichi.linalg.sparse_matrix": [[65, 1, 1, "", "SparseMatrix"], [65, 1, 1, "", "SparseMatrixBuilder"]], "taichi.linalg.sparse_matrix.SparseMatrix": [[65, 2, 1, "", "build_from_ndarray"], [65, 3, 1, "", "dtype"], [65, 2, 1, "", "mmwrite"], [65, 6, 1, "", "shape"], [65, 2, 1, "", "transpose"]], "taichi.linalg.sparse_matrix.SparseMatrixBuilder": [[65, 2, 1, "", "build"], [65, 3, 1, "", "dtype"], [65, 3, 1, "", "num_cols"], [65, 3, 1, "", "num_rows"], [65, 2, 1, "", "print_triplets"]], "taichi.linalg.sparse_solver": [[66, 1, 1, "", "SparseSolver"]], "taichi.linalg.sparse_solver.SparseSolver": [[66, 2, 1, "", "analyze_pattern"], [66, 2, 1, "", "compute"], [66, 3, 1, "", "dtype"], [66, 2, 1, "", "factorize"], [66, 2, 1, "", "info"], [66, 3, 1, "", "matrix"], [66, 2, 1, "", "solve"]], "taichi.math": [[68, 0, 0, "-", "mathimpl"]], "taichi.math.mathimpl": [[68, 4, 1, "", "clamp"], [68, 4, 1, "", "clz"], [68, 4, 1, "", "cross"], [68, 4, 1, "", "degrees"], [68, 4, 1, "", "determinant"], [68, 4, 1, "", "distance"], [68, 4, 1, "", "dot"], [68, 5, 1, "", "e"], [68, 4, 1, "", "eye"], [68, 4, 1, "", "fract"], [68, 5, 1, "", "inf"], [68, 4, 1, "", "inverse"], [68, 4, 1, "", "isinf"], [68, 4, 1, "", "isnan"], [68, 5, 1, "", "ivec2"], [68, 5, 1, "", "ivec3"], [68, 5, 1, "", "ivec4"], [68, 4, 1, "", "length"], [68, 4, 1, "", "log2"], [68, 5, 1, "", "mat2"], [68, 5, 1, "", "mat3"], [68, 5, 1, "", "mat4"], [68, 4, 1, "", "mix"], [68, 4, 1, "", "mod"], [68, 5, 1, "", "nan"], [68, 4, 1, "", "normalize"], [68, 5, 1, "", "pi"], [68, 4, 1, "", "popcnt"], [68, 4, 1, "", "radians"], [68, 4, 1, "", "reflect"], [68, 4, 1, "", "refract"], [68, 4, 1, "", "rot_by_axis"], [68, 4, 1, "", "rot_yaw_pitch_roll"], [68, 4, 1, "", "rotation2d"], [68, 4, 1, "", "rotation3d"], [68, 4, 1, "", "scale"], [68, 4, 1, "", "sign"], [68, 4, 1, "", "smoothstep"], [68, 4, 1, "", "step"], [68, 4, 1, "", "translate"], [68, 5, 1, "", "uvec2"], [68, 5, 1, "", "uvec3"], [68, 5, 1, "", "uvec4"], [68, 4, 1, "", "vdir"], [68, 5, 1, "", "vec2"], [68, 5, 1, "", "vec3"], [68, 5, 1, "", "vec4"]], "taichi.profiler": [[70, 0, 0, "-", "kernel_metrics"], [71, 0, 0, "-", "kernel_profiler"], [72, 0, 0, "-", "memory_profiler"], [73, 0, 0, "-", "scoped_profiler"]], "taichi.profiler.kernel_metrics": [[70, 1, 1, "", "CuptiMetric"], [70, 4, 1, "", "get_predefined_cupti_metrics"]], "taichi.profiler.kernel_metrics.CuptiMetric": [[70, 3, 1, "", "header"], [70, 3, 1, "", "name"], [70, 3, 1, "", "scale"], [70, 3, 1, "", "val_format"]], "taichi.profiler.kernel_profiler": [[71, 4, 1, "", "clear_kernel_profiler_info"], [71, 4, 1, "", "collect_kernel_profiler_metrics"], [71, 4, 1, "", "get_kernel_profiler_total_time"], [71, 4, 1, "", "print_kernel_profiler_info"], [71, 4, 1, "", "query_kernel_profiler_info"], [71, 4, 1, "", "set_kernel_profiler_metrics"], [71, 4, 1, "", "set_kernel_profiler_toolkit"]], "taichi.profiler.memory_profiler": [[72, 4, 1, "", "print_memory_profiler_info"]], "taichi.profiler.scoped_profiler": [[73, 4, 1, "", "clear_scoped_profiler_info"], [73, 4, 1, "", "print_scoped_profiler_info"]], "taichi.tools": [[75, 0, 0, "-", "diagnose"], [77, 0, 0, "-", "np2ply"], [78, 0, 0, "-", "vtk"]], "taichi.tools.np2ply": [[77, 1, 1, "", "PLYWriter"]], "taichi.tools.np2ply.PLYWriter": [[77, 2, 1, "", "add_face_channel"], [77, 2, 1, "", "add_face_id"], [77, 2, 1, "", "add_face_piece"], [77, 2, 1, "", "add_faces"], [77, 2, 1, "", "add_vertex_alpha"], [77, 2, 1, "", "add_vertex_channel"], [77, 2, 1, "", "add_vertex_color"], [77, 2, 1, "", "add_vertex_id"], [77, 2, 1, "", "add_vertex_normal"], [77, 2, 1, "", "add_vertex_piece"], [77, 2, 1, "", "add_vertex_pos"], [77, 2, 1, "", "add_vertex_rgba"], [77, 2, 1, "", "add_vertex_vel"], [77, 3, 1, "", "comment"], [77, 3, 1, "", "corresponding_numpy_types"], [77, 2, 1, "", "export"], [77, 2, 1, "", "export_ascii"], [77, 2, 1, "", "export_frame"], [77, 2, 1, "", "export_frame_ascii"], [77, 3, 1, "", "face_channels"], [77, 3, 1, "", "face_data"], [77, 3, 1, "", "face_data_type"], [77, 3, 1, "", "face_type"], [77, 3, 1, "", "num_face_channels"], [77, 3, 1, "", "num_faces"], [77, 3, 1, "", "num_vertex_channels"], [77, 3, 1, "", "num_vertices"], [77, 3, 1, "", "ply_supported_types"], [77, 2, 1, "", "print_header"], [77, 2, 1, "", "sanity_check"], [77, 3, 1, "", "type_map"], [77, 3, 1, "", "vertex_channels"], [77, 3, 1, "", "vertex_data"], [77, 3, 1, "", "vertex_data_type"]], "taichi.tools.vtk": [[78, 4, 1, "", "write_vtk"]], "taichi.types": [[79, 0, 0, "-", "annotations"], [80, 0, 0, "-", "compound_types"], [81, 0, 0, "-", "enums"], [83, 0, 0, "-", "ndarray_type"], [84, 0, 0, "-", "primitive_types"], [85, 0, 0, "-", "quant"], [86, 0, 0, "-", "texture_type"], [87, 0, 0, "-", "utils"]], "taichi.types.annotations": [[79, 1, 1, "", "Template"], [79, 1, 1, "", "sparse_matrix_builder"], [79, 5, 1, "", "template"]], "taichi.types.annotations.Template": [[79, 3, 1, "", "dim"], [79, 3, 1, "", "tensor"]], "taichi.types.compound_types": [[80, 4, 1, "", "argpack"], [80, 4, 1, "", "matrix"], [80, 4, 1, "", "struct"], [80, 4, 1, "", "vector"]], "taichi.types.enums": [[81, 5, 1, "", "AutodiffMode"], [81, 1, 1, "", "DeviceCapability"], [81, 5, 1, "", "Format"], [81, 5, 1, "", "Layout"], [81, 5, 1, "", "SNodeGradType"]], "taichi.types.enums.DeviceCapability": [[81, 3, 1, "", "spirv_has_atomic_float"], [81, 3, 1, "", "spirv_has_atomic_float16"], [81, 3, 1, "", "spirv_has_atomic_float16_add"], [81, 3, 1, "", "spirv_has_atomic_float16_minmax"], [81, 3, 1, "", "spirv_has_atomic_float64"], [81, 3, 1, "", "spirv_has_atomic_float64_add"], [81, 3, 1, "", "spirv_has_atomic_float64_minmax"], [81, 3, 1, "", "spirv_has_atomic_float_add"], [81, 3, 1, "", "spirv_has_atomic_float_minmax"], [81, 3, 1, "", "spirv_has_atomic_int64"], [81, 3, 1, "", "spirv_has_float16"], [81, 3, 1, "", "spirv_has_float64"], [81, 3, 1, "", "spirv_has_int16"], [81, 3, 1, "", "spirv_has_int64"], [81, 3, 1, "", "spirv_has_int8"], [81, 3, 1, "", "spirv_has_no_integer_wrap_decoration"], [81, 3, 1, "", "spirv_has_non_semantic_info"], [81, 3, 1, "", "spirv_has_physical_storage_buffer"], [81, 3, 1, "", "spirv_has_subgroup_arithmetic"], [81, 3, 1, "", "spirv_has_subgroup_ballot"], [81, 3, 1, "", "spirv_has_subgroup_basic"], [81, 3, 1, "", "spirv_has_subgroup_vote"], [81, 3, 1, "", "spirv_has_variable_ptr"], [81, 3, 1, "", "spirv_version_1_3"], [81, 3, 1, "", "spirv_version_1_4"], [81, 3, 1, "", "spirv_version_1_5"]], "taichi.types.ndarray_type": [[83, 5, 1, "", "NDArray"], [83, 5, 1, "", "ndarray"]], "taichi.types.primitive_types": [[84, 5, 1, "", "f16"], [84, 5, 1, "", "f32"], [84, 5, 1, "", "f64"], [84, 5, 1, "", "float16"], [84, 5, 1, "", "float32"], [84, 5, 1, "", "float64"], [84, 5, 1, "", "i16"], [84, 5, 1, "", "i32"], [84, 5, 1, "", "i64"], [84, 5, 1, "", "i8"], [84, 5, 1, "", "int16"], [84, 5, 1, "", "int32"], [84, 5, 1, "", "int64"], [84, 5, 1, "", "int8"], [84, 4, 1, "", "ref"], [84, 5, 1, "", "u1"], [84, 5, 1, "", "u16"], [84, 5, 1, "", "u32"], [84, 5, 1, "", "u64"], [84, 5, 1, "", "u8"], [84, 5, 1, "", "uint1"], [84, 5, 1, "", "uint16"], [84, 5, 1, "", "uint32"], [84, 5, 1, "", "uint64"], [84, 5, 1, "", "uint8"]], "taichi.types.quant": [[85, 4, 1, "", "fixed"], [85, 4, 1, "", "float"], [85, 4, 1, "", "int"]], "taichi.types.texture_type": [[86, 5, 1, "", "rw_texture"], [86, 5, 1, "", "texture"]], "taichi.types.utils": [[87, 5, 1, "", "is_integral"], [87, 5, 1, "", "is_real"], [87, 5, 1, "", "is_signed"], [87, 5, 1, "", "is_tensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:property", "7": "py:exception"}, "terms": {"": [5, 7, 30, 41, 44, 45, 49, 50, 58, 65, 68, 73, 80, 83, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 124], "0": [5, 14, 30, 32, 41, 44, 45, 46, 49, 50, 60, 65, 68, 70, 71, 73, 77, 80, 85, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124], "00": 117, "000": [104, 117], "000000": [50, 68, 99, 114], "000000000000": [50, 102], "0001": 14, "004": 117, "00935": 58, "010000": 99, "02": 106, "033": 117, "036": 121, "046": 68, "05": 103, "05048351": 68, "06": [63, 64, 100, 117], "062": 90, "073": 121, "090257": 50, "098": 93, "0d": [91, 95, 101, 110, 116], "0f": [70, 71, 100], "0m0": 104, "0m1": 104, "0m2": 104, "0xffffffff": 122, "1": [0, 5, 23, 30, 32, 40, 41, 44, 45, 49, 50, 58, 60, 65, 68, 70, 71, 73, 79, 80, 84, 85, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "10": [5, 41, 45, 49, 50, 60, 65, 89, 91, 93, 95, 97, 99, 100, 101, 102, 103, 104, 106, 110, 113, 116, 118, 120, 121], "100": [12, 49, 71, 93, 101, 102, 104, 111, 113, 115, 116, 117], "1000": [17, 99, 111, 112], "10000": 112, "100000": 112, "1000000": [104, 116], "100mb": 116, "100x": [105, 106, 116, 117], "1024": [70, 71, 99, 100, 103, 117], "107149": 114, "1078523331": 50, "1080": 111, "1086": 100, "11": [5, 23, 102, 103, 117], "112": 104, "114": 114, "12": [49, 91, 99, 102, 103, 105, 110, 120], "120x": 104, "123": [99, 110], "125000": 50, "128": [49, 70, 71, 93, 95, 100, 101, 109, 110, 111, 116], "13": [58, 89, 93, 102, 103], "135": 50, "14": [50, 58, 60, 93, 103, 124], "14094f25": 103, "141120": 114, "141592": 68, "14159265358979": 124, "141592653589793": 68, "147": 121, "15": [93, 98, 104], "15000": 104, "16": [11, 19, 41, 45, 49, 70, 71, 84, 89, 93, 95, 98, 101, 109, 110, 116, 124], "16x16x16": 99, "17": 91, "171": 114, "178": 100, "179": 104, "18": [50, 113, 121], "180": 50, "19": 100, "1910": 58, "1b": 93, "1d": [45, 49, 91, 95, 96, 102, 109, 110, 114], "1e": [63, 64, 101, 113], "1e1": 116, "1e3": 116, "1f": 100, "1j": 114, "1x": 110, "1x1": [45, 121], "1x1x1": 99, "1x4": 45, "1xn": 45, "2": [5, 10, 21, 30, 32, 41, 44, 45, 49, 50, 60, 65, 68, 71, 79, 80, 89, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124], "20": [21, 89, 93, 99, 100, 102, 103, 106, 111, 113], "200": 100, "200000": [68, 96], "200000000000": 102, "200000002980": 102, "2001": 41, "201": 90, "2019": [58, 99], "2021": [82, 85], "2048": 15, "20x": 105, "21": [89, 93, 100], "223": 121, "22877334": 50, "23": 100, "233": 94, "235": 104, "244": 117, "248": 117, "249": 117, "25": 50, "250": 117, "250000": 68, "252": 117, "254": 117, "256": [93, 94, 100, 110], "26": [45, 100], "267": 105, "267261": 68, "269": 117, "27": 100, "2721": 104, "287355j": 114, "29": 89, "294": 121, "295": 121, "295780": 114, "2d": [45, 68, 91, 94, 95, 96, 97, 99, 106, 110, 113, 114], "2e1": 100, "2f": 100, "2gb": 103, "2j": 114, "2mb": 103, "2x": 110, "2x1": 95, "2x2": [68, 80, 99, 121], "2x3": 95, "3": [5, 30, 31, 41, 45, 49, 50, 60, 65, 68, 80, 89, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 115, 120, 121, 124], "30": [68, 102, 105, 120], "300": 95, "300000": 68, "300x300x300": 95, "300x400x500": 95, "3090": 116, "31": 93, "32": [14, 40, 44, 45, 49, 50, 84, 89, 93, 95, 97, 98, 99, 100, 102, 110, 111, 116, 122, 124], "320": 106, "32768": 111, "329": 117, "32kb": [96, 111], "32x128": 95, "32x6": 95, "32x64": 98, "342": 100, "346574": 114, "36": 118, "360": 100, "3608": 49, "363": 104, "367879": 50, "372": 121, "392": 105, "3d": [45, 48, 68, 80, 91, 93, 95, 99, 101, 114, 124], "3e2": 100, "3f": 100, "3x": 116, "3x2": 95, "3x3": [40, 68, 95, 121], "4": [5, 8, 14, 41, 44, 45, 49, 50, 58, 60, 65, 68, 80, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 110, 111, 113, 114, 115, 116, 119, 120, 121, 124], "40": [44, 100], "400": 95, "409": 104, "42": [44, 107, 109], "43": 100, "4348093": 68, "4355969": 68, "446": 121, "45": [50, 68, 104], "451": 100, "46": 103, "468694": 114, "471": 100, "476": 104, "480": 95, "483": 121, "488": 100, "49": 103, "49688014": 68, "4b": 93, "4d": [68, 114, 124], "4e3": 100, "4kb": 111, "4x": 110, "4x1": 45, "4x3": 124, "4x4": [68, 95, 99, 116, 121], "4x4x4": 99, "5": [5, 41, 45, 50, 65, 68, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 106, 110, 111, 113, 114, 116, 117, 119, 120, 121, 124], "50": [12, 21, 64, 106], "500": 95, "5000": 63, "500000": 68, "500x": 104, "5050": 111, "50x": 106, "51": 100, "512": [24, 93, 94, 102, 110], "52": 68, "534522": 68, "546": 104, "549": [103, 104], "55": [49, 91, 104, 116], "551": 121, "57": 114, "58": 105, "584962": 68, "59": [100, 117], "591560": 114, "5d": 114, "5e4": 100, "5x5": 45, "5x6": 116, "5x6x7": 45, "5x6x7x4": 45, "6": [5, 45, 50, 89, 91, 93, 94, 95, 97, 99, 100, 103, 110, 111, 116, 117, 121], "60": [103, 117], "61": 117, "61339645": 68, "61388511": 68, "615": 121, "63": 117, "64": [40, 50, 84, 93, 95, 97, 98, 99, 102, 103, 106, 114, 124], "640": 95, "640x480": 95, "647": 121, "648": 121, "64bit": 103, "64x32": 95, "65833154": 68, "66": 100, "66304": 81, "66560": 81, "668": 117, "66816": 81, "68": 117, "6e5": 100, "7": [50, 68, 89, 91, 94, 95, 97, 98, 99, 100, 103, 106, 111, 116, 121, 124], "709": 121, "70x": 104, "71": 98, "712": 100, "716101627301": 50, "718281": 68, "718281828459045": 68, "718282": 50, "72": 98, "73": [100, 117], "732051": 68, "73412986184350777": 50, "744": 121, "75103329": 68, "761594": 50, "775": 121, "78498": 104, "785": 68, "785398j": 114, "78816002": 68, "7e6": 100, "8": [5, 13, 41, 44, 45, 49, 50, 70, 71, 84, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 110, 114, 116, 117, 118, 120, 121, 124], "800000": 68, "801784": 68, "807": 121, "808": 121, "8192": 116, "841471": 114, "853": 100, "854": 121, "866025": 68, "887344": 114, "8m": 116, "8x": 110, "8x8": [96, 99], "9": [5, 40, 50, 91, 93, 94, 95, 97, 103, 104, 106, 111, 117, 121], "90": [50, 68, 102, 103], "909297": 114, "911": 103, "927295": 114, "963722261": 50, "964": 100, "967": 121, "970": 117, "982794": 114, "A": [9, 31, 33, 40, 41, 44, 45, 49, 50, 58, 60, 63, 64, 65, 68, 70, 80, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 113, 115, 116, 120, 121, 124], "AND": [50, 120], "And": [102, 105], "As": [90, 95, 96, 97, 99, 100, 101, 105, 106, 109, 111, 116, 124], "At": [93, 116], "Be": [96, 106], "But": [94, 100, 105, 119], "By": [91, 96, 99, 100, 101, 106], "For": [31, 33, 40, 41, 45, 49, 50, 58, 60, 68, 70, 71, 85, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124], "If": [8, 31, 32, 33, 49, 50, 65, 91, 93, 94, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 111, 112, 116, 118, 119, 120, 124], "In": [50, 71, 90, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124], "It": [30, 41, 45, 68, 91, 93, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 111, 113, 116, 117, 120], "Its": 117, "NOT": 9, "No": [91, 99, 103, 109, 110, 111, 118], "Not": [68, 94, 95, 106], "ON": 117, "OR": [50, 120], "Of": 45, "On": [97, 99, 103, 111, 112, 113], "One": [91, 96, 99, 100, 104, 111, 116, 120], "Such": [94, 116], "That": [91, 97, 116, 120], "The": [8, 30, 31, 35, 37, 40, 41, 44, 45, 48, 49, 50, 58, 60, 63, 64, 65, 66, 67, 68, 71, 77, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124], "Then": [100, 102, 110, 113, 120], "There": [91, 93, 94, 95, 100, 113, 115, 117, 120], "These": [102, 106, 110, 111, 114, 117, 121, 124], "To": [44, 45, 58, 71, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124], "With": [50, 96, 97, 101, 104, 105], "_": [45, 60, 102], "__activemask": 122, "__all_sync": 122, "__any_sync": 122, "__ballot_sync": 122, "__call__": 100, "__device__": 106, "__global__": [105, 106], "__import__": 103, "__init__": [44, 89, 102], "__len__": 99, "__match_all_sync": 122, "__match_any_sync": 122, "__name__": [8, 71], "__p": 41, "__shfl_down_sync": 122, "__shfl_sync": 122, "__shfl_up_sync": 122, "__shfl_xor_sync": 122, "__struct_method": [60, 90], "__syncwarp": 122, "__uni_sync": 122, "_and_column": 107, "_annot": 43, "_best_fit": 21, "_default": 43, "_fit": 21, "_format": [65, 77], "_iter": 21, "_lb": 21, "_max_it": 21, "_name": 43, "_ndarrai": 45, "_pop": 21, "_root": 58, "_test_mod": 49, "_ti_cor": 73, "_trial": 21, "_ub": 21, "_var": [40, 45], "a_expr": 120, "a_numpi": 104, "a_python_struct": 90, "a_taichi_struct": 90, "ab": [50, 121], "abc": 5, "abil": 124, "abl": 110, "abnorm": 116, "about": [58, 70, 73, 89, 93, 96, 99, 101, 102, 104, 105, 106, 110, 112, 116, 120], "abov": [41, 50, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 110, 112, 114, 119, 120, 124], "absolut": [45, 50, 63, 64, 93, 113], "abstract": [33, 40, 41, 105, 109, 124], "abstract_syntax_tre": 107, "acc": 95, "acceler": [49, 95, 96, 106, 108], "accept": [70, 97, 107, 111, 113, 114], "access": [5, 41, 49, 91, 96, 97, 99, 107, 109, 110, 111, 112, 114, 115, 116, 118, 119], "accessor": 96, "accommod": 30, "accomplish": 124, "accord": [50, 96, 104, 120], "accordingli": 101, "accumul": [101, 116], "achiev": [68, 90, 97, 100, 104, 105, 106, 107, 116, 124], "aco": [50, 121], "across": [49, 111], "across_kernel": 101, "act": [92, 100, 102, 124], "action": 116, "activ": [41, 58, 92, 100, 101, 110, 119, 120], "activate_snod": 99, "active_mask": [57, 122], "activity_check": 99, "actual": [41, 93, 99, 104, 105, 110, 111, 116, 120], "ad": [0, 28, 33, 58, 60, 97, 106, 107, 116, 117], "ad_grav": 101, "adapt": [49, 91], "add": [8, 58, 70, 71, 77, 89, 97, 99, 100, 101, 102, 103, 105, 107, 109, 110, 116], "add_data": 99, "add_fac": 77, "add_face_channel": 77, "add_face_id": 77, "add_face_piec": 77, "add_field": 8, "add_graph": 8, "add_kernel": 8, "add_kernel_templ": 8, "add_mesh_attribut": 48, "add_new_circl": 10, "add_on": [97, 111], "add_vertex_alpha": 77, "add_vertex_channel": 77, "add_vertex_color": 77, "add_vertex_id": 77, "add_vertex_norm": 77, "add_vertex_piec": 77, "add_vertex_po": 77, "add_vertex_rgba": 77, "add_vertex_vel": 77, "addd_on": 97, "addit": [93, 94, 96, 97, 100, 102, 106, 114, 116, 121, 124], "addition": [99, 106, 116, 121], "address": [58, 96, 99, 105, 116], "adjac": 96, "adjoint": [41, 58], "adopt": [101, 102, 119, 120], "adstack": 49, "advaction_step": 25, "advanc": [70, 71, 99, 101, 106, 111, 116, 119, 120], "advanced_optim": [100, 119], "advantag": [96, 99, 100, 105, 110], "advect": 25, "advisory_num_threads_per_group": 3, "advisory_total_num_thread": 3, "affect": 111, "afford": [102, 105], "after": [45, 49, 58, 91, 93, 96, 99, 111, 117, 118, 119, 120], "afterward": [100, 111], "again": 110, "against": 99, "aggreg": 117, "ahead": [7, 110, 112], "aid": 100, "aim": 93, "air": 99, "aka": 93, "algorithm": [0, 28, 101, 104, 105], "alia": [68, 79, 83, 84, 86, 97, 124], "alias": 120, "aliasing_": 107, "align": [45, 94, 96], "all": [3, 5, 38, 40, 41, 44, 45, 46, 49, 50, 51, 58, 60, 71, 77, 89, 92, 93, 95, 96, 97, 99, 100, 102, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124], "all_best": 21, "all_equ": 56, "all_nonzero": [57, 122], "all_pop": 21, "all_tru": 56, "alloc": [49, 89, 97, 99, 101, 102, 103, 105, 106, 109, 119], "allocate_from_buff": 103, "allocate_temp": 89, "allow": [33, 40, 44, 48, 49, 50, 65, 90, 91, 92, 93, 97, 100, 101, 102, 106, 109, 110, 111, 116, 119, 120, 124], "allows_for_loop": 33, "allows_more_stmt": 33, "almost": 105, "along": [49, 89, 91, 99, 104, 111, 113], "alpha": [16, 77], "alreadi": [41, 93, 95, 99, 120, 124], "also": [31, 41, 44, 79, 89, 91, 93, 94, 95, 96, 97, 99, 100, 102, 103, 105, 106, 107, 111, 113, 114, 116, 120, 121, 123, 124], "altern": [95, 101, 102, 116, 119, 120, 124], "although": [96, 100, 101, 110, 118], "alwai": [45, 49, 91, 97, 100, 101, 104, 105, 110, 111], "ambigu": [102, 110], "amd": [66, 113], "amdgpu": 49, "among": 105, "amort": [99, 110], "amount": [91, 99, 105, 107, 116], "an": [5, 7, 8, 10, 30, 31, 35, 38, 40, 41, 45, 49, 50, 58, 60, 68, 80, 89, 90, 91, 93, 95, 97, 99, 101, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124], "analog": 114, "analysi": [110, 120], "analyz": [66, 110, 113, 117], "analyze_pattern": [66, 113], "ancestor": [40, 58, 89], "ancestor_snod": 99, "and_expr": 120, "and_test": 120, "ang": 68, "ang_i": 68, "ang_x": 68, "ang_z": 68, "angl": [50, 68], "ani": [3, 4, 5, 8, 9, 31, 35, 41, 45, 46, 60, 79, 89, 93, 94, 96, 97, 99, 101, 103, 105, 106, 110, 111, 112, 117, 124], "annassign": 31, "annot": [0, 30, 31, 43, 60, 82, 90, 97, 114, 116, 124], "annotated_assignment_stmt": 120, "anoth": [30, 40, 41, 60, 65, 68, 89, 97, 100, 101, 104, 107, 111, 114, 120, 124], "answer": 110, "any_arrai": [0, 42], "any_nonzero": [57, 122], "any_tru": 56, "anymor": 101, "anywher": 106, "ao": [45, 60, 65, 93], "aos_and_soa": 107, "aot": [0, 28], "aot_modul": 8, "apart": [96, 97, 105, 113, 121], "api": [88, 96, 99, 101, 102, 105, 107, 110, 115, 116, 122], "appar": [96, 101], "appear": [104, 120], "append": [58, 99], "appl": [49, 109], "appli": [33, 60, 94, 96, 97, 99, 109, 116, 121, 124], "applic": [96, 105, 106, 110, 116, 124], "apply_c_bc": 25, "apply_p_bc": 25, "apply_vel_bc": 25, "approach": [92, 94, 95, 97, 121], "approxim": [93, 124], "ar": [33, 40, 41, 44, 45, 50, 58, 66, 70, 77, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "arang": 94, "arbitrari": [82, 93, 111, 114, 120], "arbitrarili": 120, "arc": 50, "arch": [8, 49, 53, 70, 71, 73, 89, 95, 97, 100, 102, 103, 104, 106, 110, 111, 112, 113, 114, 115, 117, 119], "arch_uses_spv": 53, "architectur": [96, 99, 103, 105, 106, 111, 116, 119], "archiv": 8, "area": [60, 90, 101, 104], "arg": [5, 8, 30, 31, 40, 41, 45, 47, 49, 50, 58, 60, 100], "arg_at": 47, "arg_attribs_vec_": 3, "arg_depth": 43, "arg_featur": 32, "arg_foreach_check": 47, "arg_id": 3, "arg_indic": 47, "argpack": [0, 42, 80], "argpacktyp": [30, 43], "args_bytes_": 3, "argsort": 94, "argument": [5, 30, 50, 60, 68, 70, 77, 80, 85, 89, 90, 91, 95, 97, 100, 101, 102, 106, 107, 109, 110, 114, 119, 120, 121, 124], "argument_data": 32, "argumentattribut": 3, "argumentndarrai": 5, "argumentrwtextur": 5, "argumentscalar": 5, "argumenttextur": 5, "arithmet": [96, 107, 114], "arm": 49, "arm64": 49, "around": [65, 68, 105, 119, 124], "arr": [40, 45, 89, 94, 97, 102, 105], "arr1": 105, "arr2": 105, "arr_access": 3, "arr_np": 97, "arr_ti": 97, "arr_torch": 97, "arrai": [40, 41, 45, 48, 49, 50, 60, 66, 77, 82, 89, 95, 96, 97, 99, 102, 103, 104, 106, 108, 111, 113, 114, 124], "arrang": 96, "array2d": 89, "array_dict": [60, 94], "articl": [96, 99, 120], "artifact": 8, "artifici": 101, "arxiv": 58, "asia": 99, "asin": [50, 121], "ask": 108, "aspect": 118, "assembl": 90, "assert": [31, 38, 41, 49, 101, 103, 110, 122], "assert_list": 47, "assert_stmt": 120, "assert_tensor": 47, "assert_vector": 47, "assertionerror": [38, 41, 98, 100, 120], "assign": [31, 41, 44, 95, 99, 102, 109, 110, 116, 118, 121, 123], "assign_vector": 93, "assignment_express": 120, "assignment_form": 107, "assignment_stmt": 120, "associ": 99, "assum": [49, 93, 94, 96], "assume_in_rang": 49, "ast": [0, 42, 100, 109, 110], "ast_build": 32, "ast_builder_util": 31, "ast_transform": [0, 34, 100], "ast_transformer_util": [0, 31, 34, 36, 100], "astresolv": 35, "astronom": 99, "asttransform": [31, 100, 109], "asttransformercontext": [31, 32, 36], "astyp": 94, "atan2": [50, 114, 121], "atol": [63, 64, 113], "atom": [50, 70, 71, 100, 101, 109, 116], "atomic_access": 70, "atomic_add": [50, 101, 121], "atomic_and": [50, 121], "atomic_max": [50, 102, 121], "atomic_min": [50, 102, 121], "atomic_mul": 50, "atomic_oper": 107, "atomic_or": [50, 121], "atomic_sub": [50, 121], "atomic_xor": [50, 121], "attach": [60, 90], "attempt": [93, 106, 112], "attribut": [8, 35, 91, 107, 111], "attributeref": 120, "augassign": 31, "augment": 121, "augmented_assign": 107, "augmented_assignment_stmt": 120, "augop": 120, "augtarget": 120, "author": 105, "auto": [0, 101, 104], "autoapi": 0, "autocomplet": 110, "autodiff": [41, 44, 45, 58, 60], "autodiffmod": 81, "autom": 100, "automat": [44, 49, 58, 72, 73, 89, 91, 95, 96, 99, 100, 101, 103, 105, 106, 109, 112, 116, 117, 120, 121, 124], "automatic_differenti": 107, "auxiliari": 99, "avail": [48, 49, 70, 101, 106, 107, 113, 116, 124], "averag": [94, 105, 117], "avg": [71, 117], "avg_in_m": 71, "avoid": [99, 100, 104, 113, 121], "awai": 41, "awar": 96, "ax": [21, 41, 49, 58, 63, 64, 113], "axi": [49, 58, 68, 96, 99, 102, 105], "b": [8, 16, 21, 35, 45, 58, 60, 63, 64, 66, 77, 89, 91, 93, 94, 95, 96, 97, 98, 101, 104, 105, 110, 111, 113, 114, 116, 118, 120, 121, 123, 124], "b_numpi": 104, "back": [41, 49, 101, 103, 116, 120], "backend": [8, 48, 49, 70, 71, 72, 93, 94, 99, 102, 103, 104, 109, 110, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124], "backward": 101, "bad": 101, "ballot": [57, 122], "bandwidth": [96, 117], "bar": 8, "bar_tmpl": 8, "bar_tmpl_multiple_arg": 8, "barrier": 56, "base": [5, 31, 32, 33, 37, 38, 40, 45, 49, 50, 60, 68, 93, 96, 99, 101, 102, 106, 107, 110, 111, 117], "baseclass": 89, "baselin": 105, "bashrc": 103, "basic": [31, 94, 95, 96, 97, 109, 110, 111, 113, 114, 115, 116], "basic_verifi": 100, "becaus": [49, 89, 91, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 116, 117, 120, 124], "beckend": 100, "becom": [96, 99, 100, 101, 102, 105], "been": [89, 97, 99, 100, 120, 124], "befor": [49, 91, 94, 95, 97, 99, 100, 101, 102, 109, 111, 112, 116, 117, 118, 120], "begin": [3, 106, 107, 111, 116, 120, 124], "behav": [100, 116], "behavior": [33, 49, 97, 99, 100, 101, 116, 119, 120, 121], "behaviour": 100, "behind": 104, "being": [45, 94, 95, 97, 99, 106, 111, 112], "believ": 104, "belong": [111, 120], "below": [41, 45, 49, 89, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 111, 113, 116, 120, 121], "benchmark": [104, 112, 116], "bend": 101, "benefit": [91, 124], "besid": [95, 100, 102, 105], "best": [93, 96, 116], "best_fit": 21, "best_pop": 21, "better": [96, 100, 101, 102, 104, 105], "between": [49, 60, 68, 95, 96, 97, 99, 104, 105, 106, 108, 110, 111, 116, 120, 124], "beyond": [99, 110], "bfloat16": 93, "bicgstab": 63, "biconjug": 63, "bidirect": 97, "bigger": 103, "bilerp": 25, "bin": 93, "bin_value_typ": 93, "binari": [50, 93, 107, 109], "bind": [3, 5, 96, 120], "binop": 31, "bit": [40, 49, 50, 58, 84, 85, 95, 97, 99, 102, 103, 104, 106, 114, 121, 124], "bit_and": 110, "bit_cast": 50, "bit_shr": [50, 121], "bit_struct_type_build": 40, "bit_vector": [49, 93], "bitcod": 119, "bitmask": [58, 110], "bitpack": 40, "bitpackedfield": [40, 93], "bitwis": 96, "bl": 49, "blindli": 96, "block": [0, 20, 49, 51, 55, 96, 97, 99, 102, 103, 110, 111, 112, 118, 119, 120, 122], "block1": [18, 99], "block2": [18, 99], "block_dim": [49, 110, 116, 122], "block_dim_adapt": 49, "block_id": 49, "block_indici": 102, "block_loc": [49, 116], "block_num_triangl": 102, "block_siz": 5, "blockidx": 105, "blog": 107, "blue": 77, "bodi": [100, 101, 109, 110, 116, 120], "body_a": 120, "body_b": 120, "body_c": 120, "body_d": 120, "bond": 101, "bool": [3, 9, 31, 32, 35, 40, 41, 44, 45, 49, 58, 60, 63, 66, 71, 85, 116, 117, 119], "boolean": [31, 84, 93, 99, 124], "boolop": 31, "boost": 104, "borrow": [92, 95], "both": [8, 44, 45, 50, 66, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 107, 111, 120, 121, 124], "bottleneck": 117, "bottom": [102, 120], "bound": [98, 99, 120], "boundar": 93, "boundari": [43, 49, 93, 94, 107, 120], "boundary_type_cast_warn": 31, "box": 99, "box_siz": 95, "brace": 120, "bracket": [94, 120], "branch": [99, 118, 120, 121, 123], "break": [31, 32, 49, 101, 104, 106, 116], "break_in_serial_for": [49, 116], "break_stmt": 120, "brick": 105, "bridg": 102, "brief": [89, 106], "bring": 104, "broadcast": [50, 68, 120, 124], "broadcast_first": 56, "broke": 101, "brute": 101, "bu": 103, "buffer": [3, 30, 96, 97, 101, 116], "buffer_bind": [3, 5], "buffer_bind_ti": 5, "buffer_format": 43, "bufferbind": [3, 5], "bufferbindingtyp": 5, "bug": [100, 124], "buggi": [100, 111], "build": [31, 49, 65, 90, 100, 105, 111, 113, 115, 117], "build_annassign": 31, "build_assert": 31, "build_assign": 31, "build_assign_annot": 31, "build_assign_bas": 31, "build_assign_unpack": 31, "build_attribut": 31, "build_attribute_if_is_dynamic_snode_method": 31, "build_augassign": 31, "build_binop": 31, "build_bool_op": 31, "build_boolop": 31, "build_break": 31, "build_byt": 31, "build_cal": [31, 100], "build_call_if_is_builtin": 31, "build_call_if_is_typ": 31, "build_compar": 31, "build_const": 31, "build_continu": 31, "build_dict": 31, "build_dictcomp": 31, "build_expr": [31, 100], "build_extslic": 31, "build_for": 31, "build_formattedvalu": 31, "build_from_ndarrai": 65, "build_functiondef": [31, 100], "build_grouped_ndrange_for": 31, "build_if": 31, "build_ifexp": 31, "build_index": 31, "build_joinedstr": 31, "build_keyword": 31, "build_list": 31, "build_listcomp": 31, "build_mesh_for": 31, "build_modul": [31, 100], "build_nam": 31, "build_nameconst": 31, "build_namedexpr": 31, "build_ndrange_for": 31, "build_nested_mesh_for": 31, "build_num": 31, "build_pass": 31, "build_range_for": 31, "build_return": 31, "build_scen": 24, "build_slic": 31, "build_star": 31, "build_static_and": 31, "build_static_for": 31, "build_static_or": 31, "build_stmt": [31, 100], "build_str": 31, "build_struct_for": 31, "build_subscript": 31, "build_tupl": 31, "build_unaryop": 31, "build_whil": 31, "builder": [31, 32, 65, 115, 120], "buildercontext": 31, "built": [8, 64, 65, 95, 96, 100, 101, 106, 110, 113, 114, 124], "builtin": 120, "byte": [31, 93, 99, 116], "c": [21, 33, 35, 40, 41, 50, 58, 73, 89, 91, 93, 96, 97, 98, 102, 103, 104, 105, 106, 115, 116, 117, 120, 121, 124], "c0": 102, "c1": 102, "c2": 102, "c_with_boundari": 25, "cach": [49, 96, 97, 111, 119], "cache_hit_r": 70, "cache_read_onli": 49, "calc": 89, "calc_norm": 24, "calcul": [68, 83, 91, 94, 96, 101, 104, 105, 111, 113, 124], "call": [31, 33, 41, 44, 45, 49, 50, 51, 58, 66, 68, 71, 73, 89, 90, 91, 92, 94, 95, 99, 100, 101, 102, 103, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 124], "call_func": 89, "call_inc": 89, "call_with_warn": 103, "callabl": [44, 60, 120], "calle": 111, "caller": 111, "camera_lookat": 24, "camera_posit": 24, "camera_up": 24, "can": [7, 8, 30, 33, 40, 41, 44, 45, 58, 60, 68, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124], "cannot": [30, 38, 50, 89, 90, 91, 93, 97, 99, 100, 101, 102, 105, 110, 111, 118, 120, 124], "canonicalize_formatted_str": 31, "cap": 8, "capabl": [96, 124], "capac": 93, "captur": 101, "card": [116, 119], "care": [93, 99], "carri": 89, "case": [71, 93, 94, 95, 96, 97, 98, 99, 100, 110, 111, 112, 113, 116, 119, 120, 121, 124], "cast": [45, 46, 50, 94, 120, 121], "categor": [120, 124], "categori": [93, 113, 124], "caus": [100, 101, 105, 110, 111, 119], "caveat": 99, "cdiv": 114, "ceil": [50, 99, 121], "cell": [48, 49, 58, 93, 94, 99, 110], "cell_categori": 93, "cell_category_typ": 93, "center": [30, 60, 80, 90, 99, 124], "central": 96, "certain": [95, 97, 105, 110, 124], "cexp": 114, "cf": 25, "cfg": 119, "chain": [101, 120], "chainqueen": 101, "challeng": [99, 105, 110], "chanc": 93, "chang": [33, 93, 94, 96, 97, 99, 100, 101, 104, 105, 106, 111, 116, 120, 124], "channel": [77, 96], "chapter": 120, "char": 77, "characterist": 117, "cheap": 116, "check": [35, 41, 49, 58, 66, 97, 100, 101, 102, 104, 109, 110, 113, 119, 124], "check_act": 18, "check_loop_var": 32, "check_matmul": 47, "check_transpos": 47, "check_type_match": 9, "checker": [0, 34], "checker_fn": 47, "checker_func": 47, "chi": 49, "child": [58, 99, 110], "children": [58, 99, 110], "choos": [100, 111, 116, 119], "chosen": [118, 121], "chunk": [58, 99], "chunk_siz": [58, 99], "circuit": [120, 121], "circumst": [105, 118], "circumv": 110, "cl": [9, 44, 60, 89], "clamp": [68, 89, 114], "class": [38, 44, 71, 92, 108, 109, 110, 117, 123, 124], "classifi": 116, "classmethod": [45, 60, 89], "claus": 120, "clean": 116, "clear": [71, 73, 99, 101, 105, 110, 117], "clear_data": 99, "clear_kernel_profiler_info": [71, 117], "clear_list": 110, "clear_profile_info": 73, "clear_scoped_profiler_info": 73, "clearli": 120, "clip": 21, "clip_onli": 21, "clockwis": [68, 102], "clog": 114, "clone": [94, 97], "close": [50, 92, 96, 116], "closest": 96, "cloth": 113, "clutter": [123, 124], "clz": 68, "cmp_lt": 110, "cmul": 114, "co": [50, 101, 106, 121], "coars": 116, "code": [41, 44, 45, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 110, 111, 112, 116, 117, 118, 119, 120, 123, 124], "codegen_offloaded_task": 110, "codegen_stat": 110, "coeff": 14, "coeffici": [63, 64, 113], "col": [45, 46, 105], "col_major": 65, "colamd": 113, "collect": [70, 71, 117], "collect_kernel_profiler_metr": [70, 71], "colon": 120, "color": [77, 96, 102, 105], "color_pair": 25, "colorfield": 25, "coloum": 107, "column": [45, 49, 70, 80, 91, 95, 101, 110, 114, 124], "com": [103, 107], "combin": [91, 93, 123], "come": [91, 93, 100, 101, 105, 110, 111, 114, 116, 120, 124], "comma": 120, "command": [104, 117], "comment": 77, "commit": 103, "common": [41, 68, 89, 93, 100, 101, 109, 113, 116, 117], "common_op": [0, 42, 45], "commonli": [41, 93, 94, 105, 107, 114, 124], "commun": 105, "comp_for": 120, "comp_if": 120, "comp_it": 120, "comp_oper": 120, "compar": [31, 68, 93, 96, 101, 104, 105, 106], "comparison": [116, 124], "compat": [44, 99, 106], "compil": [7, 38, 41, 44, 49, 94, 95, 96, 101, 104, 105, 106, 110, 112, 116, 117, 118, 120, 121, 123, 124], "complement": [93, 105], "complet": [49, 51, 100, 103, 104, 105, 112, 124], "complex": [41, 96, 97, 99, 106, 110], "complex_sqr": 106, "complic": [35, 97, 101, 105], "compon": [58, 93, 95, 110, 120], "compos": [99, 124], "compound": [41, 82, 95, 121], "compound_stmt": 120, "compound_typ": [0, 58, 82], "comprehens": [117, 120, 124], "compress": 93, "compris": [93, 95, 107, 120, 124], "compulsori": 111, "comput": [7, 41, 48, 50, 66, 68, 71, 73, 85, 91, 96, 97, 101, 104, 105, 106, 110, 111, 112, 113, 114, 116, 117, 120, 121, 123], "computation": [97, 112], "compute_ax": 113, "compute_dy_dx": 101, "compute_i": 101, "compute_laplacian": 123, "compute_lc": 104, "compute_matrix_vector": 113, "compute_shad": 107, "compute_u": 101, "computer_sci": 107, "concaten": [45, 96], "concept": [92, 104, 110, 111], "concern": [96, 116], "conclud": [100, 111], "conclus": 116, "concurr": [106, 111, 112], "cond": [41, 50, 56, 100, 121], "cond_a": 120, "cond_b": 120, "cond_c": 120, "cond_expr": 121, "condit": [41, 50, 91, 100, 111, 113, 118], "conditional_express": 120, "conduct": [91, 114, 120], "conf": 117, "configur": [49, 71, 99, 116, 117, 119, 124], "conflict": 124, "confus": 110, "congratul": 106, "conjug": [63, 64, 113], "conjunct": 71, "connect": 105, "consid": [95, 96, 97, 99, 103, 106, 109, 110, 111, 120, 121, 123, 124], "consider": 45, "consist": [45, 95, 98, 101, 110, 120], "consol": 117, "const": [105, 110, 123], "const_begin": 3, "const_end": 3, "constant": [31, 50, 68, 91, 100, 109, 110, 120, 123], "constexpr": [41, 91, 110], "constrain": [60, 68], "construct": [9, 40, 45, 68, 93, 96, 97, 106, 107, 116, 120], "constructor": 97, "consult": [116, 124], "consum": 99, "consumpt": [105, 117], "contain": [0, 8, 30, 45, 49, 58, 60, 80, 90, 91, 95, 99, 100, 101, 102, 106, 107, 110, 111, 112, 116, 120, 124], "contemporari": 116, "content": [97, 116, 118], "context": [5, 31, 71, 101, 111, 116], "contextattribut": 3, "contigu": [94, 97], "continu": [31, 32, 45, 96, 100, 111, 112], "continue_stmt": 120, "continuum": 95, "contrast": [94, 124], "contribut": 101, "control": [49, 96, 97, 101, 105, 110, 119, 120, 121], "conv1d": 105, "conv_typ": 48, "conveni": [90, 92, 97, 105, 106, 120], "convent": [0, 7, 102, 124], "converg": [63, 64, 101], "convers": [45, 94, 97, 100], "convert": [30, 40, 45, 60, 68, 90, 93, 99, 100, 102, 118, 124], "convtyp": 48, "coord": 105, "coord_to_tile_pixel": 105, "coordin": [45, 50, 77, 102, 108, 116], "copi": [40, 41, 45, 49, 50, 60, 91, 94, 97, 100, 101, 102, 111], "copy_1d": 91, "copy_2d": 91, "copy_2d_to_3d": 21, "copy_3d": 91, "copy_field_a_to_b": 21, "copy_field_to_pop": 21, "copy_from": [40, 60, 97], "copy_pop_to_field": 21, "copy_scalar": 94, "copy_vector": 94, "core": [71, 93, 96, 104, 106, 109, 110, 111], "corner": [98, 102], "correct": [71, 94, 95, 97, 100, 101], "correspond": [30, 50, 58, 60, 94, 96, 102, 105, 106, 107, 110, 111, 113, 116, 119, 120], "corresponding_numpy_typ": 77, "cosin": 50, "cost": [97, 99, 110, 116], "costli": 99, "could": [58, 71, 99, 103, 105], "count": [71, 117], "count_prim": 104, "count_stat": 110, "counter": [68, 71, 89, 110], "counterpart": [94, 97, 105, 121], "coupl": 99, "cover": [106, 111], "cpow": 114, "cpp": 100, "cpu": [44, 49, 71, 73, 93, 94, 95, 97, 99, 100, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 115, 116, 117, 119, 120, 121, 124], "cpu_max_num_thread": [49, 100, 119], "cpuplac": [40, 45, 60, 94], "crash": [103, 119], "creat": [0, 5, 45, 60, 65, 66, 77, 80, 89, 93, 94, 95, 97, 99, 100, 104, 105, 110, 111, 113, 114, 115, 116, 120, 123, 124], "create_vari": 32, "creation": [97, 124], "critic": 119, "cross": [45, 46, 68], "cse": 109, "csr": 65, "ctx": [10, 31, 36, 100], "ctx_attrib": 3, "cuda": [44, 49, 58, 70, 71, 89, 93, 94, 97, 99, 100, 102, 104, 106, 107, 111, 113, 115, 116, 117, 119, 120, 121, 122, 124], "cuda_driv": 103, "cuda_error_invalid_devic": 103, "cuda_stack_limit": 111, "cuda_visible_devic": 119, "cudaplac": [40, 45, 60, 94], "cudastreamsynchron": 102, "cull": 102, "cumbersom": 123, "cumemadvis": 103, "cupti": [70, 71, 117], "cuptimetr": [70, 71], "cur": 25, "cur_posi": 25, "cur_posx": 25, "curl": 25, "curlfield": 25, "current": [48, 49, 58, 71, 92, 97, 99, 100, 101, 102, 111, 112, 113, 116, 117, 118, 120, 122], "current_loop_scop": 32, "current_scop": [32, 33], "custom": [45, 60, 90, 101, 106, 119], "customiz": 49, "cycl": [109, 120], "d": [5, 41, 45, 49, 68, 89, 91, 93, 96, 97, 98, 101, 102, 115, 116, 117, 123], "data": [3, 5, 9, 30, 40, 41, 45, 48, 50, 58, 60, 65, 77, 80, 82, 83, 84, 90, 91, 95, 100, 103, 106, 108, 109, 111, 112, 114, 115, 121, 122, 123], "data64": 49, "data_ori": [44, 89, 92], "data_rac": 107, "data_rang": 89, "data_typ": 77, "dataclass": [60, 92, 108], "dataorientedclass": 89, "datatyp": [5, 40, 41, 45, 85, 100], "de": 21, "de_crossov": 21, "de_loop": 21, "deactiv": [41, 49, 58], "deactivate_al": [58, 99], "deactivate_all_snod": [41, 99], "dead": 109, "deal": [92, 107, 120], "dealloc": 99, "debug": [49, 50, 101, 117, 119, 120], "decent": 105, "decid": 119, "decim": 124, "decl_argpack_arg": 43, "decl_matrix_arg": 43, "decl_ndarray_arg": 43, "decl_ret": 43, "decl_rw_texture_arg": 43, "decl_scalar_arg": 43, "decl_sparse_matrix": 43, "decl_struct_arg": 43, "decl_texture_arg": 43, "declar": [41, 45, 91, 96, 99, 101, 124], "decompos": 102, "decomposit": 101, "decor": [8, 9, 44, 60, 90, 92, 100, 101, 104, 106, 107, 109, 111, 124], "decreas": 116, "dedent": 120, "deduc": 96, "deep": [91, 97, 111], "deepcopi": 97, "deeper": 91, "def": [8, 41, 44, 45, 49, 50, 60, 65, 70, 71, 73, 79, 83, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124], "default": [33, 43, 49, 50, 71, 90, 93, 94, 96, 97, 100, 101, 116, 117, 119, 120, 121], "default_cpu_block_dim": 119, "default_cupti_metr": 71, "default_fp": [49, 114, 119, 124], "default_gpu_block_dim": 119, "default_ip": [49, 114, 119, 124], "defin": [5, 32, 41, 44, 45, 50, 58, 70, 71, 82, 85, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 105, 107, 110, 111, 112, 113, 114, 118, 120, 124], "definit": [89, 93, 96, 97, 120, 124], "degrad": [96, 116], "degre": [68, 102, 114], "delet": 99, "deliv": [93, 100], "delta": [68, 109], "demo": [104, 113], "demo_traceback": 100, "demonstr": [96, 97, 101, 104, 116, 124], "demot": [109, 121], "denot": [94, 96, 97, 102, 121, 124], "dens": [41, 49, 58, 89, 93, 96, 97, 99, 101, 102, 103, 106, 110, 116], "densiti": 99, "depend": [41, 50, 95, 96, 103, 104, 105, 106, 110, 112, 114, 120], "deploi": 106, "deprec": 99, "depth": [105, 111], "dereferenc": 99, "deriv": [5, 32, 101, 116], "descend": 99, "descendant_snod": 99, "descent": 101, "describ": [92, 96, 99, 120], "descriptor": 96, "design": [70, 92, 99, 105, 106, 108, 111, 116, 119, 121], "desir": [40, 45, 60, 68, 96, 106, 121, 124], "desktop": 97, "despit": 96, "destin": 116, "destroi": [49, 89, 96], "detail": [45, 48, 58, 70, 85, 93, 97, 99, 100, 102, 104, 105, 110, 116, 117, 119, 120, 123, 124], "detect": [49, 97, 100, 101], "determin": [41, 45, 46, 50, 68, 91, 100, 106, 114, 116, 120, 121, 124], "determinist": 100, "dev": [48, 49, 110, 119], "develop": [90, 91, 105, 107, 110, 111, 115, 116, 117], "deviatedclass": 89, "devic": [40, 45, 60, 71, 94, 97, 99, 103, 104, 105, 107, 110, 111, 117, 119], "device_memory_fract": 103, "device_memory_gb": [103, 119], "device_util": [70, 71], "devicecap": [5, 81], "devicecapabilitylevel": 3, "diag": [45, 46], "diagnos": [0, 76], "diagon": [45, 113], "diagram": [99, 105], "dict": [3, 5, 8, 30, 31, 35, 60, 80, 120], "dict_comprehens": 120, "dict_displai": 120, "dict_item": [30, 60], "dict_kei": 94, "dictcomp": 31, "dictionai": 60, "dictionari": [30, 60, 80, 94, 95], "did": [94, 105], "die": 109, "differ": [45, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 113, 116, 120, 121, 124], "differenti": [92, 109, 110], "differentiable_program": 107, "differentiable_task": 101, "difficult": [99, 100, 105], "diffmpm": 101, "difftaichi": 58, "dig": 93, "digit": [102, 124], "dim": [21, 45, 46, 47, 79], "dim_lt": 47, "dimens": [45, 49, 58, 65, 68, 80, 91, 95, 96, 97, 106, 107, 120], "dimension": [41, 45, 49, 94, 95, 96, 97, 98, 99, 100, 105, 106, 107, 120], "dir": 100, "direct": [45, 49, 68, 93, 99, 102, 116, 120], "directli": [41, 44, 60, 68, 95, 97, 99, 100, 102, 105, 106, 107, 109, 110, 111, 116, 120, 124], "directori": [106, 116, 119], "dirichlet": 93, "disabl": [100, 103, 104, 116, 119], "discard": [91, 116, 118, 119], "discarded_after_first_return": 118, "discourag": 124, "discov": 116, "discret": 94, "discuss": [94, 96, 99, 109, 111, 116, 124], "disk": [49, 111, 116], "dispatch": [3, 5], "displai": [95, 117, 124], "dist_imag": 10, "distanc": [68, 96], "distinct": 124, "distinguish": [30, 92, 107, 109, 110, 111, 121], "distribut": [44, 50, 99, 103, 110], "disturb": 96, "dive": 106, "diverg": 25, "divf": 25, "divfield": 25, "divid": [50, 93, 104, 111], "dividend": 50, "divis": [65, 114, 121], "divisor": 50, "do": [8, 66, 93, 95, 96, 97, 99, 101, 106, 110, 111, 112, 114, 116, 121], "do_a": 41, "do_b": 41, "do_check": 47, "do_someth": [96, 97], "do_sqrt_al": 100, "doc": [31, 41, 44, 49, 50, 58, 70, 71, 79, 107], "document": [0, 94, 100, 105, 106, 117, 120, 124], "doe": [49, 94, 97, 99, 101, 105, 106, 110, 111, 112, 116, 118, 120, 121], "domain": [41, 50, 58, 91, 104, 105, 106, 120], "don": [33, 58, 103, 110], "done": [100, 101, 123, 124], "dop": 92, "dot": [45, 46, 68], "douban": 103, "doubl": [77, 84, 110], "down": 102, "download": 103, "downward": 49, "dp": 104, "dr": [0, 4, 5], "drain": 105, "drastic": [110, 116], "draw": [14, 15], "draw_contour": 21, "drawback": 110, "drawn": 50, "dst": [100, 102], "dt": [45, 65, 96, 101], "dti_with_cuda_toolkit": 117, "dtype": [3, 5, 30, 40, 41, 43, 45, 46, 49, 50, 53, 60, 64, 65, 66, 80, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 113, 121, 122, 124], "dtype_id": 3, "dtype_nam": 3, "du": 101, "dual": [40, 41, 45, 58, 60, 101], "due": [38, 71, 100, 102, 112, 124], "dump": 116, "dump_json_data_model": 9, "duplic": 97, "dure": [33, 38, 41, 91, 93, 100, 101, 103, 110, 111, 116, 117, 120, 124], "dv": 101, "dx": [68, 101, 123], "dx11": 49, "dx12": 49, "dx_0": 101, "dx_1": 101, "dx_i": 101, "dy": [68, 101, 123], "dy_dx": 101, "dynam": [58, 101, 103, 105, 111], "dynamic_index": [119, 120], "dz": 68, "e": [35, 44, 45, 46, 49, 50, 68, 70, 91, 97, 98, 100, 101, 102, 103, 107, 109, 110, 115, 116, 120, 121, 123], "each": [40, 41, 45, 49, 50, 58, 60, 68, 90, 91, 93, 94, 95, 96, 97, 99, 101, 103, 105, 106, 107, 110, 113, 116, 117, 119, 120, 121, 122], "earliest": 116, "eas": [105, 124], "easi": [95, 101, 105, 110, 111, 120], "easier": [97, 120], "easiest": [93, 101], "easili": [105, 106, 110], "edg": [48, 68, 102], "edge0": 68, "edge1": 68, "effect": [50, 93, 99, 102, 106, 116, 121], "effici": [45, 48, 97, 99, 101, 102, 105, 106, 113, 116], "effort": 92, "either": [41, 44, 45, 90, 93, 95, 96, 97, 101, 106, 111, 120], "elaps": [71, 73], "elect": 56, "eleg": 124, "element": [31, 40, 41, 44, 45, 50, 58, 60, 66, 68, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 110, 113, 114, 115, 116, 119, 120, 121, 124], "element_shap": [3, 5, 45], "element_typ": [43, 45, 48], "elif": 120, "elimin": [97, 106, 109, 119], "els": [41, 104, 106, 111, 113, 118, 120, 121], "elsewher": 94, "elt": 31, "emb": 90, "embed": [104, 105, 106, 110, 120], "emiss": 119, "emit": 109, "emphas": [114, 120], "emploi": [99, 116], "empti": [43, 45, 95, 99, 105, 120], "en": 107, "enabl": [41, 49, 60, 71, 90, 91, 96, 100, 101, 105, 116, 117, 119, 124], "enable_fallback": 49, "enable_project": 91, "encapsul": [105, 113], "enclos": 120, "enclosur": 120, "encompass": 124, "encount": [100, 119], "encourag": [96, 105], "end": [3, 8, 68, 90, 96, 100, 101, 110, 111, 112, 120], "energi": 101, "enforc": [101, 120], "engag": 111, "engin": [101, 115, 124], "enhanc": [111, 116], "enorm": 92, "enough": [93, 102], "ensu": 111, "ensur": [93, 94, 99, 100, 104, 112, 114, 117, 119, 124], "enter": 116, "entir": [96, 99, 116, 119], "entri": [30, 45, 49, 60, 106, 107, 111, 117], "enum": [0, 5, 32, 82], "enumer": [5, 32, 110], "environ": [8, 76, 103, 105, 106, 116, 119, 120], "ep": [45, 46, 105], "equal": [45, 49, 68, 77, 91, 93, 94, 113, 116, 120, 121], "equat": [96, 113], "equip": [96, 97, 101], "equival": [41, 50, 66, 68, 71, 90, 91, 95, 96, 99, 101, 106, 113, 116, 119, 120, 121, 124], "eras": 119, "err_nvgpuctrperm": 117, "error": [38, 49, 89, 94, 95, 97, 100, 101, 103, 105, 106, 111, 118, 119, 120, 124], "error_access_var_outside_for": 118, "error_access_var_outside_if": 118, "error_func_no_return": 118, "error_kernel_no_return": 118, "error_kernel_no_return_annot": 118, "error_non_static_in": 118, "error_return_inside_non_static_if": 118, "especi": [99, 100], "essenti": [96, 110], "eta": 68, "etc": [71, 82, 117], "euclidean": 68, "euler": [68, 93], "eulersimparam": 25, "evalu": [41, 100, 101, 107, 111, 118, 120, 121], "even": [45, 50, 91, 94, 95, 97, 99, 104, 105, 110, 120], "evenli": [93, 110], "event": [92, 110], "everi": [33, 91, 96, 97, 101, 119, 120], "everyth": 92, "exact": 93, "exactli": [93, 110, 113, 120], "exampl": [8, 30, 35, 40, 41, 44, 45, 49, 50, 60, 65, 68, 70, 71, 73, 79, 80, 83, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124], "example_ascii": 16, "example_cast": 124, "exce": [116, 120], "excel": 105, "except": [0, 30, 42, 45, 50, 95, 100, 101, 114, 120, 124], "exchang": [97, 122], "exclud": [49, 112, 120], "excluded_paramet": 32, "exclus": [98, 116, 121], "exclusive_add": 56, "exclusive_and": 56, "exclusive_max": 56, "exclusive_min": 56, "exclusive_mul": 56, "exclusive_or": 56, "exclusive_xor": 56, "execut": [38, 49, 60, 71, 91, 97, 99, 103, 104, 106, 107, 109, 110, 111, 112, 116, 117, 119, 120], "exist": [33, 93, 95, 110, 120], "exit": [71, 103, 116], "exit_cod": 113, "exp": [50, 85, 93, 121], "expand": [91, 111], "expans": 111, "expect": [35, 47, 102, 124], "expens": 110, "experi": [100, 116], "experiment": [0, 28, 102, 117], "explain": [93, 95, 96, 99, 101, 102, 105, 109, 111, 113, 114, 116, 120], "explan": [45, 99, 101, 104], "explicit": [33, 96, 121], "explicitli": [58, 95, 97, 112, 120, 124], "explor": 116, "expon": [40, 50, 85], "exponenti": [50, 114], "export": [76, 77, 94, 103, 119], "export_ascii": 77, "export_fram": 77, "export_frame_ascii": 77, "expos": 110, "expr": [0, 31, 37, 40, 42, 45, 60], "express": [31, 35, 37, 41, 50, 100, 111, 121], "expression1": 120, "expression2": 120, "expression_list": 120, "expression_stmt": 120, "extarr": 5, "extend": [102, 120], "extens": [48, 49, 105, 106, 121, 124], "extent": 114, "extern": [102, 108, 124], "extfunc": 49, "extra": [95, 96, 97, 105, 106, 114], "extract": 68, "extslic": 31, "ey": 68, "f": [5, 9, 49, 58, 60, 94, 95, 98, 104, 105, 113, 115, 124], "f1": [21, 60, 95], "f16": [5, 84, 124], "f1_onli": 21, "f2": [60, 95], "f32": [5, 8, 22, 25, 30, 41, 44, 45, 49, 50, 60, 65, 66, 68, 70, 71, 73, 80, 84, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 105, 109, 110, 111, 113, 115, 116, 117, 119, 121, 124], "f64": [5, 50, 83, 84, 107, 114, 115, 119, 121, 124], "f_0d": 95, "f_1d": 95, "f_2d": 95, "f_3d": 95, "f_i": 101, "face": [48, 77], "face_channel": 77, "face_data": 77, "face_data_typ": 77, "face_typ": 77, "facilit": 111, "fact": 99, "factor": [66, 85, 93, 99, 113], "fail": [38, 94, 100, 103], "faith": 105, "fall": [49, 103, 105], "fals": [20, 32, 40, 41, 44, 45, 49, 52, 60, 66, 90, 93, 100, 104, 116, 119, 120, 121], "familiar": [91, 92, 96, 106, 120], "far": 96, "fast": [105, 116, 119, 121], "fast_math": 119, "faster": [94, 96, 101], "fault": 100, "favorit": 102, "fb": 89, "fb1": 96, "fb1_snode_tre": 96, "fb2": 96, "fb2_snode_tre": 96, "feasibl": [50, 116], "featur": [90, 96, 104, 105, 106, 114, 115, 116], "fed": [97, 109], "feed": 97, "feel": [100, 101, 103], "fem": 101, "fem99": 101, "fetch": 96, "few": [49, 99, 101, 114, 116, 120, 124], "fewer": [94, 105], "field": [0, 3, 5, 8, 41, 42, 44, 45, 48, 49, 58, 60, 63, 66, 70, 71, 73, 89, 90, 97, 98, 99, 100, 101, 103, 104, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124], "field_a": 123, "field_b": 123, "field_copi": 102, "field_dict": 60, "field_dim": 3, "field_len": 102, "field_nam": 3, "field_shap": 94, "fieldattribut": [3, 5], "fieldexpress": 40, "fieldsbuild": [89, 96], "fifo": 116, "fig": 21, "figur": [99, 110], "file": [8, 32, 65, 76, 77, 100, 101, 106, 116, 117, 119], "filenam": [48, 65, 78, 106], "filepath": 8, "fill": [10, 40, 41, 45, 46, 49, 58, 60, 65, 66, 71, 83, 97, 99, 100, 105, 106, 113, 115, 116, 117], "fill_c4_0_kernel_1_range_for": 117, "fill_imag": 95, "fill_rgba": 17, "fill_vector": 95, "filter": [94, 120], "final": [89, 96, 109, 116], "find": [93, 103, 105, 111], "find_min": 21, "fine": [49, 95, 105, 111, 116], "finer": 105, "finish": [93, 97, 112], "first": [40, 45, 48, 49, 50, 65, 68, 89, 94, 95, 97, 99, 102, 104, 106, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 124], "fit": [21, 92, 93], "five": 93, "fix": [85, 96, 99, 103, 105], "fixed_type_a": 93, "fixed_type_b": 93, "fixed_type_c": 93, "flag": 99, "flat": 96, "flat_list": 31, "flatten": [45, 96, 110], "flexibl": [92, 96, 101, 105, 106, 107, 114], "flexibli": [96, 99, 110], "flip": 105, "float": [23, 24, 25, 40, 41, 45, 48, 49, 50, 60, 68, 70, 71, 77, 80, 82, 84, 85, 94, 95, 97, 99, 100, 101, 105, 106, 111, 112, 114, 116, 119, 120, 121, 124], "float16": 84, "float32": [21, 45, 60, 84, 97, 100], "float64": [84, 107, 124], "float_type_a": 93, "float_type_b": 93, "float_type_c": 93, "floatnumb": 120, "floor": [50, 68, 105, 114, 121], "flow": 110, "fluid": [99, 113], "fly": 110, "fmt": 5, "fn": [44, 47], "focu": [99, 105], "fold": 109, "folder": 8, "follow": [3, 5, 50, 58, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124], "foo": [8, 35, 44, 49, 50, 91, 97, 102, 106, 110, 111, 116, 120, 122, 124], "foo_data": 16, "footprint": 93, "for_stmt": 120, "forbidden": 101, "forc": [45, 91, 101, 119, 123], "form": [101, 105, 114], "formal": 111, "format": [3, 5, 30, 48, 60, 65, 70, 71, 73, 81, 93, 95, 99, 117, 120], "formattedvalu": 31, "former": [105, 111, 120], "formula": [96, 101], "fors": [49, 93, 110, 116], "forward": [33, 41, 45, 60, 97, 109], "found": [33, 38, 101, 103, 116, 118, 119, 120], "four": [94, 95, 96, 101, 114, 119, 120], "frac": [25, 85, 93], "fract": 68, "fraction": [68, 85, 93, 99, 103], "frame": 100, "framework": [94, 105], "free": [63, 100, 101, 103, 120], "freeli": 101, "frequent": [49, 94, 96, 99, 100, 101, 106, 108, 114, 115, 119], "frexp": 50, "friendli": 99, "from": [5, 9, 30, 32, 35, 40, 45, 50, 58, 60, 65, 68, 71, 73, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 120, 121, 124], "from_dr_field": 5, "from_dr_graph": 5, "from_dr_kernel": 5, "from_dr_metadata": 5, "from_index": 48, "from_json_graph": 3, "from_json_metadata": 3, "from_modul": 4, "from_numpi": [40, 45, 60, 94, 97, 102], "from_paddl": [40, 60], "from_torch": [40, 60, 94, 109], "frontend": [109, 118], "full": [72, 91, 93, 99, 100, 113], "fulli": [96, 111, 118], "fun": [100, 123], "func": [12, 26, 31, 32, 33, 41, 44, 60, 70, 89, 90, 96, 100, 101, 102, 104, 106, 107, 110, 111, 116, 118, 124], "func0": 100, "func1": 100, "func2": 100, "func3": 100, "func_1": 101, "func_2": 101, "func_2_c78_0": 101, "func_break_rule_2": 101, "func_broke_rule_1": 101, "func_equival": 101, "function": [8, 30, 33, 45, 67, 89, 91, 92, 97, 99, 100, 101, 104, 105, 108, 109, 110, 112, 116, 118, 119, 120, 122, 123, 124], "functiondef": 31, "fundament": [106, 107, 116], "further": [68, 96, 97, 104, 105, 106, 109, 116], "furthermor": [99, 116, 120, 124], "fusion": 105, "futur": [49, 97, 116, 118, 120], "g": [16, 35, 44, 77, 91, 95, 98, 100, 101, 102, 103, 109, 110, 115, 116, 120, 121], "gain": 116, "gap": [96, 116], "gather": [95, 105, 110], "gb": [103, 119], "gbbbbbbb": 96, "gc": 5, "gcrc": 5, "gdb": 119, "gdb_trigger": 119, "geforc": 116, "gener": [0, 5, 32, 44, 49, 58, 60, 68, 85, 91, 92, 95, 96, 97, 99, 100, 101, 109, 111, 116, 117, 119, 120, 124], "generate_meta": 48, "generatorexp": 31, "generic_visit": 33, "get": [38, 40, 44, 45, 48, 58, 71, 93, 95, 99, 101, 102, 104, 105], "get_addr": 58, "get_area": 90, "get_data_type_s": 5, "get_decor": 31, "get_dist_transform_imag": 10, "get_error_loc": 33, "get_for_loop_target": 31, "get_kernel_profiler_total_tim": 71, "get_list_shap": 47, "get_member_field": 60, "get_pos_info": 32, "get_position_as_numpi": 48, "get_predefined_cupti_metr": [70, 71], "get_relation_access": 48, "get_relation_s": 48, "get_ret": 38, "get_runtim": 110, "get_scalar_field": 45, "get_shap": 45, "get_type_for_kernel_arg": 43, "get_var_by_nam": 32, "gfxruntime140": [0, 6], "ggui": 119, "ghost": 102, "github": [100, 101, 116], "give": [103, 104, 105, 110, 116], "given": [10, 35, 45, 68, 80, 99, 104, 111, 124], "glanc": 105, "gle": 49, "glimps": 105, "global": [35, 49, 70, 71, 95, 106, 108, 116, 121, 123], "global_access": 70, "global_op_atom": [70, 71], "global_thread_idx": [49, 53], "global_var": 32, "global_vari": 107, "globaltmp": 5, "glsl": [67, 68, 106, 124], "go": [40, 58, 106, 110], "goal": 99, "goe": [97, 99, 120], "good": [96, 105], "got": 47, "gpu": [7, 44, 49, 93, 97, 99, 103, 104, 105, 106, 107, 109, 111, 112, 117, 119], "gpuid": 119, "grad": [40, 45, 60], "grad_for": 101, "grad_replac": 101, "grad_x": 15, "gradient": [41, 44, 58, 63, 64, 101, 113], "gradient_desc": 13, "grai": 95, "grain": [49, 116], "granular": 105, "graph": [0, 3, 4, 5, 8, 28, 110], "graphdata": 3, "graphic": [58, 82, 85, 99], "graphs_json": 4, "gravit": 95, "gray_scale_imag": 95, "great": 93, "greater": [68, 121], "green": [77, 99], "grei": 96, "grid": [0, 55, 95, 101, 113, 116], "grid2particl": 99, "grid_dim": 110, "grid_siz": 5, "group": [41, 49, 58, 89, 93, 95, 96, 97, 100, 102, 105, 116, 120, 124], "grow": 103, "gtx": 111, "guarante": [92, 100, 111], "guard": 45, "guess": [63, 64, 113], "guid": [88, 116], "h": [94, 95, 103, 110, 115], "ha": [40, 41, 45, 50, 60, 89, 91, 93, 95, 96, 97, 99, 100, 101, 105, 109, 110, 111, 112, 114, 116, 118, 120, 124], "half": 50, "halv": 93, "hand": [63, 64, 66, 97, 101, 111, 113, 120, 124], "handi": [101, 110], "handl": [93, 96, 100, 105, 111, 112, 116, 123, 124], "happen": [99, 103, 104, 109, 110, 111, 120], "hard": [92, 97, 99, 101, 105, 109, 119], "harder": 105, "hardli": 105, "hardwar": [93, 96, 103, 105, 117], "hash": 58, "have": [9, 40, 45, 49, 50, 51, 60, 68, 77, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 109, 110, 111, 113, 114, 116, 118, 119, 120, 121, 124], "he": 105, "header": [70, 71, 120], "heat": 95, "heavy_check_mark": [106, 121, 124], "height": [60, 95, 102], "hello": [100, 108], "hello256": 100, "hello256world256": 100, "help": [90, 91, 93, 96, 104, 109, 110, 116, 117, 119, 123], "helper": [5, 35, 102], "hemispheric_sampl": 24, "henc": [50, 93, 96, 99, 107, 109], "here": [91, 93, 95, 96, 99, 100, 101, 102, 104, 111, 113, 114, 115, 116, 120, 121, 122, 123, 124], "herebi": 96, "hermit": 68, "hide": 41, "hierarch": [73, 109, 110, 117], "hierarchi": [96, 110], "high": [21, 49, 93, 96, 99, 100, 104, 105, 106, 107, 109, 111, 116, 122, 124], "higher": [49, 95, 96, 99, 110, 124], "highest": 124, "highli": [49, 96], "highlight": 110, "hint": [49, 91, 94, 97, 106, 107, 109, 120, 124], "histogram": 93, "hold": [31, 45, 58, 97, 116, 119, 124], "homogen": 68, "hood": [41, 101], "hope": 31, "horizont": 105, "host": [60, 73, 107, 111, 116, 117], "host_accessor": 40, "how": [41, 45, 49, 93, 94, 96, 99, 100, 104, 105, 106, 116, 124], "howev": [30, 90, 92, 93, 94, 96, 97, 99, 100, 101, 102, 105, 110, 111, 112, 118, 120, 124], "html": [31, 107], "http": [31, 41, 44, 49, 50, 58, 70, 71, 79, 82, 85, 103, 107], "httpsconnect": 103, "huge": 110, "hybrid": 92, "hyperbol": 50, "hyperelast": 101, "i": [8, 9, 18, 25, 31, 33, 35, 38, 40, 41, 43, 44, 45, 49, 50, 58, 60, 63, 64, 65, 66, 68, 70, 71, 72, 73, 77, 83, 85, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124], "i10": 93, "i16": [5, 84, 103, 111, 124], "i21": 93, "i32": [5, 18, 21, 41, 44, 45, 49, 50, 84, 89, 91, 93, 94, 95, 97, 98, 99, 100, 102, 104, 105, 107, 109, 110, 111, 113, 116, 118, 119, 120, 121, 122, 124], "i64": [5, 50, 84, 93, 119, 121, 124], "i8": [5, 84, 124], "iarg": 5, "ib": 58, "id": [31, 49, 77, 94, 106, 110], "idea": [93, 99], "ident": [45, 68, 90, 96, 99, 105, 111], "identifi": [8, 100, 116, 117, 119], "if_nod": 32, "if_stmt": 120, "ifexp": 31, "ignor": [100, 117, 119], "ij": [41, 49, 93, 96, 99, 116], "ijk": [49, 93], "ijkl": 49, "ijl": 49, "ik": 49, "ikl": 49, "il": 49, "ill": 113, "illustr": [93, 94, 95, 96, 99, 100, 116], "imag": [10, 76, 95, 96, 105], "image_buff": 24, "image_height": 105, "image_pixel": [24, 105], "image_pixel_to_coord": 105, "image_resolut": 24, "image_width": 105, "imgfil": 10, "immedi": [100, 116, 124], "immut": 101, "impact": 96, "imper": 101, "imperative_program": 107, "impl": [0, 42, 100, 110], "implement": [40, 45, 60, 96, 99, 100, 101, 104, 109, 114, 116, 118, 120, 124], "impli": [89, 124], "implicit": [50, 94, 96, 109, 113, 120, 121], "implicitli": [63, 99, 105, 116, 118, 124], "import": [30, 45, 50, 68, 70, 71, 73, 89, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 114, 115, 117, 119, 120], "importantli": 49, "importerror": 103, "improv": [91, 97, 101, 104, 105, 123, 124], "inact": 99, "inc": [44, 89], "incid": 68, "includ": [49, 60, 99, 100, 106, 107, 109, 110, 111, 113, 114, 117, 118, 120, 124], "include_method": 60, "include_ndim": 60, "inclus": 116, "inclusive_add": 56, "inclusive_and": 56, "inclusive_max": 56, "inclusive_min": 56, "inclusive_mul": 56, "inclusive_or": 56, "inclusive_xor": 56, "incomplet": [97, 110], "incorrect": [71, 94, 100, 101], "increas": [91, 104, 111, 116], "increment": 89, "incur": [97, 100, 105, 109], "ind": [21, 105, 121], "indent": [32, 120], "independ": [111, 120], "index": [3, 31, 41, 45, 56, 58, 77, 91, 94, 95, 96, 100, 105, 110], "index_select": 105, "indic": [16, 31, 41, 45, 47, 53, 58, 60, 68, 77, 92, 94, 95, 96, 98, 99, 100, 101, 106, 111, 113, 114, 116, 119, 120, 124], "individu": [40, 93, 97, 101], "ineffici": 97, "inf": [50, 68], "infer": [97, 109, 116, 120], "infin": 68, "infinit": 111, "infinitesim": 95, "info": [40, 66, 113, 119], "inform": [58, 76, 93, 95, 99, 100, 102, 106, 110, 111, 113, 114, 116, 117, 119, 120, 122, 124], "infrastructur": [91, 110], "inherit": [5, 90], "init": [45, 49, 70, 71, 73, 89, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 124], "init_field": [25, 102], "initi": [14, 15, 45, 49, 63, 64, 95, 97, 100, 104, 110, 111, 113, 114, 119], "initramf": 117, "inlin": 91, "inner": [91, 95], "input": [10, 41, 45, 49, 50, 58, 65, 68, 92, 94, 97, 101, 105, 113, 114, 121], "insert": [110, 120], "insid": [40, 44, 58, 91, 94, 97, 99, 107, 116, 118, 120], "inside_taichi_scop": 100, "inspect": [43, 60], "inspir": [90, 120], "instal": [100, 117], "instanc": [30, 45, 49, 58, 60, 71, 80, 89, 90, 93, 96, 97, 100, 101, 104, 106, 109, 110, 111, 114, 124], "instance_": 107, "instant": 96, "instanti": [8, 49, 91, 92, 97, 110, 114, 124], "instantli": 96, "instead": [33, 49, 60, 95, 99, 100, 101, 102, 110, 111, 113, 116, 121, 124], "instruct": [44, 94, 106, 109, 120], "int": [3, 5, 10, 25, 31, 32, 40, 41, 45, 48, 49, 50, 58, 60, 63, 64, 65, 68, 77, 80, 82, 85, 93, 94, 95, 96, 99, 104, 105, 110, 111, 119, 121, 124], "int16": 84, "int32": [84, 94, 100, 104, 107, 111, 116, 124], "int64": [84, 124], "int8": 84, "intact": 96, "integ": [45, 50, 84, 85, 95, 99, 100, 104, 106, 111, 114, 119, 120, 124], "integr": [49, 50, 121], "intellig": 101, "intend": [35, 116], "intens": [97, 104, 106, 107, 111, 112], "interact": [97, 107, 108, 110, 120, 124], "interchang": 119, "interest": 99, "interleav": [96, 110], "intermedi": [99, 101, 104, 105, 119], "intermediate_represent": 107, "intern": [49, 96, 99, 116], "interop": 97, "interpol": 68, "interpret": [97, 102, 106], "interv": [49, 50, 113], "intervent": 97, "intrins": [108, 116], "introduc": [96, 105, 111, 116, 120, 124], "introduct": [97, 99], "intuit": 100, "inv_squar": 111, "invalid": 103, "invalid_sum": 94, "invers": [45, 46, 50, 68, 121], "invert": 121, "invis": 120, "invoc": [101, 109, 111], "invok": [44, 96, 97, 106, 109, 110, 111, 112], "involv": [99, 101, 102, 104, 105, 112, 115], "io": 76, "ir": [49, 100, 109, 119], "irpass": 110, "irregular": [48, 110], "irregularli": 99, "irrelev": 100, "is_act": [58, 99], "is_arrai": 3, "is_external_func": 31, "is_group": 31, "is_in_non_static_control_flow": 32, "is_in_static_for": 32, "is_in_static_scop": 32, "is_int_const": 47, "is_integr": 87, "is_jit_evalu": 3, "is_json_data_model": 9, "is_kernel": 32, "is_prim": [60, 104], "is_real": 87, "is_real_funct": [32, 44], "is_scalar": 3, "is_sign": 87, "is_stat": 32, "is_static_assign": 31, "is_storag": 3, "is_tensor": 87, "is_tupl": 31, "is_var_declar": 32, "is_zero_s": 90, "ish": 41, "isinf": 68, "isnan": 68, "issu": [99, 100, 101, 102, 104, 105, 110, 116, 117, 119], "item": [30, 60, 116, 120], "iter": [31, 41, 63, 64, 96, 97, 99, 101, 102, 104, 105, 106, 116, 118, 120], "iter_express": 120, "ith": 99, "its": [41, 45, 49, 50, 60, 71, 77, 89, 92, 94, 95, 97, 99, 100, 102, 104, 105, 106, 110, 111, 116, 120, 124], "itself": [96, 105, 110, 111, 116], "ivec2": [68, 105, 114], "ivec3": [68, 114], "ivec4": [68, 114], "j": [3, 5, 18, 25, 41, 43, 45, 49, 50, 91, 93, 94, 95, 96, 99, 101, 104, 106, 110, 112, 113, 116, 121, 123], "jacobian": 101, "jacobian_fwd": 12, "jacobian_rev": 12, "ji": 41, "jit": [44, 97, 103, 106, 110, 117], "jit_evaluator_0_kernel_0_seri": 117, "jit_evaluator_xxx": 117, "jk": 49, "jkl": 49, "jl": 49, "joinedstr": 31, "json": [3, 5, 9], "json_data_model": 9, "just": [41, 93, 95, 97, 99, 101, 106, 110, 114], "jvp": 101, "k": [49, 50, 91, 94, 95, 96, 97, 99, 103, 104, 105, 106, 110, 113, 115, 120], "keep": [45, 95, 99, 102, 106, 111, 113, 116], "keep_dim": 45, "kei": [3, 8, 30, 60, 77, 94, 99, 104, 110, 118, 120], "kernel": [3, 5, 7, 8, 9, 30, 41, 44, 45, 49, 50, 51, 58, 65, 70, 71, 73, 79, 83, 89, 90, 91, 92, 93, 95, 96, 99, 100, 104, 105, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "kernel_1": 111, "kernel_2": 111, "kernel_arg": 32, "kernel_argu": [0, 42], "kernel_fn": 8, "kernel_forward": 105, "kernel_impl": [0, 42, 100], "kernel_metr": [0, 69], "kernel_nam": 3, "kernel_profil": [0, 69, 70, 117, 119], "kernel_with_nested_struct_arg": 111, "kernelargu": 43, "kernelattribut": [3, 5], "kernelprofil": [70, 71], "kernelprofilerqueryresult": 71, "kernelsimplicityastcheck": 33, "kerneltempl": 8, "key_datum": 120, "key_datum_list": 120, "key_p": 8, "keygen": 8, "keyword": [31, 100, 120, 124], "khrono": 107, "kind": [101, 111, 116, 120], "kk": 105, "kl": 49, "know": [58, 89, 93, 95, 105], "knowledg": [96, 105], "known": [106, 111, 124], "kt": 8, "kwarg": [8, 30, 41, 45, 47, 49, 60, 80, 106], "l": [13, 19, 49, 89, 95, 101, 110, 113, 119], "l1": 116, "l1tex__t_set_accesses_pipe_lsu_mem_global_op_atom": [70, 71], "lack": [71, 94, 112], "laid": [41, 45, 93, 99], "lang": [0, 28, 70, 71, 79, 100, 101, 110], "languag": [92, 96, 100, 104, 105, 106, 108, 114, 116, 124], "lanhaidong": 100, "laplac": 94, "laplacian": [113, 123], "larg": [65, 91, 95, 96, 99, 102, 104, 105, 107, 110, 111, 114], "larger": [93, 95, 99, 101], "largest": 50, "last": [99, 100, 110, 116], "later": [8, 94, 99, 101, 109, 116], "latest": 111, "latter": [105, 107, 109, 111, 120], "launch": [51, 71, 97, 105, 111, 116, 117], "launch_grid": 5, "launchgrid": 5, "layer": [96, 100, 110, 116], "layout": [41, 45, 58, 60, 65, 81, 94, 95, 97, 99, 101, 105, 106, 110], "lazili": 91, "lazy_du": [58, 101], "lazy_grad": [58, 101], "lb": 21, "lc": 104, "ldlt": 113, "lead": [95, 96, 100, 102, 104, 109, 110, 124], "leaf": [99, 110], "learn": [101, 105, 106, 110], "learning_r": 14, "least": [96, 111, 116, 120], "leav": [93, 95, 96], "left": [93, 97, 98, 99, 102, 115, 120, 121, 124], "lego": 105, "len": [91, 100], "len_a": 104, "len_b": 104, "length": [45, 58, 65, 68, 77, 95, 96, 99, 104, 120, 124], "lengthi": 100, "lerp": 25, "less": [45, 66, 68, 93, 99, 104, 105, 116, 121], "let": [49, 92, 93, 96, 99, 101, 104, 106, 109, 111, 120, 124], "letter": 124, "level": [40, 44, 58, 96, 99, 102, 105, 110, 117, 119, 120, 122, 124], "leverag": [99, 106], "lexic": 120, "lexical_scop": 107, "lh": [9, 124], "li": 106, "librari": [31, 68, 91, 97, 105, 109], "lie": [68, 102], "life": [108, 110, 120], "lightweight": 124, "like": [30, 31, 35, 41, 45, 49, 50, 60, 65, 68, 90, 95, 96, 97, 99, 100, 102, 105, 107, 110, 111, 115, 116, 120, 124], "limit": [47, 93, 99, 111, 115, 116], "linalg": [0, 28, 113, 115], "line": [89, 99, 100, 101, 105, 106, 111, 117, 120, 124], "linear": [63, 64, 65, 66, 68, 96, 108, 115], "linearoper": [63, 113], "lineno_offset": 32, "link": [92, 99, 105], "linux": [103, 106], "list": [3, 4, 5, 30, 31, 32, 40, 41, 45, 47, 49, 50, 58, 60, 71, 91, 99, 101, 117, 119, 121], "list_assign": 118, "list_comprehens": 120, "list_displai": 120, "list_without_assign": 118, "listcomp": 31, "listgen": [5, 110], "listgen_demo": 110, "liter": [100, 102, 124], "littl": [92, 95, 96], "llt": [66, 113], "llvm": [72, 99, 109, 110, 111], "load": [8, 40, 71, 96, 97, 102, 116], "load_imag": 10, "load_meta": 48, "local": [49, 96, 111, 121, 123, 124], "local_scop": 32, "local_storag": 107, "local_vari": 107, "locat": [58, 68, 95, 99, 106, 110], "lod": 43, "log": [50, 63, 121], "log2": [68, 114], "log_level": 119, "logarithm": [50, 68, 114], "logic": [47, 96, 105, 120, 124], "long": [68, 104, 105, 110, 116, 120], "longer": [91, 92, 95, 96, 98, 99, 116], "look": [95, 102, 113, 119], "loop": [31, 41, 44, 49, 58, 94, 95, 96, 99, 104, 105, 109, 110, 111, 120], "loop_attribut": 32, "loop_config": [49, 93, 100, 104, 106, 116, 120, 122], "loop_over_1d": 95, "loop_over_2d": 95, "loop_scop": 32, "loop_scope_guard": 32, "loop_statu": 32, "loop_unrol": 107, "loop_var": 32, "loopindexstmt": 110, "loopscopeattribut": 32, "loopscopeguard": 32, "loopstatu": 32, "lose": 100, "loss": [12, 14, 96, 100, 101, 119, 124], "loss2": 101, "lot": 105, "low": [21, 49, 93, 96, 105, 110, 117, 124], "lower": [49, 68, 98, 102, 109, 110, 119, 120, 124], "lru": 116, "lu": 113, "lunar": 41, "m": [8, 45, 47, 65, 68, 80, 91, 93, 94, 95, 96, 100, 105, 107, 114, 115, 116, 117, 124], "m_expr": 120, "machin": [104, 105, 106, 107, 111, 119], "maco": [100, 106], "made": [89, 93, 94, 107, 111], "magnitud": [96, 101], "mai": [33, 60, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 116, 117, 119, 120, 124], "main": [10, 11, 13, 14, 15, 19, 24, 50, 106, 111], "mainli": [97, 120], "maintain": [101, 116], "mainten": 102, "major": [45, 110], "major_ord": 107, "make": [92, 93, 94, 97, 100, 101, 103, 104, 105, 106, 110, 111, 118, 120, 121, 124], "make_list": 19, "manag": [94, 97, 101, 105, 106, 110], "mandatori": [111, 118], "mani": [41, 91, 100, 102, 105, 109, 111, 118, 120], "manipul": [92, 97, 110, 111], "manipulation_in_kernel": 101, "manner": [99, 121], "manual": [97, 99, 101, 106, 112, 121], "map": [35, 48, 97, 110, 116, 122], "map_coord": 105, "mapping_a": 110, "mapping_b": 110, "mark": 44, "mark_no_more_for_loop": 33, "mark_no_more_stmt": 33, "marker": 9, "market": 65, "mask": [56, 57], "mask_": 107, "mass": [95, 99, 113], "massiv": 44, "mastrix": 65, "mat": [46, 68, 95, 124], "mat2": [68, 97, 114], "mat2x2": 80, "mat3": [24, 68, 97, 106, 111, 114], "mat4": [68, 114], "mat4x3i": 124, "mat_i": 46, "mat_x": 46, "match": [45, 49, 58, 94, 97, 103, 116, 119, 124], "match_al": [57, 122], "match_ani": [57, 122], "materi": [24, 95, 110], "math": [0, 24, 28, 41, 50, 90, 95, 97, 99, 101, 105, 106, 111, 113, 119], "mathemat": [68, 95, 113], "mathimpl": [0, 67], "matmul": 46, "matplotlb": 102, "matplotlib": 110, "matric": [30, 45, 50, 60, 66, 67, 68, 91, 95, 99, 106, 107, 113, 114, 115, 120], "matrix": [0, 30, 37, 40, 41, 42, 50, 58, 60, 62, 63, 64, 65, 66, 68, 80, 82, 90, 94, 97, 98, 99, 100, 101, 105, 108, 111, 116, 119, 120, 121, 124], "matrix_op": [0, 42], "matrix_ops_util": [0, 42], "matrix_ti": 41, "matrixfield": [45, 58], "matrixfree_cg": [0, 62], "matrixfreebicgstab": 63, "matrixfreecg": [63, 113], "matrixndarrai": 45, "matrixtyp": [41, 43], "matter": [94, 97, 105], "matvec": 63, "matvec_kernel": 63, "max": [45, 46, 50, 68, 71, 89, 102, 104, 115, 116, 117, 121], "max_element_num": 48, "max_in_m": 71, "max_it": [21, 64, 113], "max_num_bit": [40, 58, 93], "max_num_triplet": [65, 113, 115], "max_radiu": 10, "max_valu": [85, 93], "maxim": [97, 100, 116], "maximum": [40, 45, 50, 58, 63, 64, 65, 85, 99, 111, 116], "maxit": [63, 113], "mean": [94, 96, 99, 100, 101, 102, 110, 111, 112, 114, 116, 120, 121, 124], "meant": [33, 35], "measur": [112, 117], "mechan": [95, 100, 101, 103, 120, 124], "meet": [94, 120], "mem_advis": 103, "mem_offset_in_par": 3, "mem_sync": 53, "member": [9, 30, 40, 45, 60, 71, 80, 89, 90, 92, 93, 94, 95, 107, 111, 114, 123, 124], "member_dict": 43, "memfenc": 54, "memor": 109, "memori": [41, 45, 58, 71, 72, 89, 93, 94, 97, 99, 101, 102, 103, 105, 106, 110, 116, 117, 119], "memory_barri": 56, "memory_profil": [0, 69], "mention": [90, 93, 101, 109, 116, 119, 120, 121, 124], "mere": [9, 96, 99], "mesh": [0, 42, 49, 120], "mesh_build": 49, "mesh_loc": 49, "mesh_patch_idx": 49, "mesh_ptr": 48, "meshelementtyp": 48, "meshfor": 5, "meshinst": 48, "meshrelationtyp": 48, "meshtaichi": 48, "messag": [41, 77, 95, 100, 103, 120], "meta": [5, 41, 49, 79, 111, 120], "meta_data": 3, "metadata": [3, 4, 5, 120], "metadata_json": 4, "metal": [8, 49, 99, 100, 106, 109, 116, 119, 120, 121, 124], "metaprogram": [41, 100, 108, 109, 120, 123], "method": [33, 35, 45, 60, 63, 64, 66, 68, 90, 92, 95, 96, 99, 100, 112, 113, 114, 116, 119, 121, 123, 124], "metri": 70, "metric": [70, 71, 107, 117], "metric_list": 71, "microsoft": 103, "might": [97, 101, 103, 110, 116, 120], "millisecond": 105, "min": [45, 46, 50, 68, 71, 89, 102, 116, 117, 121], "min_el": 94, "min_in_m": 71, "min_radiu": 10, "mind": [106, 111, 113], "minim": [111, 116, 117], "minimum": [45, 50, 117], "mirror": 103, "misc": [0, 42, 100, 110], "mismatch": [38, 97], "misus": 100, "mix": 68, "ml": 99, "mmwrite": 65, "mod": [50, 68, 121], "mode": [41, 45, 49, 50, 60, 70, 71, 100, 103, 109, 119, 120], "model": [9, 49, 99, 101, 105, 120], "modern": [96, 99], "modif": [33, 94, 105], "modifi": [93, 101, 112, 117, 121], "modprob": 117, "modul": [0, 7, 62, 67, 76, 82, 95, 106, 108, 111, 112, 117, 124], "modular": [44, 92], "module_path": 4, "modulo": 68, "molecular": 101, "more": [35, 45, 48, 49, 58, 85, 89, 90, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 110, 111, 113, 114, 116, 117, 119, 120, 122, 123, 124], "moreov": [96, 105, 111], "most": [41, 49, 93, 94, 95, 96, 97, 100, 106, 112, 120, 124], "mostli": [107, 110, 116], "motiv": 110, "mouse_addspe": 25, "mouse_interact": 25, "mouseradiu": 25, "move": [91, 97, 98, 107], "move_particl": 17, "mpm": [99, 101], "mpm3d": 116, "mpm_lagrangian_forc": 101, "msg": [41, 47, 100], "much": [93, 96, 99, 104, 105, 110], "mul": 101, "multi": [49, 95, 96, 97, 106, 107, 109, 111, 120], "multidimension": 120, "multipl": [45, 93, 96, 97, 99, 100, 101, 107, 109, 110, 111, 114, 115, 117, 119, 120, 121, 124], "multipli": [93, 101, 124], "must": [8, 9, 41, 45, 50, 58, 60, 68, 71, 90, 91, 92, 93, 94, 95, 99, 101, 102, 106, 107, 110, 111, 113, 114, 116, 117, 118, 120, 121, 124], "mutabl": 99, "mutat": [97, 101], "mv": [105, 113], "my_kernel": [111, 123], "my_spher": 60, "myclass": 89, "myclass1": 102, "n": [10, 11, 13, 14, 15, 19, 40, 41, 44, 45, 46, 49, 58, 60, 65, 68, 71, 80, 83, 89, 91, 93, 94, 95, 96, 99, 100, 101, 102, 104, 106, 107, 110, 111, 113, 115, 116, 120, 124], "n_loss": [12, 101], "n_param": [12, 101], "naiv": [100, 110], "name": [3, 5, 8, 30, 31, 32, 33, 35, 38, 41, 43, 45, 60, 65, 70, 71, 80, 94, 95, 96, 106, 109, 117, 119, 123, 124], "nameconst": 31, "namedargu": 5, "namedexpr": 31, "nameerror": 38, "namespac": 35, "nan": [50, 68], "nativ": [44, 92, 93, 99, 100, 101, 105, 106, 107, 111], "natur": [50, 116], "ndarrai": [5, 8, 10, 40, 41, 45, 60, 64, 65, 82, 83, 90, 94, 95, 102, 104, 105, 106, 108, 111, 113, 116, 120, 124], "ndarray_typ": [0, 82], "ndarrayaccess": 5, "ndarraytyp": [30, 83], "ndim": [5, 43, 45, 97, 105], "ndrang": [41, 94, 101, 105, 113, 116], "nearest": [50, 120], "nearest_non_static_if": 32, "nearest_object": 24, "nearli": 116, "necessari": [97, 112], "need": [38, 40, 41, 45, 58, 60, 70, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 116, 117, 120, 122, 124], "need_grad": 101, "needs_dual": [41, 45, 60, 101], "needs_grad": [41, 43, 45, 58, 60, 101], "neg": [50, 68, 98, 100, 101], "negat": 121, "neighbor": 94, "neighbor_idx_ptr": 48, "neither": [95, 119], "nest": [30, 60, 94, 96, 104, 106, 111, 120], "network": [101, 105], "neumann": 93, "neural": [101, 105], "never": [97, 100, 110, 116], "new": [5, 32, 41, 45, 50, 97, 107, 109, 110, 111, 120, 123, 124], "new_pf": 25, "new_qf": 25, "new_scop": 33, "new_vf": 25, "newli": 105, "newlin": 120, "next": [49, 71, 100, 112, 116, 120], "nich": 105, "ninja": 116, "nn": 105, "no_activ": 49, "noaccess": 5, "node": [31, 32, 33, 35, 58, 99, 100, 110], "node_target": 31, "nodetransform": 33, "nodevisitor": 33, "non": [50, 100, 116, 118, 121], "non_static_control_flow_guard": 32, "non_static_control_flow_statu": 32, "non_static_guard": 32, "non_static_if_guard": 32, "non_static_statu": 32, "none": [3, 5, 8, 9, 10, 31, 32, 33, 40, 41, 45, 47, 49, 50, 58, 60, 64, 65, 66, 70, 71, 79, 80, 85, 91, 95, 98, 100, 101, 102, 103, 110, 116, 120, 121], "nonetheless": 116, "nonstaticcontrolflowguard": 32, "nonstaticcontrolflowstatu": 32, "nonstaticifguard": 32, "nonzero": 66, "nor": 119, "noreturn": 32, "norm": [45, 46, 68, 101, 106, 119, 124], "norm_inv": [45, 46], "norm_sqr": [45, 46], "normal": [24, 32, 45, 46, 60, 68, 77, 99, 110, 111, 114, 116, 120], "not_buggi": 100, "not_test": 120, "notabl": 111, "notat": 120, "note": [8, 30, 41, 45, 93, 94, 95, 96, 97, 100, 103, 106, 110, 111, 113, 116, 117, 119, 120, 124], "noth": 120, "notic": [89, 102, 120], "now": [8, 70, 90, 93, 94, 96, 97, 99, 101, 102, 104, 105, 106, 115, 116, 120, 121, 124], "now_comp": 31, "now_if": 31, "np": [45, 94, 97, 102, 104, 111, 124], "np2ply": [0, 76], "np_po": 17, "nth": 116, "null": [99, 120], "num": [31, 89], "num_": 89, "num_channel": 3, "num_col": 65, "num_dimens": 43, "num_el": [70, 71], "num_fac": 77, "num_face_channel": 77, "num_patch": 48, "num_row": 65, "num_triplet": 115, "num_vertex_channel": 77, "num_vertic": [17, 77], "numba": 94, "number": [40, 45, 49, 50, 58, 63, 64, 65, 68, 77, 80, 85, 91, 95, 97, 99, 100, 101, 103, 104, 105, 107, 110, 111, 116, 117, 119, 120, 124], "number_coeff": 14, "numer": [99, 101, 107, 110, 124], "numpi": [40, 45, 48, 60, 64, 66, 77, 83, 95, 97, 99, 102, 104, 106, 107, 110, 111, 113, 124], "nutshel": [96, 97], "nvidia": [103, 107, 111, 116, 117, 119], "nvreg_restrictprofilingtoadminus": 117, "nx": 77, "nx1": 45, "nxn": 68, "nxt": 25, "ny": 77, "nz": 77, "o": [101, 106, 121, 124], "obei": 99, "obj": [24, 50], "object": [9, 24, 30, 31, 35, 41, 60, 90, 91, 96, 97, 100, 111, 120, 123, 124], "observ": [116, 117], "obtain": [99, 101, 113], "obviou": 93, "occasion": 100, "occupi": [40, 93, 99, 120], "occur": [94, 100, 101, 118, 120, 124], "octre": 99, "odop": [44, 92], "off": [63, 100, 119], "offer": [48, 92, 99, 106, 116, 117, 124], "offici": 99, "offlin": [49, 119], "offline_cach": [49, 116, 119], "offline_cache_cleaning_polici": 116, "offline_cache_file_path": [116, 119], "offline_cache_max_size_of_fil": 116, "offload": [109, 110, 111], "offset": [5, 41, 45, 48, 49, 56, 57, 58, 60, 105, 108, 116], "offset_in_mem": 3, "often": [41, 93], "ok": [100, 106, 118, 121], "ok_define_var_before_if": 118, "ok_return_inside_static_for": 118, "old": [50, 101, 105, 116, 121], "older": 111, "omit": 96, "onboard": 93, "onc": [95, 100, 101, 120, 124], "one": [41, 44, 45, 68, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 110, 114, 116, 119, 120, 121], "ones": [41, 45, 49, 97], "onli": [30, 31, 35, 40, 45, 48, 49, 58, 68, 70, 71, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 124], "onlin": 116, "onto": [104, 110], "oop": [92, 124], "op": [0, 31, 42, 120], "open": [50, 101], "opencv": 102, "opengl": [49, 71, 103, 106, 107, 109, 111, 114, 116, 119, 121, 124], "oper": [30, 37, 50, 62, 68, 93, 94, 95, 97, 99, 100, 102, 106, 108, 109, 111, 112, 115, 116, 122], "operand": [31, 50, 100, 120, 121], "optim": [49, 50, 91, 93, 96, 99, 101, 105, 117, 119], "option": [40, 41, 45, 49, 60, 77, 94, 96, 97, 100, 101, 105, 106, 116, 117, 119, 120, 124], "or_expr": 120, "or_test": 120, "order": [41, 45, 66, 68, 93, 96, 100, 101, 106, 111, 113, 116, 120, 124], "ordin": 103, "org": [31, 41, 44, 49, 50, 58, 70, 71, 79, 107], "organ": [92, 99, 116], "ori": 100, "orient": [90, 108, 123, 124], "oriented_design": 107, "oriented_program": 107, "origin": [68, 94, 97, 98, 111, 116, 124], "osdev": 107, "other": [30, 40, 45, 60, 68, 90, 93, 94, 95, 96, 97, 99, 103, 105, 106, 107, 110, 111, 112, 116, 119, 120, 124], "otherwis": [44, 45, 50, 66, 68, 94, 98, 99, 102, 104, 118, 120, 121], "our": [95, 96, 99, 104, 110, 113, 116], "out": [41, 45, 49, 58, 93, 94, 96, 99, 101, 103, 104, 105, 110], "outdat": 116, "outer": 45, "outer_product": [45, 46], "outermost": [100, 106, 116, 120], "outmost": 105, "output": [50, 90, 92, 99, 100, 101, 102, 105, 113, 115, 117, 119], "outrun": 105, "outsid": [99, 102, 107, 111, 118, 120, 124], "over": [41, 85, 96, 97, 99, 105, 106, 107, 110, 111, 117, 120, 124], "overal": 104, "overhead": [41, 91, 96, 97, 100, 102, 105, 110, 111, 116, 117], "overlap": [114, 116], "overrid": [33, 101], "overview": 106, "overwrit": 101, "overwritten": 101, "own": [93, 94, 106, 124], "owned_offset": 48, "p": [22, 24, 95, 97, 99, 110, 111, 120], "p_with_boundari": 25, "pack": [30, 40, 80, 93, 99], "pack_typ": 30, "packag": [103, 106, 110], "paddl": [40, 45, 60, 107, 119], "page": [0, 58, 96], "paint": 106, "pair": [30, 60, 95, 106, 120], "paper": [58, 93, 99, 101], "paradigm": 101, "parallel": [44, 49, 94, 99, 104, 105, 107, 109, 110, 111, 120, 121], "param": [12, 66, 68, 101], "paramet": [8, 30, 31, 35, 40, 41, 43, 44, 45, 49, 50, 58, 60, 63, 64, 65, 66, 68, 70, 71, 77, 79, 80, 85, 91, 93, 97, 99, 101, 120], "parametertyp": 5, "parent": [40, 58, 99, 110], "parenth_form": 120, "pars": 110, "parser": 110, "part": [68, 93, 97, 111, 120], "parti": 102, "partial": [101, 120], "partial_sum": 111, "particip": 41, "particl": [95, 99, 101], "particle_field": 95, "particular": [93, 96, 100, 120], "particularli": 99, "partit": 110, "pascal": [103, 111], "pass": [31, 50, 79, 89, 91, 94, 97, 100, 101, 106, 109, 118, 119, 124], "pass_stmt": 120, "passive_data_structur": 107, "patch": [49, 109], "patch_offset": 48, "path": [8, 77, 99], "pattern": [35, 96, 105, 116], "pdf": [58, 82, 85], "penalti": 100, "peopl": 110, "per": [33, 99, 110, 116], "percent": 116, "percentag": 99, "perform": [45, 49, 60, 68, 91, 93, 95, 96, 97, 99, 100, 101, 104, 106, 107, 109, 110, 111, 117, 119, 121, 122, 124], "period": 117, "permiss": 117, "persist": 100, "pf": 25, "ph": 105, "philosophi": 104, "physic": [91, 94, 95, 98, 99, 101, 116], "physical_index_posit": 110, "pi": [50, 68, 90, 113], "pick": 49, "piec": [77, 90, 110], "pinpoint": 101, "pip": [103, 106, 110], "pitch": 68, "pixel": [18, 20, 95, 96, 97, 99, 102, 105, 106], "pixel_shad": 107, "place": [40, 41, 45, 49, 58, 60, 89, 90, 93, 96, 99, 101, 103, 110, 111, 116, 120, 124], "place_po": 17, "placehold": 120, "placement": 96, "plai": 97, "plan": 104, "platform": [103, 106], "pleas": [49, 58, 70, 71, 89, 99, 100, 101, 102, 103, 106, 111, 113, 116, 120, 121], "plot_cirlc": 10, "ply": [16, 17, 77], "ply_supported_typ": 77, "plywrit": 77, "po": [17, 23, 24, 38, 95, 96, 99], "point": [49, 68, 84, 85, 89, 95, 99, 100, 106, 107, 111, 114, 119, 120, 121, 124], "pointer": [41, 49, 58, 103, 105, 110, 116, 123], "poisson": 113, "poli": 15, "polici": 116, "pool": [44, 49, 103, 119], "poor": [95, 104, 105], "poorer": 105, "pop": [21, 99], "popcnt": 68, "popul": [103, 116], "popular": 102, "portabl": 105, "pos_typ": 111, "posit": [48, 50, 68, 95, 99, 100, 101, 104, 105, 124], "positional_argu": 120, "positional_item": 120, "posititv": 68, "possibl": [92, 93, 97, 99, 103, 113, 119], "possibli": [100, 120], "post": 116, "potenti": [101, 105, 124], "pow": [50, 120, 121], "power": [96, 99, 110, 114, 121], "practic": [96, 102], "pre": [71, 89, 102, 103, 111, 116, 119], "prealloc": 116, "precis": [50, 84, 93, 97, 100, 114, 121, 124], "precompil": 105, "precondit": 47, "predefin": 93, "predic": [53, 57], "predict": 117, "prefer": [94, 101], "prefix_sum": 100, "preload": 116, "prepar": [106, 111], "prepend": 116, "prerequisit": [99, 117], "present": [96, 120, 121], "preserv": [50, 102], "pressfield": 25, "presspair": 25, "pressur": 113, "pressure_iter": 25, "pressure_pair": 25, "pressure_project": 25, "pressure_solv": 25, "pressure_step": 25, "prev_posi": 25, "prev_posx": 25, "prevent": [100, 101, 105, 119, 123], "previou": [99, 104, 107, 109, 116], "previous": [51, 96, 105, 107, 109, 116, 121], "primal": [58, 101], "primit": [50, 82, 93, 95, 114, 120], "primitive_typ": [0, 41, 45, 50, 58, 68, 80, 82], "principl": [96, 119, 120, 124], "print": [30, 41, 44, 45, 49, 50, 60, 65, 70, 71, 73, 76, 79, 89, 91, 94, 95, 97, 99, 101, 102, 103, 104, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124], "print_act": 99, "print_field_metadata": 91, "print_head": 77, "print_ir": [49, 110, 119], "print_kernel_profiler_info": [70, 71, 117], "print_matrix": 100, "print_memory_profiler_info": 72, "print_profile_info": 73, "print_scalar": 100, "print_scoped_profiler_info": [73, 117], "print_stat": 110, "print_triplet": [65, 115], "prior": 112, "priorit": [85, 124], "prioriti": 124, "pro": 107, "probabl": 93, "problem": [101, 102, 103, 116, 119], "problemat": 112, "proc": 97, "proce": 111, "proceed": 112, "process": [10, 60, 66, 94, 96, 97, 99, 100, 103, 105, 106, 111, 113, 116], "process_dictcomp": 31, "process_gener": 31, "process_if": 31, "process_listcomp": 31, "processor": [96, 110], "produc": [90, 100, 101, 116, 120], "produce_injected_arg": 9, "produce_injected_args_from_templ": 9, "product": [45, 68, 101, 105, 113, 120, 121], "profil": [0, 28, 108, 119], "profiling_metr": [70, 71], "program": [38, 49, 95, 96, 105, 106, 108, 109, 110, 111, 112, 115, 116, 117, 119, 120, 123, 124], "programm": [65, 99, 101, 116], "progress": 96, "prohibit": 119, "project": 97, "promot": 68, "prone": [101, 105], "propag": [41, 101], "proper": [96, 101, 105, 116], "proper_slic": 120, "properli": [97, 102, 111], "properti": [30, 33, 40, 45, 58, 60, 65, 89, 95, 100, 116], "proport": 105, "prove": 101, "provid": [5, 8, 35, 38, 41, 44, 49, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 124], "ptr": [43, 45, 58, 100], "ptype": 3, "public": [58, 82, 85], "pure": [105, 110], "purpos": [40, 90, 92, 94, 96, 100, 110, 119, 120], "push_argpack_arg": 43, "pw": 105, "py": [93, 99, 100, 101, 104, 106, 110, 116, 117, 119], "pybuf_en": 52, "pyfunc": 44, "pypi": [103, 106, 110], "pyplot": 102, "python": [8, 31, 35, 40, 41, 44, 45, 50, 58, 65, 68, 91, 92, 94, 95, 99, 100, 101, 106, 108, 109, 114, 117, 119, 120, 121, 123, 124], "python3": [103, 106, 117, 121], "pytorch": [45, 60, 95, 97, 102, 106, 107, 108, 111], "q": [93, 95, 110], "q_old": 93, "qf": 25, "quad": 77, "quadtre": 99, "qualiti": [93, 99], "quant": [0, 49, 82], "quant_arrai": [49, 58, 93], "quant_bas": 49, "quantaichi": [82, 85, 93], "quantit": 110, "quantiz": [40, 82, 85, 108], "queri": [58, 71, 120], "query_kernel_profiler_info": 71, "query_result": 71, "question": [108, 110], "queue": 112, "quick": [116, 120, 124], "quickli": 116, "quiet": [63, 113], "quotient": 121, "r": [10, 16, 77, 89, 95, 101, 111, 113, 116], "race": 100, "race_condit": 107, "radian": [50, 68], "radiu": [30, 60, 80, 90, 99, 124], "rai": [24, 100, 124], "rais": [32, 45, 49, 50, 65, 98, 100, 106, 111, 120], "ram": 105, "rand": 102, "rand_int": 21, "randint": 104, "random": [49, 50, 94, 95, 100, 101, 102, 104, 119], "random_se": [49, 119], "randomli": 95, "rang": [30, 41, 45, 49, 50, 65, 68, 70, 71, 83, 85, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 115, 116, 117, 118, 121, 122], "range_for": 110, "range_for_attrib": 3, "rangefor": 5, "rangeforattribut": 3, "rare": 112, "rate": 105, "rather": [95, 97, 105, 120], "ratio": 68, "ravel": 45, "raw": 31, "raw_arg": 31, "raw_div": [50, 121], "raw_keyword": 31, "raw_mod": [50, 121], "raw_str": 31, "raycast": 24, "raytrac": 24, "rd": 124, "re": [21, 66, 101, 103, 110], "read": [5, 85, 97, 100, 101, 102, 111, 116, 119, 121], "readabl": [94, 105, 111, 123], "reader": [96, 120], "readwrit": 5, "real": [44, 85, 93, 101, 104, 105, 106], "real_func": [26, 44, 111], "realli": 101, "reason": [38, 95, 99, 101], "reassign": [91, 124], "reboot": 117, "rebuild": 116, "recal": 101, "receiv": [91, 103, 111, 120, 121], "recent": [100, 116], "reciproc": 50, "recogn": [109, 111], "recommend": [45, 90, 91, 95, 96, 97, 99, 101, 110, 111, 116, 117, 118, 120, 124], "recompil": [111, 116], "recomput": 101, "reconstruct": 99, "record": [71, 73, 117], "rectangular": 45, "recurs": [41, 58, 99, 106, 120], "recycl": [58, 89, 96, 99, 106], "red": 77, "redistribut": 103, "redraw": 10, "reduc": [13, 91, 93, 111, 116, 119], "reduce_add": 56, "reduce_and": 56, "reduce_max": 56, "reduce_min": 56, "reduce_mul": 56, "reduce_or": 56, "reduce_xor": 56, "reduct": [70, 71, 116], "redund": 105, "ref": [84, 111], "refer": [30, 58, 79, 82, 88, 89, 94, 95, 97, 106, 107, 117, 122, 124], "reflect": [68, 114], "refract": 68, "refrain": 102, "regard": 99, "regardless": 116, "regener": 110, "region": 99, "regist": 109, "regress_raw": 14, "regular": [110, 124], "reinforc": 101, "reinterpret": 93, "reinterpret_cast": 50, "rel": [49, 99, 110], "rel_typ": 48, "relat": [49, 100, 116, 117], "relation_set": 48, "relax": 120, "releas": 103, "relev": 116, "reli": 119, "remain": [45, 96, 116, 120], "remaind": [50, 99, 121], "rememb": 116, "remov": [50, 99, 110, 111], "render_pixel": 102, "reorder": 66, "reorder_typ": 48, "repeat": [105, 116, 120], "repeatedli": 120, "repetit": 104, "replac": [99, 103, 106, 110, 116, 119, 120], "repo": [101, 104, 105, 116], "report": [100, 101, 103, 116, 119], "repositori": 111, "repres": [31, 40, 63, 66, 68, 93, 95, 99, 102, 104, 113, 114, 116, 120, 124], "represent": [3, 5, 68, 90, 113], "reproduc": [100, 105], "request": 96, "requir": [49, 50, 91, 93, 94, 96, 99, 100, 101, 103, 105, 106, 111, 116, 120, 121, 124], "require_vers": 49, "required_cap": [3, 5], "rerun": 104, "rescal": 58, "rescale_index": [58, 99], "rescu": 101, "research": 105, "reset": [49, 91, 119], "reshap": [45, 94], "reshape_list": 31, "resolut": [93, 99], "resolv": [35, 117], "resolve_to": 35, "respect": [89, 91, 92, 95, 96, 97, 100, 101, 102, 105, 106, 111, 116, 124], "respons": 117, "rest": [49, 96, 99, 120], "restart": [116, 119], "restor": [49, 99], "result": [30, 31, 35, 40, 45, 50, 60, 68, 71, 76, 90, 91, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 111, 112, 116, 117, 120, 121, 124], "ret": [5, 89, 91, 100, 102], "ret_attribs_vec_": 3, "retain": [71, 116], "retriev": [95, 107, 117, 119], "rets_bytes_": 3, "retun": 50, "return": [30, 31, 32, 33, 35, 40, 41, 44, 45, 48, 49, 50, 58, 60, 65, 66, 68, 70, 71, 80, 85, 89, 90, 91, 94, 96, 97, 99, 100, 104, 105, 106, 112, 114, 116, 121, 124], "return_data": 32, "return_inside_static_if": 118, "return_inside_static_if_no_return_outsid": 118, "return_stmt": 120, "return_tupl": 111, "returnedvalu": 32, "returnedvoid": 32, "returnstatu": 32, "returnvalu": 5, "reus": [91, 97, 101, 105, 107, 109, 110, 111], "reveal": 100, "revers": [41, 45, 60, 96, 101, 109], "revis": 96, "rework": 101, "rgb": [95, 96, 97, 105], "rgb_map": 97, "rgba": [17, 95, 114], "rgbrgbrgbrgb": 96, "rgbrgbrgbrgbrgbrgb": 96, "rggggggg": 96, "rh": 9, "rid": 105, "right": [50, 63, 64, 66, 98, 99, 102, 113, 115, 120, 121], "rightmost": 96, "ro": 124, "robot": 101, "role": 97, "roll": 68, "root": [5, 41, 45, 49, 50, 58, 93, 99, 101, 102, 103, 110, 116], "root_buffer_s": [3, 5], "root_id": 3, "rot_by_axi": 68, "rot_yaw_pitch_rol": 68, "rotat": [24, 68, 111], "rotation2d": 68, "rotation3d": 68, "round": [50, 121], "routin": [92, 114, 116], "row": [21, 45, 46, 49, 80, 91, 95, 101, 105, 124], "rraa": 114, "rrrrggggbbbb": 96, "rrrrr": 96, "rsqrt": [50, 121], "rtx": 116, "rtx3090": 105, "rule": [50, 90, 92, 94, 95, 97, 99, 106, 111, 114, 116, 118, 124], "run": [8, 41, 44, 49, 60, 90, 94, 100, 101, 102, 104, 105, 106, 110, 111, 116, 117, 119, 120], "run_formula_very_slow": 105, "run_test": 119, "runtim": [38, 41, 49, 58, 91, 93, 97, 99, 104, 105, 106, 107, 118, 120, 124], "runtime_op": [0, 42], "runtimeerror": [38, 100], "rw_textur": 86, "rwkv": 105, "rwtextur": 5, "s0": [110, 111], "s0root": 110, "s1": [110, 111], "s10": 101, "s1dens": 110, "s1pointer": 110, "s2": 110, "s2bitmask": 110, "s2dens": 110, "s3": 110, "s3place_x": 110, "s4": 110, "s4place_i": 110, "s5": 110, "s5dens": 110, "s6": 110, "s6place": 110, "s6place_z": 110, "sacrific": 104, "safe": [45, 97], "sai": [96, 97], "said": [91, 120], "sal": 121, "same": [40, 41, 45, 50, 60, 68, 77, 84, 90, 91, 93, 94, 96, 97, 99, 100, 105, 107, 109, 110, 111, 113, 117, 119, 120, 121, 124], "same_shap": 47, "sampl": [25, 50, 94], "sanity_check": 77, "sar": 121, "satisfi": [103, 117], "save": [8, 93, 99, 101, 102, 104, 105, 111, 116, 119], "savetxt": 102, "scaffold": 124, "scalar": [5, 30, 40, 41, 45, 50, 58, 60, 68, 90, 94, 97, 99, 100, 101, 107, 115, 116, 120, 121, 124], "scalar_field": 78, "scalarfield": [40, 45, 48, 60], "scale": [10, 23, 68, 70, 85, 93, 95, 96, 99, 104], "scatchpad": 49, "scenario": [91, 93, 95, 96, 97, 100, 105, 106, 113], "scheme": 92, "scienc": 115, "scientif": [101, 104, 113], "scope": [32, 35, 41, 44, 45, 50, 89, 90, 92, 94, 95, 99, 101, 106, 108, 110, 114, 116, 117, 119, 121, 124], "scope_": 107, "scoped_profil": [0, 69], "scopeguard": 33, "screen": 104, "script": [106, 109, 110], "sdfobject": 24, "sdk": 100, "search_num": 21, "second": [45, 49, 50, 65, 68, 71, 95, 99, 101, 102, 109, 110, 111], "section": [94, 96, 102, 104, 105, 106, 111, 116, 120], "see": [31, 41, 44, 45, 48, 58, 70, 79, 82, 94, 96, 99, 100, 101, 102, 104, 106, 107, 109, 110, 111, 114, 116, 119, 120, 121, 122, 123, 124], "seed": [12, 49, 101, 119], "seek": 116, "seem": 120, "seemless": 97, "seen": [97, 113], "segment": 100, "select": [50, 70, 96, 121], "self": [40, 44, 45, 58, 60, 89, 90, 100, 102, 123], "semant": [102, 116, 120], "semicolon": 120, "sens": 104, "sent": 112, "sep": 100, "separ": [94, 116, 120], "sequenc": [8, 104], "sequenti": [96, 106], "seri": [44, 105, 109, 111], "serial": [5, 8, 49, 104, 106, 111, 116, 120], "serialis": 100, "series_num": 77, "series_prefix": [16, 17], "series_prefix_ascii": 16, "serv": [30, 90, 92, 102, 105, 106, 107, 111, 119, 120, 124], "set": [41, 49, 50, 60, 70, 71, 73, 77, 92, 93, 94, 95, 97, 100, 101, 103, 104, 105, 106, 108, 110, 111, 114, 116, 117, 120, 124], "set_index_map": 48, "set_kernel_profile_metr": 70, "set_kernel_profiler_metr": [70, 71], "set_kernel_profiler_toolkit": 71, "set_logging_level": 119, "set_loop_statu": 32, "set_num_patch": 48, "set_owned_offset": 48, "set_patch_max_element_num": 48, "set_relation_dynam": 48, "set_relation_fix": 48, "set_total_offset": 48, "setup": [105, 117], "seven": 124, "sever": [116, 120], "shade": 114, "shader": [7, 106, 109], "shader_storage_buffer_object": 107, "shallow": [97, 99], "shape": [3, 5, 8, 25, 40, 41, 44, 45, 49, 50, 53, 58, 60, 65, 68, 70, 71, 73, 80, 83, 89, 91, 93, 95, 97, 98, 99, 100, 101, 102, 104, 106, 109, 110, 111, 113, 116, 117, 120, 121, 122, 124], "share": [40, 97, 99, 105, 111, 116], "shared_access": [70, 71], "shared_array_proxi": 53, "shared_expon": [40, 93], "sharedarrai": [53, 102], "shell": [0, 42], "shfl_down_f32": [57, 122], "shfl_down_i32": [57, 122], "shfl_sync_f32": [57, 122], "shfl_sync_i32": [57, 122], "shfl_up_f32": [57, 122], "shfl_up_i32": [57, 122], "shfl_xor_i32": [57, 122], "shift": [50, 121, 124], "shift_expr": 120, "shift_i": 105, "shift_x": 105, "shl": 121, "short": [77, 105, 109, 120, 121], "short_circuit_oper": 120, "shorter": 97, "should": [31, 45, 49, 60, 68, 89, 92, 94, 97, 98, 102, 104, 110, 111, 113, 116, 117, 119, 120], "should_check": 33, "show": [41, 45, 94, 97, 99, 100, 101, 102, 105, 110], "showcas": 106, "shown": [89, 94, 96, 97, 99, 100, 116], "shr": 121, "shrink": 96, "shuffl": 56, "shuffle_down": 56, "shuffle_up": 56, "shuffle_xor": 56, "side": [58, 63, 64, 66, 94, 107, 111, 113, 120, 124], "siggraph": 99, "sign": [49, 68, 84, 85, 93, 111, 124], "signal": 103, "signatur": 109, "signed_dist": 24, "signific": [96, 99, 104, 111, 124], "significantli": [99, 111, 116], "silent": 101, "similar": [41, 45, 68, 91, 93, 94, 95, 97, 99, 100, 101, 110, 111, 116, 120, 122, 124], "similarli": [95, 99, 100, 102, 112], "simpl": [96, 101, 102, 103, 106, 109, 110, 123], "simple_stmt": [107, 120], "simplest": [95, 120], "simpli": [90, 96, 99, 101, 103, 104, 106, 110, 111, 116, 120], "simplic": 94, "simplif": 109, "simplifi": [91, 99, 109, 123], "simt": [0, 42, 102, 108], "simul": [91, 93, 98, 99, 113, 124], "simultan": [106, 111], "sin": [50, 101, 111, 112, 113, 114, 121], "sinc": [91, 93, 96, 99, 101, 111, 120, 121, 124], "sine": 50, "singl": [41, 50, 84, 93, 94, 95, 97, 99, 100, 109, 110, 111, 117, 120], "singular": 101, "situat": [50, 101, 124], "six": [93, 95, 104], "size": [45, 58, 91, 92, 93, 96, 97, 99, 103, 105, 111, 116, 119, 121], "sketch": 96, "skip": [45, 97, 101, 120], "slice": [31, 95], "slice_item": 120, "slice_list": 120, "slide": 99, "slight": 96, "slightli": [94, 102, 111, 124], "slot": 116, "slow": [94, 105, 116], "slowest": 105, "sm": 65, "small": [95, 96, 97, 99, 106, 111], "smallest": [50, 111, 116, 124], "smi": 119, "smooth": [68, 100], "smoothli": 68, "smoothstep": [68, 114], "snippet": [91, 94, 95, 96, 97, 99, 100, 101, 102, 106, 111, 120], "snode": [0, 18, 40, 41, 42, 45, 48, 49, 60, 93, 100, 101, 102, 110, 116], "snodegradtyp": 81, "snodetre": 96, "sn\u014dd": 110, "so": [33, 41, 44, 50, 68, 93, 95, 96, 97, 98, 99, 100, 101, 102, 105, 109, 110, 111, 120, 124], "soa": [45, 60], "soft": 101, "softwar": 111, "sole": 101, "solut": [63, 64, 66, 100, 102, 103, 111, 113, 124], "solv": [63, 64, 65, 66, 105, 113, 115], "solver": [63, 64, 66, 96, 99, 101, 108], "solver_typ": [66, 113], "some": [35, 49, 91, 92, 96, 97, 100, 104, 106, 109, 110, 114, 115, 116, 118, 119, 120, 123, 124], "some_funct": 123, "someth": [8, 97], "sometim": [96, 101, 109, 123], "soon": 97, "sophist": 105, "sort": 105, "sourc": [3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 63, 64, 65, 66, 68, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 93, 101, 103, 105, 117, 120, 121, 124], "source_build": [0, 42], "space": [95, 96, 99, 101, 104, 124], "span": 116, "spars": [0, 28, 49, 58, 62, 65, 66, 72, 91, 96, 103, 106, 108, 110, 116, 120], "sparse_api_demo": 18, "sparse_cg": [0, 62], "sparse_matrix": [0, 62, 66, 113], "sparse_matrix_build": [79, 113, 115], "sparse_solv": [0, 62], "sparse_struct_for": 20, "sparsecg": [64, 113], "sparsematrix": [64, 65, 66, 113], "sparsematrixbuild": [65, 113, 115], "sparsematrixentri": 43, "sparsematrixproxi": 43, "sparsesolv": [66, 113], "sparsiti": 97, "spatial": [106, 108], "speak": [96, 97], "special": [33, 101, 124], "specif": [8, 40, 45, 60, 71, 93, 95, 96, 100, 102, 104, 105, 106, 109, 111, 113, 116, 119, 120, 121, 124], "specifi": [40, 45, 49, 50, 58, 60, 68, 70, 85, 93, 94, 95, 96, 97, 99, 104, 106, 110, 116, 119, 121, 124], "specific_languag": 107, "speed": [104, 116], "spend": 105, "spent": 117, "spgrid": 99, "sphere": [30, 60, 80, 90, 124], "sphere1": 124, "sphere2": 124, "sphere_pack": 30, "sphere_typ": 124, "spheretyp": 99, "sphinx": 0, "spirv_has_atomic_float": 81, "spirv_has_atomic_float16": 81, "spirv_has_atomic_float16_add": 81, "spirv_has_atomic_float16_minmax": 81, "spirv_has_atomic_float64": 81, "spirv_has_atomic_float64_add": 81, "spirv_has_atomic_float64_minmax": 81, "spirv_has_atomic_float_add": 81, "spirv_has_atomic_float_minmax": 81, "spirv_has_atomic_int64": 81, "spirv_has_float16": 81, "spirv_has_float64": 81, "spirv_has_int16": 81, "spirv_has_int64": 81, "spirv_has_int8": 81, "spirv_has_no_integer_wrap_decor": 81, "spirv_has_non_semantic_info": 81, "spirv_has_physical_storage_buff": 81, "spirv_has_subgroup_arithmet": 81, "spirv_has_subgroup_ballot": 81, "spirv_has_subgroup_bas": 81, "spirv_has_subgroup_vot": 81, "spirv_has_variable_ptr": 81, "spirv_vers": 81, "spirv_version_1_3": 81, "spirv_version_1_4": 81, "spirv_version_1_5": 81, "split": [101, 110], "spring": 113, "sqrt": [45, 50, 100, 101, 104, 119, 121], "squar": [45, 50, 94, 106, 114], "square_matrix": 47, "sr": [0, 4], "src": [32, 100, 102], "ssa": 109, "stabil": [63, 101], "stabl": [110, 113], "stack": [100, 105, 111], "stack_trac": 107, "stage": [109, 120], "stagger": 105, "stand": 95, "standard": [5, 68, 91, 109, 110, 123, 124], "standpoint": 97, "star": 31, "start": [60, 68, 91, 96, 101, 103, 104, 105, 112, 116, 119, 120], "start_lineno": 32, "startup": 119, "stat": 110, "state": [49, 99, 100, 101], "statement": [96, 97, 100, 106, 110, 112, 116], "static": [4, 8, 31, 33, 35, 38, 41, 45, 48, 94, 95, 109, 110, 111, 118, 121, 123, 124], "static_assert": 41, "static_express": 120, "static_print": [41, 91], "static_scope_guard": 32, "static_scope_statu": 32, "static_singl": 107, "staticmethod": 89, "staticscopeguard": 32, "staticscopestatu": 32, "statist": 71, "statu": [32, 71, 113], "std": [102, 110], "stencil": 116, "step": [66, 68, 94, 96, 97, 99, 101, 113, 115, 120], "still": [79, 91, 93, 97, 100, 101, 102, 105, 110, 111, 115, 119, 124], "stmt": [31, 100], "stmt_list": 120, "stop": [41, 120], "stop_grad": 41, "storag": [65, 94, 99, 104], "storage_format": 65, "store": [8, 30, 41, 45, 50, 60, 65, 71, 93, 94, 95, 96, 97, 99, 100, 102, 104, 105, 109, 110, 113, 116, 121], "stpq": 114, "str": [3, 4, 5, 8, 30, 31, 35, 41, 45, 60, 65, 66, 70, 71, 77, 100, 116, 119], "straightforward": [97, 101, 105], "strain": 95, "strategi": 110, "stress": 95, "strictli": [45, 111, 121], "stride": [3, 116, 120], "string": [30, 31, 45, 49, 60, 71, 110, 120], "strongli": [110, 124], "struct": [0, 30, 42, 49, 80, 82, 92, 93, 94, 97, 100, 102, 107, 110, 111, 114], "struct_for": 110, "struct_method": 60, "structfield": 60, "structfor": 5, "structtyp": 43, "structur": [3, 5, 30, 45, 48, 60, 93, 96, 97, 103, 106, 108, 111, 116], "studi": 105, "stuff": 68, "style": [50, 67, 110, 121], "sub": [89, 95, 99, 116], "subclass": [33, 37, 120], "subexpress": 109, "subgroup": [0, 55], "subject": 120, "submit": [100, 110], "subroutin": 101, "subscript": [31, 43, 53, 99], "subsect": 105, "subsequ": [96, 111, 112, 116], "subset": 120, "substep": 101, "substitut": 116, "subtl": 96, "subtract": [50, 114, 115], "succe": 113, "succeed": 66, "success": [71, 113, 116], "successfulli": [66, 93, 120], "suffici": [96, 106], "sugar": [108, 120], "suggest": 95, "suit": [93, 120], "sum": [45, 46, 70, 71, 89, 91, 94, 101, 111, 116, 121], "sum_from_one_to": 91, "sum_from_one_to_ten": 91, "sum_func": 111, "summar": 94, "summari": [110, 120], "summat": 115, "suppi": 95, "suppli": 124, "support": [45, 48, 49, 60, 62, 67, 68, 71, 72, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 107, 110, 111, 113, 114, 115, 116, 117, 120, 122, 124], "suppos": [100, 101], "sure": [94, 100, 103, 106, 110, 111, 118, 121], "surfac": 68, "surprisingli": 93, "svd": 101, "swap": [25, 41, 96], "switch": [63, 96, 104, 111, 124], "swizzl": [95, 114], "sx": 68, "sy": [68, 100, 103, 104], "symbol": 35, "symbol_resolv": [0, 34], "symbolic_arg": [3, 9], "symbolicargu": 3, "sync": [51, 53, 57, 71, 102, 105, 112, 117, 122], "sync_all_nonzero": 53, "sync_any_nonzero": 53, "sync_count_nonzero": 53, "synchron": [105, 108], "synonym": 102, "syntact": 120, "syntax": [33, 38, 44, 91, 101, 106, 108, 109, 110, 111, 120, 124], "syntaxerror": 38, "system": [44, 49, 58, 63, 64, 65, 66, 76, 94, 95, 96, 99, 102, 104, 110, 111, 113, 114, 115, 116, 117, 119, 120], "sz": 68, "t": [30, 33, 41, 58, 60, 94, 97, 103, 105, 106, 110, 111, 113, 116, 124], "t4": 119, "tabl": [105, 106, 124], "tag": 3, "taichi": [0, 89, 91, 92, 93, 95, 96, 98, 103, 108, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124], "taichi_cach": 116, "taichi_cmake_arg": 117, "taichi_forward_v0": 105, "taichi_logo": 23, "taichi_max_num_indic": 110, "taichiassertionerror": [38, 100, 101, 120], "taichicompilationerror": [38, 100], "taichinameerror": [38, 120], "taichioper": [37, 45], "taichiruntimeerror": [38, 65], "taichiruntimetypeerror": 38, "taichisyntaxerror": [38, 50], "taichitypeerror": 38, "tailor": [93, 111], "take": [50, 68, 92, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 111, 114, 116, 119, 120, 124], "taken": [50, 102, 104, 106], "tan": [50, 121], "tangent": 50, "tanh": [50, 121], "target": [31, 50, 65, 95, 116, 120, 124], "target1": 31, "target2": 31, "target_list": 120, "target_shap": 31, "task": [5, 73, 97, 105, 106, 107, 109, 110, 111, 112, 113, 117, 124], "task_ti": 5, "task_typ": 3, "taskattribut": 3, "tasks_attrib": 3, "tasktyp": 5, "tcm": 8, "techniqu": [105, 111], "tediou": 105, "tediu": 101, "tell": 105, "temp": 89, "templat": [8, 18, 21, 23, 25, 46, 68, 79, 82, 89, 94, 96, 99, 100, 102, 111, 113, 114, 118, 120, 124], "template_arg": [8, 9], "template_typ": 9, "temporari": [71, 120], "tend": 99, "tenfold": 104, "tensor": [40, 45, 47, 60, 79, 95, 97, 102, 105, 106, 107, 111], "tensor_field": 95, "tensorflow": 101, "term": [95, 99, 110, 120], "termin": [104, 106, 120], "terminologi": 116, "test": [41, 45, 49, 50, 79, 94, 95, 97, 100, 102, 111, 114, 119, 124], "test_customized_grad": 101, "test_sign": 111, "test_templ": 79, "testfield": 102, "tetrahedr": 48, "texpair": 25, "textur": [5, 86, 94, 114], "texture_bind": [3, 5], "texture_bind_ti": 5, "texture_typ": [0, 82, 114], "texturebind": [3, 5], "texturebindingtyp": 5, "texturetyp": [30, 86], "th": [40, 45, 50, 58, 95, 96, 99, 100, 104, 110, 120], "than": [45, 68, 93, 94, 95, 96, 97, 99, 101, 102, 103, 105, 110, 111, 116, 119, 120, 121, 124], "thank": 96, "thei": [50, 58, 68, 90, 91, 92, 93, 96, 97, 99, 105, 106, 110, 111, 114, 116, 120, 121, 124], "them": [68, 90, 93, 96, 97, 99, 101, 104, 105, 109, 111, 114, 117, 118, 120, 122], "themselv": [99, 101], "therefor": [50, 90, 91, 96, 97, 100, 101, 102, 107, 109, 110, 112, 116, 118, 120, 124], "thi": [0, 5, 8, 9, 30, 31, 32, 33, 35, 40, 41, 44, 45, 49, 50, 58, 60, 65, 66, 68, 70, 71, 72, 73, 80, 82, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 124], "thing": [49, 96], "think": 99, "third": [68, 99, 102], "those": [90, 91, 97, 101, 106, 111, 113, 114, 116, 119, 124], "though": [95, 100], "thread": [44, 49, 51, 100, 102, 103, 105, 106, 109, 119], "thread_id": 49, "thread_idx": 53, "threadidx": 105, "three": [77, 93, 95, 96, 99, 105, 110, 111, 115, 120, 124], "threshold": 113, "through": [49, 97, 100, 101, 104, 116], "throughout": 49, "throw": [41, 95, 100, 124], "thrown": [38, 97, 120], "thu": [41, 94, 96, 99], "thumb": 116, "ti": [8, 10, 18, 21, 23, 25, 30, 41, 44, 45, 48, 49, 50, 58, 60, 65, 68, 70, 71, 73, 79, 80, 83, 89, 90, 92, 93, 95, 98, 99, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "ti_arch": [64, 119], "ti_cache_runtime_bitcod": 119, "ti_debug": 119, "ti_device_memory_fract": 103, "ti_device_memory_gb": 103, "ti_enable_": 119, "ti_enable_cuda": [103, 119], "ti_enable_paddl": 119, "ti_enable_torch": 119, "ti_format_list_to_assert_msg": 31, "ti_log_level": 119, "ti_offline_cach": 116, "ti_pad": 105, "ti_test_thread": 119, "ti_visible_devic": 119, "tiarrai": [44, 89], "ticach": 116, "tightli": 120, "tile": [102, 105], "tile_height": 105, "tile_s": 102, "tile_width": 105, "time": [7, 41, 45, 49, 50, 71, 73, 92, 93, 95, 96, 97, 101, 104, 105, 106, 110, 112, 116, 117, 118, 119, 120, 123, 124], "time_compil": 107, "timer": 105, "tini": 99, "tip": 107, "tm": [106, 114], "to_dict": [30, 60], "to_dr_field": 5, "to_dr_graph": 5, "to_dr_kernel": 5, "to_dr_metadata": 5, "to_element_typ": 48, "to_graphs_json": 4, "to_json_graph": 3, "to_json_metadata": 3, "to_list": 45, "to_metadata_json": 4, "to_numpi": [40, 45, 60, 83, 94, 97, 109, 112, 113], "to_paddl": [40, 45, 60, 94], "to_torch": [40, 45, 60, 94], "togeth": [40, 90, 93, 96, 102], "tol": [63, 113], "toler": [63, 64, 113], "too": [91, 95, 99, 110], "tool": [0, 28, 72, 100, 101, 105, 110, 117], "toolkit": [70, 71, 117], "toolkit_nam": 71, "top": [44, 99, 102, 105], "top_level": 33, "topic": [111, 116, 124], "torch": [40, 45, 60, 94, 97, 102, 105, 119], "torch_pad": 105, "torch_tensor": 109, "torsion": 101, "total": [40, 71, 94, 101, 106, 111, 117, 120, 121], "total_offset": 48, "tp": 84, "trace": [45, 46, 70, 71, 117, 119, 121], "tracebacklimit": 100, "track": [92, 101, 102, 111, 117], "tradition": [96, 99], "trail": 120, "train": 105, "tran": 111, "transfer": [97, 102, 105], "transform": [0, 24, 34, 44, 100, 101, 113, 120, 124], "transform_tre": [36, 100], "transform_typ": 111, "translat": [68, 100, 105, 109, 111], "transpar": 77, "transpos": [45, 46, 65, 94, 97, 115, 121], "travers": [33, 96, 102, 104], "treat": [91, 106, 111, 120], "tree": [33, 36, 40, 58, 89, 97, 99, 100, 109, 110], "tri": [49, 77, 95, 116], "trial": 21, "triangleraster": 102, "triangular": 48, "trick": 109, "trigger": [89, 97, 99, 100, 111, 116, 119, 120], "trigonometr": 50, "tripl": 95, "triplet": 65, "trivial": [96, 105, 110], "troubleshoot": 102, "true": [32, 45, 49, 50, 60, 63, 66, 70, 71, 85, 91, 93, 99, 100, 101, 104, 106, 110, 113, 116, 117, 119, 120, 121, 124], "try": [96, 100, 103, 121], "tryfin": 33, "tune": 105, "tupl": [31, 40, 41, 45, 58, 60, 95, 111, 120], "turn": [63, 100, 104, 105, 119, 120], "tutori": [97, 106], "tweak": 116, "twice": [116, 119], "two": [45, 50, 68, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 104, 105, 106, 107, 109, 110, 111, 113, 117, 120, 124], "txt": 102, "type": [0, 3, 5, 8, 10, 28, 30, 31, 35, 38, 40, 41, 44, 45, 47, 48, 49, 50, 58, 60, 65, 66, 68, 71, 77, 91, 92, 94, 95, 96, 97, 99, 104, 105, 106, 109, 110, 113, 115], "type_check": 100, "type_map": 77, "typeerror": 38, "typevar": 45, "typic": [94, 96, 98, 106, 116], "u": [25, 100, 101, 105, 110, 114, 116, 117, 119, 124], "u1": [49, 84, 93, 124], "u16": [5, 84, 124], "u32": [5, 84, 93, 121, 122, 124], "u4": 93, "u5": 93, "u64": [5, 58, 84, 121, 124], "u8": [5, 84, 93, 107, 124], "u_expr": 120, "ub": 21, "uchar": 77, "uint": 77, "uint1": 84, "uint16": 84, "uint32": 84, "uint64": 84, "uint8": [84, 107, 124], "ultim": 109, "unalt": 116, "unaryop": 31, "unavail": [49, 124], "unchang": 121, "undefin": [38, 50, 99, 119], "under": [35, 41, 49, 58, 60, 90, 93, 99, 101, 105, 115, 118], "underli": [41, 50, 96, 97, 105], "understand": [95, 102, 105, 106, 109, 113, 116], "unexpect": [100, 119], "unexpectedli": 101, "unfortun": 99, "unifi": [91, 96, 103], "uniform": [50, 110], "uniniti": 99, "unintuit": 105, "union": [30, 35, 40, 41, 45, 50, 58, 60, 65], "uniqu": [57, 92, 120, 122], "unit": [45, 68, 70, 93, 99, 111, 116, 124], "unix": 116, "unknown": 5, "unless": [89, 120], "unlik": [30, 94, 96, 100, 101, 111, 114], "unlimit": 111, "unnamed_head": 70, "unorgan": 124, "unpack": 31, "unrol": [41, 95, 120, 123], "unsatisfactori": 105, "unset": 100, "unsign": [68, 84, 85, 93, 114, 124], "unspecifi": [38, 97], "unsqueez": 105, "unsupport": 102, "until": [51, 71, 109, 111], "untouch": 49, "unus": 79, "up": [40, 58, 90, 101, 104, 105, 110, 121, 124], "updat": [14, 92, 97, 101, 111, 117], "upon": [100, 111, 116, 119], "upper": [68, 98, 99, 120], "us": [5, 7, 8, 33, 41, 45, 49, 58, 60, 63, 64, 65, 66, 68, 70, 71, 79, 89, 90, 92, 95, 96, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124], "usag": [8, 41, 70, 93, 95, 96, 99, 110, 111, 113, 116, 120, 122], "use_bitmask": 20, "user": [7, 58, 70, 71, 88, 92, 94, 95, 96, 97, 100, 101, 104, 105, 106, 107, 110, 111, 112, 116, 117, 124], "ushort": 77, "usual": [45, 49, 94, 99, 101, 102, 103, 105], "util": [0, 7, 30, 42, 71, 76, 82, 96, 97, 106, 110, 111, 112, 114, 116, 124], "uu": 105, "uuid": 119, "uvec2": [68, 114], "uvec3": [68, 114], "uvec4": [68, 114], "v": [8, 25, 30, 45, 60, 68, 80, 96, 100, 101, 102, 104, 105, 113, 114, 124], "v0": 49, "v1": [45, 49, 91, 99, 101, 105, 111, 124], "v2": 45, "v3": 105, "vacuum": 99, "val": [40, 45, 46, 49, 57, 58, 60, 96, 100, 115, 116], "val_format": 70, "valid": [60, 97, 100, 101, 120], "valid_exampl": 94, "valu": [3, 8, 30, 31, 33, 40, 41, 45, 48, 49, 50, 56, 57, 58, 60, 68, 70, 71, 85, 90, 93, 94, 96, 97, 99, 100, 101, 102, 106, 107, 109, 110, 112, 116, 118, 119, 121, 123, 124], "value1": 31, "value2": 31, "var": [32, 40, 45, 71, 73, 117], "vari": [104, 105, 111, 124], "variabl": [31, 71, 91, 95, 99, 100, 101, 102, 103, 116, 119, 121, 123, 124], "variable_scope_guard": 32, "variablescopeguard": 32, "variant": 96, "varieti": 101, "variou": [93, 111, 113, 124], "vdata": 16, "vdb": 99, "vdir": 68, "ve": 101, "vec": [46, 124], "vec2": [68, 97, 99, 106, 114], "vec3": [24, 30, 41, 60, 68, 80, 90, 95, 97, 99, 111, 124], "vec4": [68, 114], "vec4d": 124, "vec5f": 114, "vec_field": 95, "vec_i": 46, "vec_x": 46, "vector": [30, 41, 45, 47, 49, 50, 58, 60, 65, 67, 68, 77, 80, 82, 89, 90, 94, 97, 98, 99, 100, 101, 106, 107, 109, 111, 113, 116, 119, 120, 121], "vectorndarrai": 45, "vel": [95, 96], "vel_with_boundari": 25, "veloc": [77, 93, 95, 99, 101], "velocities_pair": 25, "velocity_component_typ": 93, "velocityfield": 25, "verbos": [110, 119], "veri": [94, 97, 105, 110, 111, 114], "verifi": [100, 116], "versa": [94, 119], "version": [49, 94, 99, 100, 102, 103, 104, 105, 116, 121], "vert": [48, 49], "vertex": [48, 49, 77], "vertex_channel": 77, "vertex_data": 77, "vertex_data_typ": 77, "vertex_shad": 107, "vertic": [77, 102], "vf": 25, "vf_new": 25, "via": [45, 90, 94, 95, 99, 100, 102, 105, 119, 120], "vice": [94, 119], "video": [76, 99, 101], "view": [41, 49, 94, 97, 105], "virtual": [107, 111], "visibl": 120, "visit": [33, 49, 58, 70, 71, 94, 100], "visit_": 33, "visit_for": 33, "visit_tryfin": 33, "visited_funcdef": 32, "visitor": 33, "visual": [93, 96, 103], "vjp": 101, "vl": 25, "void": 105, "volum": 92, "volumetr": 95, "volumetric_field": 95, "voricity_step": 25, "vorticity_project": 25, "voxel": [93, 98, 99], "vr": 25, "vtk": [0, 76], "vulkan": [49, 100, 102, 106, 111, 119, 124], "vv": 105, "vx": 77, "vy": 77, "vz": 77, "w": [45, 94, 95, 100, 103, 105, 114, 116, 124], "wa": [111, 113], "wai": [5, 41, 60, 71, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 105, 110, 111, 114, 120], "wait": [93, 112], "walk": [33, 104, 116], "wall": 105, "want": [33, 35, 41, 45, 93, 94, 96, 100, 101, 102, 111, 113, 116, 119], "warn": [100, 119, 120, 124], "warn_if_is_external_func": 31, "warp": [0, 55, 116, 122], "wast": 96, "watch": 99, "wave": 96, "we": [31, 45, 49, 71, 91, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 109, 110, 111, 112, 113, 114, 116, 121, 123], "weight": 68, "well": [41, 97, 100, 101, 105, 111, 116, 120, 124], "were": 97, "what": [41, 93, 95, 107, 109], "whatev": 120, "when": [38, 41, 44, 45, 49, 50, 58, 60, 68, 71, 91, 92, 93, 94, 95, 96, 99, 100, 101, 103, 106, 107, 109, 110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 124], "where": [8, 40, 50, 63, 64, 91, 93, 94, 95, 96, 97, 99, 101, 102, 104, 107, 111, 112, 113, 120, 124], "wherea": 106, "wherev": 116, "whether": [31, 40, 41, 44, 45, 49, 58, 60, 68, 71, 91, 97, 100, 111, 116, 119], "which": [30, 33, 49, 60, 68, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124], "while": [31, 40, 90, 92, 94, 96, 99, 103, 105, 106, 111, 112, 116, 118], "while_stmt": 120, "whilst": 105, "who": [91, 96], "whole": [99, 110], "whose": [50, 93, 94, 95, 106, 113, 114, 116, 120, 124], "wide": 101, "width": [60, 95, 102], "wiki": 107, "wikipedia": 107, "window": [25, 106, 116], "wise": [50, 68, 105, 114, 115, 120, 121, 124], "wish": 93, "within": [30, 49, 71, 93, 96, 97, 99, 104, 106, 111, 112, 114, 116, 118, 120, 122, 124], "without": [8, 41, 94, 96, 97, 100, 101, 103, 105, 110, 111, 120, 124], "won": [41, 111], "word": [90, 99, 102, 116], "work": [8, 93, 95, 97, 98, 100, 101, 103, 104, 105, 109, 110, 111, 116, 117, 118, 119, 120, 121], "workaround": [95, 102, 111], "workflow": [101, 105], "world": [100, 105, 108, 111], "worri": [105, 112], "worsen": 100, "worth": 96, "worthi": 116, "would": [33, 44, 90, 94, 97, 99, 103, 105, 111, 124], "wrap": [40, 65, 111, 120], "wrapper": [58, 90, 92, 124], "writabl": 50, "write": [5, 65, 77, 91, 93, 96, 97, 99, 105, 106, 107, 111, 116, 120, 121, 122], "write_vtk": 78, "writer": 16, "written": [44, 101, 105, 111, 116], "wrong": [101, 121], "www": [105, 107], "wzyx": 114, "x": [8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 41, 44, 45, 46, 47, 48, 49, 50, 63, 68, 70, 71, 77, 83, 89, 91, 93, 94, 95, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 120, 121, 124], "x0": [64, 113], "x1": [41, 45, 50, 105, 110], "x2": [41, 45, 50, 105], "x3": 41, "x4": 41, "x5": 41, "x64": [49, 58, 117], "x86_64": 49, "x_0": 101, "x_1": 101, "x_min": 102, "xi": 45, "xl": 113, "xmax": 68, "xmin": 68, "xn": 45, "xor": 50, "xor_expr": 120, "xxx": 114, "xyz": [95, 114], "xyzw": [95, 114], "y": [8, 10, 13, 14, 15, 16, 21, 41, 46, 47, 48, 49, 50, 68, 70, 71, 77, 83, 89, 91, 93, 94, 95, 96, 100, 101, 102, 105, 107, 109, 110, 111, 114, 120, 121, 124], "y1": [45, 105], "y2": [45, 105], "yaw": 68, "ye": [97, 102], "year": 41, "yet": [100, 116, 120], "yj": 45, "yl": 113, "yn": 45, "you": [33, 41, 45, 70, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 122, 124], "your": [49, 89, 92, 95, 97, 100, 101, 102, 103, 104, 105, 106, 111, 115, 116, 117, 119, 121, 124], "your_script": 119, "yourself": [96, 111, 120, 121], "yuanm": [58, 82, 85], "z": [16, 21, 41, 48, 50, 68, 77, 93, 95, 97, 106, 110, 114, 120, 121, 124], "zero": [41, 45, 50, 58, 83, 94, 95, 98, 99, 107, 124], "zeropad2d": 105, "\u03c0": 68}, "titles": ["API Reference", "taichi.ad", "taichi.algorithms", "taichi.aot.conventions.gfxruntime140.dr", "taichi.aot.conventions.gfxruntime140", "taichi.aot.conventions.gfxruntime140.sr", "taichi.aot.conventions", "taichi.aot", "taichi.aot.module", "taichi.aot.utils", "taichi.examples.algorithm.circle-packing.circle_packing_image", "taichi.examples.algorithm.laplace", "taichi.examples.autodiff.jacobian", "taichi.examples.autodiff.minimization", "taichi.examples.autodiff.regression", "taichi.examples.autodiff.simple_derivative", "taichi.examples.features.io.export_mesh", "taichi.examples.features.io.export_ply", "taichi.examples.features.sparse.explicit_activation", "taichi.examples.features.sparse.taichi_dynamic", "taichi.examples.features.sparse.tutorial", "taichi.examples.machine_learning.differential_evolution", "taichi.examples.minimal", "taichi.examples.patterns", "taichi.examples.real_func.rendering.cornell_box", "taichi.examples.simulation.eulerfluid2d", "taichi.experimental", "taichi.graph", "taichi", "taichi.lang.any_array", "taichi.lang.argpack", "taichi.lang.ast.ast_transformer", "taichi.lang.ast.ast_transformer_utils", "taichi.lang.ast.checkers", "taichi.lang.ast", "taichi.lang.ast.symbol_resolver", "taichi.lang.ast.transform", "taichi.lang.common_ops", "taichi.lang.exception", "taichi.lang.expr", "taichi.lang.field", "taichi.lang.impl", "taichi.lang", "taichi.lang.kernel_arguments", "taichi.lang.kernel_impl", "taichi.lang.matrix", "taichi.lang.matrix_ops", "taichi.lang.matrix_ops_utils", "taichi.lang.mesh", "taichi.lang.misc", "taichi.lang.ops", "taichi.lang.runtime_ops", "taichi.lang.shell", "taichi.lang.simt.block", "taichi.lang.simt.grid", "taichi.lang.simt", "taichi.lang.simt.subgroup", "taichi.lang.simt.warp", "taichi.lang.snode", "taichi.lang.source_builder", "taichi.lang.struct", "taichi.lang.util", "taichi.linalg", "taichi.linalg.matrixfree_cg", "taichi.linalg.sparse_cg", "taichi.linalg.sparse_matrix", "taichi.linalg.sparse_solver", "taichi.math", "taichi.math.mathimpl", "taichi.profiler", "taichi.profiler.kernel_metrics", "taichi.profiler.kernel_profiler", "taichi.profiler.memory_profiler", "taichi.profiler.scoped_profiler", "taichi.sparse", "taichi.tools.diagnose", "taichi.tools", "taichi.tools.np2ply", "taichi.tools.vtk", "taichi.types.annotations", "taichi.types.compound_types", "taichi.types.enums", "taichi.types", "taichi.types.ndarray_type", "taichi.types.primitive_types", "taichi.types.quant", "taichi.types.texture_type", "taichi.types.utils", "Taichi", "Data-Oriented Class", "Taichi Dataclass", "Metaprogramming", "Objective Data-Oriented Programming", "Use quantized data types", "Interacting with External Arrays", "Fields", "Fields (advanced)", "Taichi Ndarray", "Coordinate Offsets", "Spatially Sparse Data Structures", "Debugging", "Differentiable Programming", "Frequently Asked Questions", "Installation Troubleshooting", "Accelerate Python with Taichi", "Accelerate PyTorch with Taichi", "Hello, World!", "Glossary", "User guide", "Life of a Taichi Kernel", "Internal Designs", "Kernels and Functions", "Synchronization between Kernels and Python Scope", "Linear Solver", "Math Module", "Sparse Matrix", "Performance Tuning", "Profiler", "Differences between Taichi and Python Programs", "Global Settings", "Language Reference", "Operators", "SIMT Intrinsics", "Syntax Sugars", "Type System"], "titleterms": {"": [102, 110], "1": 99, "101": 96, "2": 99, "3": 99, "4": 99, "A": 111, "At": 111, "For": 116, "The": [109, 120], "__syncthread": 102, "abstract": 107, "acceler": [94, 104, 105], "access": [95, 100, 101], "accur": 102, "activ": 99, "ad": [1, 101], "advanc": [94, 96, 100, 108, 117], "ahead": 107, "algorithm": [2, 10, 11], "alias": [107, 123, 124], "alik": 121, "alloc": 96, "alwai": 102, "an": [94, 96, 100, 102], "ancestor": 99, "annot": [79, 107, 118, 120], "any_arrai": 29, "ao": [96, 107], "aot": [3, 4, 5, 6, 7, 8, 9, 107], "api": 0, "applic": 100, "ar": [102, 111], "argpack": 30, "argument": [94, 111], "arithmet": [120, 121], "arrai": [93, 94, 100, 107], "ask": 102, "assert": [100, 107, 120], "assign": [107, 120, 124], "associ": 90, "ast": [31, 32, 33, 34, 35, 36, 107], "ast_transform": 31, "ast_transformer_util": 32, "atom": [107, 120, 121], "attribut": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 31, 41, 49, 52, 68, 79, 81, 83, 84, 86, 87, 120], "augment": [107, 120], "autodiff": [12, 13, 14, 15, 101], "automat": [97, 107, 111], "avoid": 101, "b": 102, "backend": [100, 106, 111, 119], "background": 116, "barrier": 102, "basic": [108, 120], "between": [94, 102, 112, 114, 118], "binari": [120, 124], "bit": 93, "bitmask": [99, 107], "bitpack": 93, "bitwis": [120, 121], "bl": 116, "block": [53, 116], "bool": 102, "boolean": 120, "both": 102, "bound": 100, "branch": 91, "break": 120, "buffer": 107, "built": 89, "builtin": 121, "cach": [109, 116], "call": [111, 120], "can": [94, 102, 111], "case": 101, "cast": [111, 124], "check": 99, "checker": [33, 101], "checkpoint": 101, "child": 102, "circl": 10, "circle_packing_imag": 10, "class": [3, 4, 5, 8, 10, 25, 30, 31, 32, 33, 35, 37, 40, 43, 45, 48, 53, 58, 60, 63, 64, 65, 66, 70, 77, 79, 81, 89, 90, 102], "code": [101, 109], "column": [96, 107], "comma": 100, "common": [104, 120], "common_op": 37, "comparison": [105, 120, 121], "compil": [91, 97, 100, 107, 109, 111, 119], "complain": 102, "complex": 114, "complic": 93, "compound": [107, 120, 124], "compound_typ": 80, "comprehens": 118, "comput": [93, 99, 102, 107], "concept": 120, "concis": 100, "condit": [120, 121], "consider": 95, "constant": 111, "contain": [93, 97], "content": [3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 63, 64, 65, 66, 68, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87], "continu": 120, "convent": [3, 4, 5, 6], "convolut": 105, "coordin": [98, 107], "cornell_box": 24, "count": 104, "creat": [90, 102], "cuda": [103, 105], "custom": [105, 124], "data": [89, 92, 93, 94, 96, 97, 99, 101, 102, 105, 107, 110, 116, 124], "data_ori": 102, "dataclass": [90, 124], "deactiv": 99, "debug": 100, "declar": [95, 102], "decor": [89, 102, 116], "default": [102, 124], "default_fp": 102, "defin": 106, "depthwis": 105, "design": 110, "destruct": 96, "develop": [102, 119], "diagnos": 75, "dictionari": [118, 120], "differ": [111, 118], "differenti": [97, 101, 107, 108], "differential_evolut": 21, "difftaichi": 101, "dimension": 91, "direct": 113, "displai": [102, 120], "do": 102, "doe": 102, "domain": 107, "dop": 107, "dr": 3, "dsl": 107, "dynam": [99, 102, 104], "each": 111, "effici": 96, "element": [95, 102], "engin": 109, "entir": 100, "entri": 94, "enum": 81, "error": 102, "eulerfluid2d": 25, "eulerian": 93, "evalu": 91, "exampl": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 93, 94, 116], "except": 38, "execut": 100, "experiment": 26, "explicit": 124, "explicit_activ": 18, "explicitli": 99, "expon": 93, "export_mesh": 16, "export_pli": 17, "expr": 39, "express": 120, "extend": 101, "extens": 96, "extern": [94, 97, 107], "f": 100, "f32": 102, "f64": 102, "fail": 102, "faq": [94, 97, 108, 111], "featur": [16, 17, 18, 19, 20, 118], "field": [40, 91, 93, 94, 95, 96, 102, 106, 107], "file": 102, "fill": 95, "first": 93, "fix": 93, "float": [93, 102], "fluid": 93, "forc": 111, "form": 120, "format": 100, "fors": 99, "forward": 101, "found": 102, "fragment": 107, "free": 113, "frequent": 102, "from": [90, 96, 102], "frontend": 110, "func": 91, "function": [3, 5, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 36, 41, 43, 44, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 60, 63, 68, 70, 71, 72, 73, 78, 80, 84, 85, 90, 94, 102, 106, 107, 111, 114, 121], "further": 99, "fwdmode": 101, "game": 93, "gener": [110, 121], "get": 108, "gfxruntime140": [3, 4, 5], "given": 95, "glmemorybarri": 102, "global": [101, 107, 111, 119], "glossari": [107, 108], "glsl": 114, "go": 119, "gpu": 116, "grad": 101, "graph": [27, 102], "graviti": 101, "grid": [54, 99, 107], "group": 91, "guid": 108, "hello": 106, "hierarch": 96, "hierarchi": 116, "high": 119, "hint": 111, "how": [97, 102], "i": [94, 102, 111, 118], "identifi": 120, "imag": 102, "imper": 107, "impl": 41, "implement": 105, "implicit": 124, "import": 106, "imshow": 102, "independ": 91, "index": 99, "indic": [91, 110], "inherit": [89, 102], "initi": [102, 106, 124], "inlin": 111, "insid": [101, 111], "instal": [102, 103, 106], "instanti": [107, 109], "integ": 93, "integr": 102, "interact": [94, 102], "intermedi": [107, 110], "intern": [108, 110], "interrupt": 103, "intrins": 122, "introduct": [101, 120], "io": [16, 17], "ir": [107, 110], "issu": 103, "iter": 113, "jacobian": 12, "jit": [107, 109], "just": [107, 109], "kei": [106, 111], "kernel": [94, 97, 101, 102, 106, 107, 108, 109, 111, 112], "kernel_argu": 43, "kernel_impl": 44, "kernel_metr": 70, "kernel_profil": 71, "kernelprofil": 117, "lang": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "languag": [107, 118, 120], "laplac": 11, "launch": 109, "layout": [96, 116], "length": 102, "less": 102, "level": [94, 116], "lexic": 107, "lib": 102, "life": [93, 109], "limit": 101, "linalg": [62, 63, 64, 65, 66], "linear": 113, "list": [102, 110, 118, 120], "liter": 120, "local": [107, 116], "log": 119, "logic": 121, "longest": 104, "loop": [91, 100, 101, 102, 106, 107, 116], "machine_learn": 21, "major": [96, 107], "manag": 96, "manipul": 99, "manual": 96, "math": [67, 68, 108, 114], "mathemat": 114, "mathimpl": 68, "matplotlib": 102, "matric": [121, 124], "matrix": [45, 91, 95, 102, 107, 113, 114, 115], "matrix_op": 46, "matrix_ops_util": 47, "matrixfree_cg": 63, "maximum": 102, "megakernel": 107, "membership": 120, "memori": 96, "memory_profil": 72, "mesh": [48, 102], "metadata": [91, 95, 107], "metaprogram": [91, 107, 111], "minim": [13, 22], "minimum": 102, "misc": 49, "mix": 101, "ml": [93, 105], "mode": [101, 117], "modul": [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 63, 64, 65, 66, 68, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 114], "more": 93, "most": [102, 111], "motiv": 99, "mpm": 93, "my": 102, "name": 120, "ndarrai": 97, "ndarray_typ": 83, "ndrang": 120, "non": 101, "note": 90, "np2ply": 77, "number": [93, 114, 121], "numpi": 94, "object": [92, 102, 107], "obtain": 102, "occup": 96, "offlin": 116, "offset": [98, 107], "old": 107, "one": [102, 111], "oop": 107, "op": 50, "oper": [105, 107, 114, 118, 120, 121, 124], "optim": [100, 109, 116], "order": 107, "organ": [96, 110], "orient": [89, 92, 102, 107], "other": [102, 121], "out": 100, "outer": 102, "overview": 117, "pack": 10, "packag": [4, 102], "pad": 105, "paddl": 94, "parallel": [100, 101, 102, 106, 116], "parent": 102, "parenthes": 120, "partial": 118, "pass": [102, 111, 120], "pattern": 23, "perform": [105, 108, 116], "physic": 110, "pip": 102, "place": 102, "plain": 107, "plt": 102, "pod": 107, "point": [93, 102], "pointer": 99, "power": 120, "precis": [102, 119], "preprocess": 105, "prerequisit": 106, "primari": 120, "prime": 104, "primit": [107, 121, 124], "primitive_typ": 84, "print": 100, "profil": [69, 70, 71, 72, 73, 117], "program": [91, 92, 93, 100, 101, 102, 104, 107, 118], "provid": 102, "python": [89, 90, 97, 102, 103, 104, 105, 107, 110, 111, 112, 118], "pytorch": [94, 105], "quant": [85, 93], "quantiz": 93, "queri": 99, "question": 102, "race": 107, "random": 121, "rang": 120, "read": 99, "real": 111, "real_func": 24, "recap": [105, 111], "recurs": [91, 111], "refer": [0, 93, 105, 108, 111, 120], "registr": 109, "regress": 14, "relat": [102, 114], "render": 24, "represent": [107, 110], "return": [102, 111, 118, 120], "root": 96, "rotat": 102, "row": [96, 107], "rule": [101, 120], "runtim": [100, 111, 119], "runtime_op": 51, "scalar": [95, 111], "scheme": 93, "scope": [91, 97, 100, 102, 107, 111, 112, 118, 120], "scoped_profil": 73, "scopedprofil": 117, "separ": [100, 111], "serial": [100, 102], "set": [118, 119], "shader": 107, "shape": [94, 96, 107], "share": 93, "shell": 52, "shift": 120, "signatur": 107, "similar": 102, "simpl": 120, "simple_deriv": 15, "simt": [53, 54, 55, 56, 57, 122], "simul": [25, 101], "singl": 107, "size": 95, "slice": 120, "small": 114, "snode": [58, 99], "soa": [96, 107], "softwar": 102, "solver": 113, "source_build": 59, "spars": [18, 19, 20, 74, 99, 107, 113, 115], "sparse_cg": 64, "sparse_matrix": 65, "sparse_solv": 66, "sparsiti": 99, "spatial": 99, "specif": 107, "specifi": [100, 111], "sr": 5, "ssa": 107, "ssbo": 107, "standard": 114, "start": 108, "statement": [101, 107, 111, 118, 120], "static": [91, 100, 107, 120], "static_assert": 100, "static_print": 100, "statist": 110, "storag": [107, 116], "stride": 107, "string": 100, "struct": [60, 90, 95, 99, 120, 124], "structur": [99, 102, 107, 110], "studi": 101, "subgroup": 56, "submodul": [4, 6, 7, 28, 34, 42, 55, 62, 67, 69, 76, 82], "subscript": 120, "subsequ": 104, "sugar": 123, "support": [102, 106, 118, 121], "swap": 102, "symbol_resolv": 35, "synchron": [102, 112], "syntax": [107, 123], "system": [100, 101, 106, 108, 124], "taichi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 111, 118], "taichi_dynam": 19, "takeawai": 106, "tape": 101, "templat": [91, 97, 107, 109], "tensor": 94, "term": 111, "test": 120, "tetrahedr": 102, "texture_typ": 86, "them": 102, "thread": [107, 116], "ti": [91, 94, 96, 97, 100, 101, 102, 114], "time": [91, 100, 107, 109, 111], "tip": 100, "tl": [107, 116], "to_numpi": 102, "tool": [75, 76, 77, 78], "traceback": [100, 107], "transfer": 94, "transform": [36, 109], "tree": 107, "trigonometr": 121, "troubleshoot": 103, "tune": [108, 116], "tutori": 20, "two": 102, "type": [79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 93, 100, 102, 107, 108, 111, 114, 118, 120, 121, 124], "unari": 120, "under": 102, "unrol": [91, 107], "unsupport": 118, "us": [91, 93, 94, 97, 101, 102], "usag": [94, 97, 101], "user": 108, "util": [9, 61, 87], "v": [110, 111], "valu": [95, 111, 120], "variabl": [107, 111, 118, 120], "vec3": 114, "vector": [91, 93, 95, 102, 114, 124], "versu": 96, "vertex": 107, "violat": 101, "virtual": 110, "vtk": 78, "warp": 57, "when": [97, 102], "while": 120, "why": [102, 110], "window": 103, "work": 102, "world": 106, "write": [101, 102], "x": 96, "your": 93}})