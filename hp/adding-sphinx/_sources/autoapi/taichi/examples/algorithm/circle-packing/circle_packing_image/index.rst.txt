taichi.examples.algorithm.circle-packing.circle_packing_image
=============================================================

.. py:module:: taichi.examples.algorithm.circle-packing.circle_packing_image

.. autoapi-nested-parse::

   Given an input image, redraw it with circle packings.



Attributes
----------

.. autoapisummary::

   taichi.examples.algorithm.circle-packing.circle_packing_image.circles


Classes
-------

.. autoapisummary::

   taichi.examples.algorithm.circle-packing.circle_packing_image.Circle


Functions
---------

.. autoapisummary::

   taichi.examples.algorithm.circle-packing.circle_packing_image.load_image
   taichi.examples.algorithm.circle-packing.circle_packing_image.get_dist_transform_image
   taichi.examples.algorithm.circle-packing.circle_packing_image.add_new_circles
   taichi.examples.algorithm.circle-packing.circle_packing_image.plot_cirlces
   taichi.examples.algorithm.circle-packing.circle_packing_image.process
   taichi.examples.algorithm.circle-packing.circle_packing_image.main


Module Contents
---------------

.. py:class:: Circle

   .. py:attribute:: x
      :type:  int


   .. py:attribute:: y
      :type:  int


   .. py:attribute:: r
      :type:  int


.. py:data:: circles

.. py:function:: load_image(imgfile)

.. py:function:: get_dist_transform_image(image)

.. py:function:: add_new_circles(filled: ti.types.ndarray(), dist_image: ti.types.ndarray(), min_radius: int, max_radius: int) -> int

.. py:function:: plot_cirlces(image, ctx, n)

.. py:function:: process(imgfile, scale)

.. py:function:: main(imgfile=None, scale=2)

