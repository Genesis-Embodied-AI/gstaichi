taichi.examples.machine_learning.differential_evolution
=======================================================

.. py:module:: taichi.examples.machine_learning.differential_evolution


Attributes
----------

.. autoapisummary::

   taichi.examples.machine_learning.differential_evolution.search_num
   taichi.examples.machine_learning.differential_evolution.dim
   taichi.examples.machine_learning.differential_evolution.max_iter
   taichi.examples.machine_learning.differential_evolution.lb
   taichi.examples.machine_learning.differential_evolution.ub
   taichi.examples.machine_learning.differential_evolution.pop
   taichi.examples.machine_learning.differential_evolution.fit
   taichi.examples.machine_learning.differential_evolution.best_fit
   taichi.examples.machine_learning.differential_evolution.best_pop
   taichi.examples.machine_learning.differential_evolution.all_pop
   taichi.examples.machine_learning.differential_evolution.trial
   taichi.examples.machine_learning.differential_evolution.res
   taichi.examples.machine_learning.differential_evolution.x
   taichi.examples.machine_learning.differential_evolution.y
   taichi.examples.machine_learning.differential_evolution.z
   taichi.examples.machine_learning.differential_evolution.fig
   taichi.examples.machine_learning.differential_evolution.ax
   taichi.examples.machine_learning.differential_evolution.row


Functions
---------

.. autoapisummary::

   taichi.examples.machine_learning.differential_evolution.clip
   taichi.examples.machine_learning.differential_evolution.clip_only
   taichi.examples.machine_learning.differential_evolution.f1
   taichi.examples.machine_learning.differential_evolution.f1_only
   taichi.examples.machine_learning.differential_evolution.find_min
   taichi.examples.machine_learning.differential_evolution.rand_int
   taichi.examples.machine_learning.differential_evolution.copy_pop_to_field
   taichi.examples.machine_learning.differential_evolution.copy_field_to_pop
   taichi.examples.machine_learning.differential_evolution.copy_2d_to_3d
   taichi.examples.machine_learning.differential_evolution.copy_field_a_to_b
   taichi.examples.machine_learning.differential_evolution.de_crossover
   taichi.examples.machine_learning.differential_evolution.de_loop
   taichi.examples.machine_learning.differential_evolution.DE
   taichi.examples.machine_learning.differential_evolution.draw_contour


Module Contents
---------------

.. py:function:: clip(_pop: ti.template(), _lb: ti.template(), _ub: ti.template())

.. py:function:: clip_only(_trial: ti.template(), _lb: ti.template(), _ub: ti.template())

.. py:function:: f1(_fit: ti.template(), _pop: ti.template())

.. py:function:: f1_only(_trial: ti.template()) -> taichi.float32

.. py:function:: find_min(_fit: ti.template()) -> taichi.i32

.. py:function:: rand_int(low: taichi.i32, high: taichi.i32) -> taichi.i32

.. py:function:: copy_pop_to_field(_pop: ti.template(), _trial: ti.template(), ind: taichi.i32)

.. py:function:: copy_field_to_pop(_pop: ti.template(), _trial: ti.template(), ind: taichi.i32)

.. py:function:: copy_2d_to_3d(a: ti.template(), b: ti.template(), _iter: taichi.i32)

.. py:function:: copy_field_a_to_b(a: ti.template(), b: ti.template())

.. py:function:: de_crossover(_pop: ti.template(), _trial: ti.template(), a: taichi.i32, b: taichi.i32, c: taichi.i32)

.. py:function:: de_loop(_pop: ti.template(), all_best: taichi.float32, _fit: ti.template(), _trial: ti.template(), _lb: ti.template(), _ub: ti.template()) -> taichi.float32

.. py:function:: DE(_pop: ti.template(), _max_iter: taichi.i32, _lb: ti.template(), _ub: ti.template(), _fit: ti.template(), _best_fit: ti.template(), _trial: ti.template())

.. py:data:: search_num
   :value: 20


.. py:data:: dim
   :value: 2


.. py:data:: max_iter
   :value: 50


.. py:data:: lb

.. py:data:: ub

.. py:data:: pop

.. py:data:: fit

.. py:data:: best_fit

.. py:data:: best_pop

.. py:data:: all_pop

.. py:data:: trial

.. py:data:: res

.. py:function:: draw_contour()

.. py:data:: x

.. py:data:: y

.. py:data:: z

.. py:data:: fig

.. py:data:: ax

.. py:data:: row
   :value: []


