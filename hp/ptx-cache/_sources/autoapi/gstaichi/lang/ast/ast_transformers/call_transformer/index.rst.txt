gstaichi.lang.ast.ast_transformers.call_transformer
===================================================

.. py:module:: gstaichi.lang.ast.ast_transformers.call_transformer


Classes
-------

.. autoapisummary::

   gstaichi.lang.ast.ast_transformers.call_transformer.CallTransformer


Module Contents
---------------

.. py:class:: CallTransformer

   .. py:method:: build_call_if_is_builtin(ctx: gstaichi.lang.ast.ast_transformer_utils.ASTTransformerContext, node, args, keywords)
      :staticmethod:



   .. py:method:: build_call_if_is_type(ctx: gstaichi.lang.ast.ast_transformer_utils.ASTTransformerContext, node, args, keywords)
      :staticmethod:



   .. py:method:: is_external_func(ctx: gstaichi.lang.ast.ast_transformer_utils.ASTTransformerContext, func) -> bool
      :staticmethod:



   .. py:method:: warn_if_is_external_func(ctx: gstaichi.lang.ast.ast_transformer_utils.ASTTransformerContext, node)
      :staticmethod:



   .. py:method:: canonicalize_formatted_string(raw_string: str, *raw_args: list, **raw_keywords: dict)
      :staticmethod:



   .. py:method:: expand_node_args_dataclasses(args: tuple[ast.AST, Ellipsis]) -> tuple[ast.AST, Ellipsis]
      :staticmethod:



   .. py:method:: build_Call(ctx: gstaichi.lang.ast.ast_transformer_utils.ASTTransformerContext, node: ast.Call, build_stmt, build_stmts)
      :staticmethod:



