gstaichi.aot.conventions.gfxruntime140.dr
=========================================

.. py:module:: gstaichi.aot.conventions.gfxruntime140.dr

.. autoapi-nested-parse::

   Data representation of all JSON data structures following the GfxRuntime140
   convention.



Classes
-------

.. autoapisummary::

   gstaichi.aot.conventions.gfxruntime140.dr.FieldAttributes
   gstaichi.aot.conventions.gfxruntime140.dr.ArgumentAttributes
   gstaichi.aot.conventions.gfxruntime140.dr.ContextAttributes
   gstaichi.aot.conventions.gfxruntime140.dr.Buffer
   gstaichi.aot.conventions.gfxruntime140.dr.BufferBinding
   gstaichi.aot.conventions.gfxruntime140.dr.TextureBinding
   gstaichi.aot.conventions.gfxruntime140.dr.RangeForAttributes
   gstaichi.aot.conventions.gfxruntime140.dr.TaskAttributes
   gstaichi.aot.conventions.gfxruntime140.dr.DeviceCapabilityLevel
   gstaichi.aot.conventions.gfxruntime140.dr.KernelAttributes
   gstaichi.aot.conventions.gfxruntime140.dr.Metadata
   gstaichi.aot.conventions.gfxruntime140.dr.SymbolicArgument
   gstaichi.aot.conventions.gfxruntime140.dr.Dispatch
   gstaichi.aot.conventions.gfxruntime140.dr.GraphData
   gstaichi.aot.conventions.gfxruntime140.dr.Graph


Functions
---------

.. autoapisummary::

   gstaichi.aot.conventions.gfxruntime140.dr.from_json_metadata
   gstaichi.aot.conventions.gfxruntime140.dr.to_json_metadata
   gstaichi.aot.conventions.gfxruntime140.dr.from_json_graph
   gstaichi.aot.conventions.gfxruntime140.dr.to_json_graph


Module Contents
---------------

.. py:class:: FieldAttributes(j: Dict[str, Any])

   .. py:attribute:: dtype
      :type:  int


   .. py:attribute:: dtype_name
      :type:  str
      :value: ''



   .. py:attribute:: element_shape
      :type:  List[int]


   .. py:attribute:: field_name
      :type:  str
      :value: ''



   .. py:attribute:: is_scalar
      :type:  bool


   .. py:attribute:: mem_offset_in_parent
      :type:  int


   .. py:attribute:: shape
      :type:  List[int]


.. py:class:: ArgumentAttributes(j: Dict[str, Any])

   .. py:attribute:: dtype
      :type:  int


   .. py:attribute:: element_shape
      :type:  List[int]


   .. py:attribute:: field_dim
      :type:  int


   .. py:attribute:: format
      :type:  int


   .. py:attribute:: index
      :type:  int


   .. py:attribute:: is_array
      :type:  bool


   .. py:attribute:: offset_in_mem
      :type:  int


   .. py:attribute:: stride
      :type:  int


   .. py:attribute:: name
      :type:  Optional[str]
      :value: ''



   .. py:attribute:: ptype
      :type:  Optional[int]


.. py:class:: ContextAttributes(j: Dict[str, Any])

   .. py:attribute:: arg_attribs_vec_
      :type:  List[ArgumentAttributes]


   .. py:attribute:: args_bytes_
      :type:  int


   .. py:attribute:: arr_access
      :type:  List[int]


   .. py:attribute:: ret_attribs_vec_
      :type:  List[ArgumentAttributes]


   .. py:attribute:: rets_bytes_
      :type:  int


.. py:class:: Buffer(j: Dict[str, Any])

   .. py:attribute:: root_id
      :type:  int


   .. py:attribute:: type
      :type:  int


.. py:class:: BufferBinding(j: Dict[str, Any])

   .. py:attribute:: binding
      :type:  int


   .. py:attribute:: buffer
      :type:  Buffer


.. py:class:: TextureBinding(j: Dict[str, Any])

   .. py:attribute:: arg_id
      :type:  int


   .. py:attribute:: binding
      :type:  int


   .. py:attribute:: is_storage
      :type:  bool


.. py:class:: RangeForAttributes(j: Dict[str, Any])

   .. py:attribute:: begin
      :type:  int


   .. py:attribute:: const_begin
      :type:  bool


   .. py:attribute:: const_end
      :type:  bool


   .. py:attribute:: end
      :type:  int


.. py:class:: TaskAttributes(j: Dict[str, Any])

   .. py:attribute:: advisory_num_threads_per_group
      :type:  int


   .. py:attribute:: advisory_total_num_threads
      :type:  int


   .. py:attribute:: buffer_binds
      :type:  List[BufferBinding]


   .. py:attribute:: name
      :type:  str
      :value: ''



   .. py:attribute:: range_for_attribs
      :type:  Optional[RangeForAttributes]


   .. py:attribute:: task_type
      :type:  int


   .. py:attribute:: texture_binds
      :type:  List[TextureBinding]


.. py:class:: DeviceCapabilityLevel(j: Dict[str, Any])

   .. py:attribute:: key
      :type:  str
      :value: ''



   .. py:attribute:: value
      :type:  int


.. py:class:: KernelAttributes(j: Dict[str, Any])

   .. py:attribute:: ctx_attribs
      :type:  ContextAttributes


   .. py:attribute:: is_jit_evaluator
      :type:  bool


   .. py:attribute:: name
      :type:  str
      :value: ''



   .. py:attribute:: tasks_attribs
      :type:  List[TaskAttributes]


.. py:class:: Metadata(j: Dict[str, Any])

   .. py:attribute:: fields
      :type:  List[FieldAttributes]


   .. py:attribute:: kernels
      :type:  List[KernelAttributes]


   .. py:attribute:: required_caps
      :type:  List[DeviceCapabilityLevel]


   .. py:attribute:: root_buffer_size
      :type:  int


.. py:function:: from_json_metadata(j: Dict[str, Any]) -> Metadata

.. py:function:: to_json_metadata(meta_data: Metadata) -> Dict[str, Any]

.. py:class:: SymbolicArgument(j: Dict[str, Any])

   .. py:attribute:: dtype_id
      :type:  int


   .. py:attribute:: element_shape
      :type:  List[int]


   .. py:attribute:: field_dim
      :type:  int


   .. py:attribute:: name
      :type:  str
      :value: ''



   .. py:attribute:: num_channels
      :type:  int


   .. py:attribute:: tag
      :type:  int


.. py:class:: Dispatch(j: Dict[str, Any])

   .. py:attribute:: kernel_name
      :type:  str
      :value: ''



   .. py:attribute:: symbolic_args
      :type:  List[SymbolicArgument]


.. py:class:: GraphData(j: Dict[str, Any])

   .. py:attribute:: dispatches


.. py:class:: Graph(j: Dict[str, Any])

   .. py:attribute:: key
      :value: ''



   .. py:attribute:: value


.. py:function:: from_json_graph(j: Dict[str, Any]) -> Graph

.. py:function:: to_json_graph(graph: Graph) -> Dict[str, Any]

