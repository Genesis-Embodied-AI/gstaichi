taichi.lang.matrix_ops
======================

.. py:module:: taichi.lang.matrix_ops


Functions
---------

.. autoapisummary::

   taichi.lang.matrix_ops.rows
   taichi.lang.matrix_ops.cols
   taichi.lang.matrix_ops.E
   taichi.lang.matrix_ops.determinant
   taichi.lang.matrix_ops.inverse
   taichi.lang.matrix_ops.transpose
   taichi.lang.matrix_ops.diag
   taichi.lang.matrix_ops.sum
   taichi.lang.matrix_ops.norm_sqr
   taichi.lang.matrix_ops.norm
   taichi.lang.matrix_ops.norm_inv
   taichi.lang.matrix_ops.normalized
   taichi.lang.matrix_ops.any
   taichi.lang.matrix_ops.all
   taichi.lang.matrix_ops.max
   taichi.lang.matrix_ops.min
   taichi.lang.matrix_ops.trace
   taichi.lang.matrix_ops.fill
   taichi.lang.matrix_ops.matmul
   taichi.lang.matrix_ops.dot
   taichi.lang.matrix_ops.cross
   taichi.lang.matrix_ops.outer_product
   taichi.lang.matrix_ops.cast


Module Contents
---------------

.. py:function:: rows(rows)

.. py:function:: cols(cols)

.. py:function:: E(mat: template(), x: template(), y: template(), n: template())

.. py:function:: determinant(mat)

.. py:function:: inverse(mat)

.. py:function:: transpose(mat)

.. py:function:: diag(dim: template(), val: template())

.. py:function:: sum(mat)

.. py:function:: norm_sqr(mat)

.. py:function:: norm(mat, eps=0.0)

.. py:function:: norm_inv(mat, eps=0.0)

.. py:function:: normalized(vec, eps=0.0)

.. py:function:: any(mat)

.. py:function:: all(mat)

.. py:function:: max(mat)

.. py:function:: min(mat)

.. py:function:: trace(mat)

.. py:function:: fill(mat: template(), val)

.. py:function:: matmul(mat_x, mat_y)

.. py:function:: dot(vec_x, vec_y)

.. py:function:: cross(vec_x, vec_y)

.. py:function:: outer_product(vec_x, vec_y)

.. py:function:: cast(mat, dtype: template())

